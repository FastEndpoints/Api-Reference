### YamlMime:ManagedReference
items:
- uid: FastEndpoints.EndpointOptions
  commentId: T:FastEndpoints.EndpointOptions
  id: EndpointOptions
  parent: FastEndpoints
  children:
  - FastEndpoints.EndpointOptions.AllowEmptyRequestDtos
  - FastEndpoints.EndpointOptions.Configurator
  - FastEndpoints.EndpointOptions.Filter
  - FastEndpoints.EndpointOptions.GlobalResponseModifier
  - FastEndpoints.EndpointOptions.NameGenerator
  - FastEndpoints.EndpointOptions.PrefixNameWithFirstTag
  - FastEndpoints.EndpointOptions.RoutePrefix
  - FastEndpoints.EndpointOptions.ShortNames
  langs:
  - csharp
  - vb
  name: EndpointOptions
  nameWithType: EndpointOptions
  fullName: FastEndpoints.EndpointOptions
  type: Class
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: endpoint registration options
  example: []
  syntax:
    content: public sealed class EndpointOptions
    content.vb: Public NotInheritable Class EndpointOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: FastEndpoints.EndpointOptions.NameGenerator
  commentId: P:FastEndpoints.EndpointOptions.NameGenerator
  id: NameGenerator
  parent: FastEndpoints.EndpointOptions
  langs:
  - csharp
  - vb
  name: NameGenerator
  nameWithType: EndpointOptions.NameGenerator
  fullName: FastEndpoints.EndpointOptions.NameGenerator
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    specify a function to customize the endpoint name/swagger operation id. generate an endpoint name however you wish and return a string

    from your function. all available info for name generation is supplied via the <xref href="FastEndpoints.EndpointNameGenerationContext" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Func<EndpointNameGenerationContext, string> NameGenerator { set; }
    parameters: []
    return:
      type: System.Func{FastEndpoints.EndpointNameGenerationContext,System.String}
    content.vb: Public Property NameGenerator As Func(Of EndpointNameGenerationContext, String)
  overload: FastEndpoints.EndpointOptions.NameGenerator*
- uid: FastEndpoints.EndpointOptions.ShortNames
  commentId: P:FastEndpoints.EndpointOptions.ShortNames
  id: ShortNames
  parent: FastEndpoints.EndpointOptions
  langs:
  - csharp
  - vb
  name: ShortNames
  nameWithType: EndpointOptions.ShortNames
  fullName: FastEndpoints.EndpointOptions.ShortNames
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    set to true if you'd like the endpoint names/ swagger operation ids to be just the endpoint class names instead of the full names including

    namespace.
  example: []
  syntax:
    content: public bool ShortNames { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShortNames As Boolean
  overload: FastEndpoints.EndpointOptions.ShortNames*
- uid: FastEndpoints.EndpointOptions.PrefixNameWithFirstTag
  commentId: P:FastEndpoints.EndpointOptions.PrefixNameWithFirstTag
  id: PrefixNameWithFirstTag
  parent: FastEndpoints.EndpointOptions
  langs:
  - csharp
  - vb
  name: PrefixNameWithFirstTag
  nameWithType: EndpointOptions.PrefixNameWithFirstTag
  fullName: FastEndpoints.EndpointOptions.PrefixNameWithFirstTag
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    set to true if you'd like to automatically prefix endpoint name (swagger operation id) with the first endpoint tag.

    the generated the operation id would be in the form of: <code>MyTag_CreateOrderEndpoint</code>.  this should come in handy with generating separate api clients

    with nswag using the "MultipleClientsFromOperationId" setting  which requires operation ids to be have a group name prefix with an underscore.
  example: []
  syntax:
    content: public bool PrefixNameWithFirstTag { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PrefixNameWithFirstTag As Boolean
  overload: FastEndpoints.EndpointOptions.PrefixNameWithFirstTag*
- uid: FastEndpoints.EndpointOptions.RoutePrefix
  commentId: P:FastEndpoints.EndpointOptions.RoutePrefix
  id: RoutePrefix
  parent: FastEndpoints.EndpointOptions
  langs:
  - csharp
  - vb
  name: RoutePrefix
  nameWithType: EndpointOptions.RoutePrefix
  fullName: FastEndpoints.EndpointOptions.RoutePrefix
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: prefix for all routes (example 'api').
  example: []
  syntax:
    content: public string? RoutePrefix { set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RoutePrefix As String
  overload: FastEndpoints.EndpointOptions.RoutePrefix*
- uid: FastEndpoints.EndpointOptions.Filter
  commentId: P:FastEndpoints.EndpointOptions.Filter
  id: Filter
  parent: FastEndpoints.EndpointOptions
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: EndpointOptions.Filter
  fullName: FastEndpoints.EndpointOptions.Filter
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    a function to filter out endpoints from auto registration.

    the function you set here will be executed for each endpoint during startup.

    you can inspect the EndpointSettings to check what the current endpoint is, if needed.

    return 'false' from the function if you want to exclude an endpoint from registration.

    return 'true' to include.

    this function will execute for each endpoint that has been discovered during startup.
  example: []
  syntax:
    content: public Func<EndpointDefinition, bool>? Filter { set; }
    parameters: []
    return:
      type: System.Func{FastEndpoints.EndpointDefinition,System.Boolean}
    content.vb: Public Property Filter As Func(Of EndpointDefinition, Boolean)
  overload: FastEndpoints.EndpointOptions.Filter*
- uid: FastEndpoints.EndpointOptions.Configurator
  commentId: P:FastEndpoints.EndpointOptions.Configurator
  id: Configurator
  parent: FastEndpoints.EndpointOptions
  langs:
  - csharp
  - vb
  name: Configurator
  nameWithType: EndpointOptions.Configurator
  fullName: FastEndpoints.EndpointOptions.Configurator
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    a configuration action to be performed on each endpoint definition during startup.

    some of the same methods you use inside `Configure()` method are available to be called on the `EndpointDefinition` parameter.

    this can be used to apply a set of common configuration settings globally to all endpoints.

    i.e. apply globally applicable settings here and specify only the settings applicable to individual endpoints from within each endpoints'

    `Configure()` method.

    <pre><code class="lang-csharp">app.UseFastEndpoints(c =&gt; c.Configurator = ep =&gt;

    {
        ep.AllowAnonymous();
        ep.Description(b =&gt; b.Produces&lt;ErrorResponse&gt;(400));
    });</code></pre>
  example: []
  syntax:
    content: public Action<EndpointDefinition>? Configurator { set; }
    parameters: []
    return:
      type: System.Action{FastEndpoints.EndpointDefinition}
    content.vb: Public Property Configurator As Action(Of EndpointDefinition)
  overload: FastEndpoints.EndpointOptions.Configurator*
- uid: FastEndpoints.EndpointOptions.AllowEmptyRequestDtos
  commentId: P:FastEndpoints.EndpointOptions.AllowEmptyRequestDtos
  id: AllowEmptyRequestDtos
  parent: FastEndpoints.EndpointOptions
  langs:
  - csharp
  - vb
  name: AllowEmptyRequestDtos
  nameWithType: EndpointOptions.AllowEmptyRequestDtos
  fullName: FastEndpoints.EndpointOptions.AllowEmptyRequestDtos
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: allows the use of empty request dtos
  example: []
  syntax:
    content: public bool AllowEmptyRequestDtos { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowEmptyRequestDtos As Boolean
  overload: FastEndpoints.EndpointOptions.AllowEmptyRequestDtos*
- uid: FastEndpoints.EndpointOptions.GlobalResponseModifier
  commentId: P:FastEndpoints.EndpointOptions.GlobalResponseModifier
  id: GlobalResponseModifier
  parent: FastEndpoints.EndpointOptions
  langs:
  - csharp
  - vb
  name: GlobalResponseModifier
  nameWithType: EndpointOptions.GlobalResponseModifier
  fullName: FastEndpoints.EndpointOptions.GlobalResponseModifier
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    a global response modifier which will be executed right before any response is written to the response stream, giving you a chance to modify the

    response before being sent.

    the arguments for the func are:

    <pre><code class="lang-csharp">HttpContext : the http context of the current request/response

    object? : response content which may be null</code></pre>
  example: []
  syntax:
    content: public Action<HttpContext, object?>? GlobalResponseModifier { set; }
    parameters: []
    return:
      type: System.Action{Microsoft.AspNetCore.Http.HttpContext,System.Object}
    content.vb: Public Property GlobalResponseModifier As Action(Of HttpContext, Object)
  overload: FastEndpoints.EndpointOptions.GlobalResponseModifier*
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.EndpointNameGenerationContext
  commentId: T:FastEndpoints.EndpointNameGenerationContext
  href: FastEndpoints.EndpointNameGenerationContext.html
  name: EndpointNameGenerationContext
  nameWithType: EndpointNameGenerationContext
  fullName: FastEndpoints.EndpointNameGenerationContext
- uid: FastEndpoints.EndpointOptions.NameGenerator*
  commentId: Overload:FastEndpoints.EndpointOptions.NameGenerator
  href: FastEndpoints.EndpointOptions.html#FastEndpoints_EndpointOptions_NameGenerator
  name: NameGenerator
  nameWithType: EndpointOptions.NameGenerator
  fullName: FastEndpoints.EndpointOptions.NameGenerator
- uid: System.Func{FastEndpoints.EndpointNameGenerationContext,System.String}
  commentId: T:System.Func{FastEndpoints.EndpointNameGenerationContext,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<EndpointNameGenerationContext, string>
  nameWithType: Func<EndpointNameGenerationContext, string>
  fullName: System.Func<FastEndpoints.EndpointNameGenerationContext, string>
  nameWithType.vb: Func(Of EndpointNameGenerationContext, String)
  fullName.vb: System.Func(Of FastEndpoints.EndpointNameGenerationContext, String)
  name.vb: Func(Of EndpointNameGenerationContext, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: FastEndpoints.EndpointNameGenerationContext
    name: EndpointNameGenerationContext
    href: FastEndpoints.EndpointNameGenerationContext.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: FastEndpoints.EndpointNameGenerationContext
    name: EndpointNameGenerationContext
    href: FastEndpoints.EndpointNameGenerationContext.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: FastEndpoints.EndpointOptions.ShortNames*
  commentId: Overload:FastEndpoints.EndpointOptions.ShortNames
  href: FastEndpoints.EndpointOptions.html#FastEndpoints_EndpointOptions_ShortNames
  name: ShortNames
  nameWithType: EndpointOptions.ShortNames
  fullName: FastEndpoints.EndpointOptions.ShortNames
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: FastEndpoints.EndpointOptions.PrefixNameWithFirstTag*
  commentId: Overload:FastEndpoints.EndpointOptions.PrefixNameWithFirstTag
  href: FastEndpoints.EndpointOptions.html#FastEndpoints_EndpointOptions_PrefixNameWithFirstTag
  name: PrefixNameWithFirstTag
  nameWithType: EndpointOptions.PrefixNameWithFirstTag
  fullName: FastEndpoints.EndpointOptions.PrefixNameWithFirstTag
- uid: FastEndpoints.EndpointOptions.RoutePrefix*
  commentId: Overload:FastEndpoints.EndpointOptions.RoutePrefix
  href: FastEndpoints.EndpointOptions.html#FastEndpoints_EndpointOptions_RoutePrefix
  name: RoutePrefix
  nameWithType: EndpointOptions.RoutePrefix
  fullName: FastEndpoints.EndpointOptions.RoutePrefix
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: FastEndpoints.EndpointOptions.Filter*
  commentId: Overload:FastEndpoints.EndpointOptions.Filter
  href: FastEndpoints.EndpointOptions.html#FastEndpoints_EndpointOptions_Filter
  name: Filter
  nameWithType: EndpointOptions.Filter
  fullName: FastEndpoints.EndpointOptions.Filter
- uid: System.Func{FastEndpoints.EndpointDefinition,System.Boolean}
  commentId: T:System.Func{FastEndpoints.EndpointDefinition,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<EndpointDefinition, bool>
  nameWithType: Func<EndpointDefinition, bool>
  fullName: System.Func<FastEndpoints.EndpointDefinition, bool>
  nameWithType.vb: Func(Of EndpointDefinition, Boolean)
  fullName.vb: System.Func(Of FastEndpoints.EndpointDefinition, Boolean)
  name.vb: Func(Of EndpointDefinition, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: FastEndpoints.EndpointDefinition
    name: EndpointDefinition
    href: FastEndpoints.EndpointDefinition.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: FastEndpoints.EndpointDefinition
    name: EndpointDefinition
    href: FastEndpoints.EndpointDefinition.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: FastEndpoints.EndpointOptions.Configurator*
  commentId: Overload:FastEndpoints.EndpointOptions.Configurator
  href: FastEndpoints.EndpointOptions.html#FastEndpoints_EndpointOptions_Configurator
  name: Configurator
  nameWithType: EndpointOptions.Configurator
  fullName: FastEndpoints.EndpointOptions.Configurator
- uid: System.Action{FastEndpoints.EndpointDefinition}
  commentId: T:System.Action{FastEndpoints.EndpointDefinition}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<EndpointDefinition>
  nameWithType: Action<EndpointDefinition>
  fullName: System.Action<FastEndpoints.EndpointDefinition>
  nameWithType.vb: Action(Of EndpointDefinition)
  fullName.vb: System.Action(Of FastEndpoints.EndpointDefinition)
  name.vb: Action(Of EndpointDefinition)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FastEndpoints.EndpointDefinition
    name: EndpointDefinition
    href: FastEndpoints.EndpointDefinition.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FastEndpoints.EndpointDefinition
    name: EndpointDefinition
    href: FastEndpoints.EndpointDefinition.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FastEndpoints.EndpointOptions.AllowEmptyRequestDtos*
  commentId: Overload:FastEndpoints.EndpointOptions.AllowEmptyRequestDtos
  href: FastEndpoints.EndpointOptions.html#FastEndpoints_EndpointOptions_AllowEmptyRequestDtos
  name: AllowEmptyRequestDtos
  nameWithType: EndpointOptions.AllowEmptyRequestDtos
  fullName: FastEndpoints.EndpointOptions.AllowEmptyRequestDtos
- uid: FastEndpoints.EndpointOptions.GlobalResponseModifier*
  commentId: Overload:FastEndpoints.EndpointOptions.GlobalResponseModifier
  href: FastEndpoints.EndpointOptions.html#FastEndpoints_EndpointOptions_GlobalResponseModifier
  name: GlobalResponseModifier
  nameWithType: EndpointOptions.GlobalResponseModifier
  fullName: FastEndpoints.EndpointOptions.GlobalResponseModifier
- uid: System.Action{Microsoft.AspNetCore.Http.HttpContext,System.Object}
  commentId: T:System.Action{Microsoft.AspNetCore.Http.HttpContext,System.Object}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<HttpContext, object>
  nameWithType: Action<HttpContext, object>
  fullName: System.Action<Microsoft.AspNetCore.Http.HttpContext, object>
  nameWithType.vb: Action(Of HttpContext, Object)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Http.HttpContext, Object)
  name.vb: Action(Of HttpContext, Object)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.httpcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.httpcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
