### YamlMime:ManagedReference
items:
- uid: FastEndpoints.RequestBinder`1
  commentId: T:FastEndpoints.RequestBinder`1
  id: RequestBinder`1
  parent: FastEndpoints
  children:
  - FastEndpoints.RequestBinder`1.#ctor
  - FastEndpoints.RequestBinder`1.#ctor(FastEndpoints.BindingSource)
  - FastEndpoints.RequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RequestBinder<TRequest>
  nameWithType: RequestBinder<TRequest>
  fullName: FastEndpoints.RequestBinder<TRequest>
  type: Class
  source:
    id: RequestBinder
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\RequestBinder.cs
    startLine: 18
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe default request binder for a given request dto type\n"
  example: []
  syntax:
    content: 'public class RequestBinder<TRequest> : IRequestBinder<TRequest>'
    typeParameters:
    - id: TRequest
      description: the type of the request dto this binder will be dealing with
    content.vb: >-
      Public Class RequestBinder(Of TRequest)

          Implements IRequestBinder(Of TRequest)
  inheritance:
  - System.Object
  implements:
  - FastEndpoints.IRequestBinder{{TRequest}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RequestBinder(Of TRequest)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: FastEndpoints.RequestBinder(Of TRequest)
  name.vb: RequestBinder(Of TRequest)
- uid: FastEndpoints.RequestBinder`1.#ctor
  commentId: M:FastEndpoints.RequestBinder`1.#ctor
  id: '#ctor'
  parent: FastEndpoints.RequestBinder`1
  langs:
  - csharp
  - vb
  name: RequestBinder()
  nameWithType: RequestBinder<TRequest>.RequestBinder()
  fullName: FastEndpoints.RequestBinder<TRequest>.RequestBinder()
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\RequestBinder.cs
    startLine: 102
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ndefault constructor which enables all binding sources\n"
  example: []
  syntax:
    content: public RequestBinder()
    content.vb: Public Sub New
  overload: FastEndpoints.RequestBinder`1.#ctor*
  nameWithType.vb: RequestBinder(Of TRequest).RequestBinder()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.RequestBinder(Of TRequest).RequestBinder()
- uid: FastEndpoints.RequestBinder`1.#ctor(FastEndpoints.BindingSource)
  commentId: M:FastEndpoints.RequestBinder`1.#ctor(FastEndpoints.BindingSource)
  id: '#ctor(FastEndpoints.BindingSource)'
  parent: FastEndpoints.RequestBinder`1
  langs:
  - csharp
  - vb
  name: RequestBinder(BindingSource)
  nameWithType: RequestBinder<TRequest>.RequestBinder(BindingSource)
  fullName: FastEndpoints.RequestBinder<TRequest>.RequestBinder(FastEndpoints.BindingSource)
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\RequestBinder.cs
    startLine: 117
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nconstructor accepting a bitwise combination of enums which enables only the specified binding sources\n"
  example: []
  syntax:
    content: public RequestBinder(BindingSource enabledSources)
    parameters:
    - id: enabledSources
      type: FastEndpoints.BindingSource
      description: a bitwise combination of enum values
    content.vb: Public Sub New(enabledSources As BindingSource)
  overload: FastEndpoints.RequestBinder`1.#ctor*
  nameWithType.vb: RequestBinder(Of TRequest).RequestBinder(BindingSource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.RequestBinder(Of TRequest).RequestBinder(FastEndpoints.BindingSource)
- uid: FastEndpoints.RequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.RequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  id: BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  parent: FastEndpoints.RequestBinder`1
  langs:
  - csharp
  - vb
  name: BindAsync(BinderContext, CancellationToken)
  nameWithType: RequestBinder<TRequest>.BindAsync(BinderContext, CancellationToken)
  fullName: FastEndpoints.RequestBinder<TRequest>.BindAsync(FastEndpoints.BinderContext, System.Threading.CancellationToken)
  type: Method
  source:
    id: BindAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\RequestBinder.cs
    startLine: 134
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method to customize the request binding logic\n"
  example: []
  syntax:
    content: public virtual async ValueTask<TRequest> BindAsync(BinderContext ctx, CancellationToken cancellation)
    parameters:
    - id: ctx
      type: FastEndpoints.BinderContext
      description: the request binder context which holds all the data required for binding the incoming request
    - id: cancellation
      type: System.Threading.CancellationToken
      description: cancellation token
    return:
      type: System.Threading.Tasks.ValueTask{{TRequest}}
    content.vb: Public Overridable Function BindAsync(ctx As BinderContext, cancellation As CancellationToken) As ValueTask(Of TRequest)
  overload: FastEndpoints.RequestBinder`1.BindAsync*
  exceptions:
  - type: FastEndpoints.ValidationFailureException
    commentId: T:FastEndpoints.ValidationFailureException
    description: thrown if any failures occur during the binding process
  implements:
  - FastEndpoints.IRequestBinder{{TRequest}}.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  nameWithType.vb: RequestBinder(Of TRequest).BindAsync(BinderContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  - async
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.RequestBinder(Of TRequest).BindAsync(FastEndpoints.BinderContext, System.Threading.CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.IRequestBinder{{TRequest}}
  commentId: T:FastEndpoints.IRequestBinder{`0}
  parent: FastEndpoints
  definition: FastEndpoints.IRequestBinder`1
  name: IRequestBinder<TRequest>
  nameWithType: IRequestBinder<TRequest>
  fullName: FastEndpoints.IRequestBinder<TRequest>
  nameWithType.vb: IRequestBinder(Of TRequest)
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest)
  name.vb: IRequestBinder(Of TRequest)
  spec.csharp:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.IRequestBinder`1
  commentId: T:FastEndpoints.IRequestBinder`1
  name: IRequestBinder<TRequest>
  nameWithType: IRequestBinder<TRequest>
  fullName: FastEndpoints.IRequestBinder<TRequest>
  nameWithType.vb: IRequestBinder(Of TRequest)
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest)
  name.vb: IRequestBinder(Of TRequest)
  spec.csharp:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.RequestBinder`1.#ctor*
  commentId: Overload:FastEndpoints.RequestBinder`1.#ctor
  name: RequestBinder
  nameWithType: RequestBinder<TRequest>.RequestBinder
  fullName: FastEndpoints.RequestBinder<TRequest>.RequestBinder
  nameWithType.vb: RequestBinder(Of TRequest).RequestBinder
  fullName.vb: FastEndpoints.RequestBinder(Of TRequest).RequestBinder
- uid: FastEndpoints.BindingSource
  commentId: T:FastEndpoints.BindingSource
  parent: FastEndpoints
  name: BindingSource
  nameWithType: BindingSource
  fullName: FastEndpoints.BindingSource
- uid: FastEndpoints.ValidationFailureException
  commentId: T:FastEndpoints.ValidationFailureException
  name: ValidationFailureException
  nameWithType: ValidationFailureException
  fullName: FastEndpoints.ValidationFailureException
- uid: FastEndpoints.RequestBinder`1.BindAsync*
  commentId: Overload:FastEndpoints.RequestBinder`1.BindAsync
  name: BindAsync
  nameWithType: RequestBinder<TRequest>.BindAsync
  fullName: FastEndpoints.RequestBinder<TRequest>.BindAsync
  nameWithType.vb: RequestBinder(Of TRequest).BindAsync
  fullName.vb: FastEndpoints.RequestBinder(Of TRequest).BindAsync
- uid: FastEndpoints.IRequestBinder{{TRequest}}.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IRequestBinder{`0}.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  parent: FastEndpoints.IRequestBinder{{TRequest}}
  definition: FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  name: BindAsync(BinderContext, CancellationToken)
  nameWithType: IRequestBinder<TRequest>.BindAsync(BinderContext, CancellationToken)
  fullName: FastEndpoints.IRequestBinder<TRequest>.BindAsync(FastEndpoints.BinderContext, System.Threading.CancellationToken)
  nameWithType.vb: IRequestBinder(Of TRequest).BindAsync(BinderContext, CancellationToken)
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest).BindAsync(FastEndpoints.BinderContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
    name: BindAsync
    nameWithType: IRequestBinder<TRequest>.BindAsync
    fullName: FastEndpoints.IRequestBinder<TRequest>.BindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.BinderContext
    name: BinderContext
    nameWithType: BinderContext
    fullName: FastEndpoints.BinderContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
    name: BindAsync
    nameWithType: IRequestBinder(Of TRequest).BindAsync
    fullName: FastEndpoints.IRequestBinder(Of TRequest).BindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.BinderContext
    name: BinderContext
    nameWithType: BinderContext
    fullName: FastEndpoints.BinderContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.BinderContext
  commentId: T:FastEndpoints.BinderContext
  parent: FastEndpoints
  name: BinderContext
  nameWithType: BinderContext
  fullName: FastEndpoints.BinderContext
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask{{TRequest}}
  commentId: T:System.Threading.Tasks.ValueTask{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<TRequest>
  nameWithType: ValueTask<TRequest>
  fullName: System.Threading.Tasks.ValueTask<TRequest>
  nameWithType.vb: ValueTask(Of TRequest)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TRequest)
  name.vb: ValueTask(Of TRequest)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
  isExternal: true
  name: BindAsync(BinderContext, CancellationToken)
  nameWithType: IRequestBinder<TRequest>.BindAsync(BinderContext, CancellationToken)
  fullName: FastEndpoints.IRequestBinder<TRequest>.BindAsync(FastEndpoints.BinderContext, System.Threading.CancellationToken)
  nameWithType.vb: IRequestBinder(Of TRequest).BindAsync(BinderContext, CancellationToken)
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest).BindAsync(FastEndpoints.BinderContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
    name: BindAsync
    nameWithType: IRequestBinder<TRequest>.BindAsync
    fullName: FastEndpoints.IRequestBinder<TRequest>.BindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.BinderContext
    name: BinderContext
    nameWithType: BinderContext
    fullName: FastEndpoints.BinderContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,System.Threading.CancellationToken)
    name: BindAsync
    nameWithType: IRequestBinder(Of TRequest).BindAsync
    fullName: FastEndpoints.IRequestBinder(Of TRequest).BindAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.BinderContext
    name: BinderContext
    nameWithType: BinderContext
    fullName: FastEndpoints.BinderContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
