### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Endpoint`2
  commentId: T:FastEndpoints.Endpoint`2
  id: Endpoint`2
  parent: FastEndpoints
  children:
  - FastEndpoints.Endpoint`2.AccessControl(System.String,System.Nullable{FastEndpoints.Apply},System.String[])
  - FastEndpoints.Endpoint`2.AccessControl(System.String,System.String[])
  - FastEndpoints.Endpoint`2.AddError(FluentValidation.Results.ValidationFailure)
  - FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
  - FastEndpoints.Endpoint`2.AllowAnonymous(System.String[])
  - FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
  - FastEndpoints.Endpoint`2.AllowFormData(System.Boolean)
  - FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
  - FastEndpoints.Endpoint`2.BaseURL
  - FastEndpoints.Endpoint`2.Claims(System.String[])
  - FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
  - FastEndpoints.Endpoint`2.Config
  - FastEndpoints.Endpoint`2.CreateScope
  - FastEndpoints.Endpoint`2.CreateTokenWith``1(System.String,System.Action{FastEndpoints.UserPrivileges},`0)
  - FastEndpoints.Endpoint`2.Delete(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Delete(System.String[])
  - FastEndpoints.Endpoint`2.Description(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  - FastEndpoints.Endpoint`2.DontAutoSendResponse
  - FastEndpoints.Endpoint`2.DontAutoTag
  - FastEndpoints.Endpoint`2.DontCatchExceptions
  - FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  - FastEndpoints.Endpoint`2.EnableAntiforgery
  - FastEndpoints.Endpoint`2.Env
  - FastEndpoints.Endpoint`2.ExecuteAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Files
  - FastEndpoints.Endpoint`2.Form
  - FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.FormMultipartSectionsAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Get(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Get(System.String[])
  - FastEndpoints.Endpoint`2.Group``1
  - FastEndpoints.Endpoint`2.HandleAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Head(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Head(System.String[])
  - FastEndpoints.Endpoint`2.HttpMethod
  - FastEndpoints.Endpoint`2.Logger
  - FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
  - FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.OnAfterValidate(`0)
  - FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
  - FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
  - FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.OnValidationFailed
  - FastEndpoints.Endpoint`2.OnValidationFailedAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Options(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  - FastEndpoints.Endpoint`2.Patch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Patch(System.String[])
  - FastEndpoints.Endpoint`2.Permissions(System.String[])
  - FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
  - FastEndpoints.Endpoint`2.Policies(System.String[])
  - FastEndpoints.Endpoint`2.Policy(System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})
  - FastEndpoints.Endpoint`2.Post(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Post(System.String[])
  - FastEndpoints.Endpoint`2.PostProcessor``1
  - FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  - FastEndpoints.Endpoint`2.PreProcessor``1
  - FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  - FastEndpoints.Endpoint`2.ProcessorState``1
  - FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Put(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Put(System.String[])
  - FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
  - FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
  - FastEndpoints.Endpoint`2.Resolve(System.Type)
  - FastEndpoints.Endpoint`2.Resolve``1
  - FastEndpoints.Endpoint`2.Response
  - FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  - FastEndpoints.Endpoint`2.ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  - FastEndpoints.Endpoint`2.ResponseStarted
  - FastEndpoints.Endpoint`2.Roles(System.String[])
  - FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
  - FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
  - FastEndpoints.Endpoint`2.Routes(System.String[])
  - FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendEmptyJsonObject(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendFileAsync(System.IO.FileInfo,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendForbiddenAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendHeadersAsync(System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendInterceptedAsync(System.Object,System.Int32,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendNoContentAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendNotFoundAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendOkAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendOkAsync(`1,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,System.Boolean)
  - FastEndpoints.Endpoint`2.SendResultAsync(Microsoft.AspNetCore.Http.IResult)
  - FastEndpoints.Endpoint`2.SendStreamAsync(System.IO.Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendUnauthorizedAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SerializerContext``1
  - FastEndpoints.Endpoint`2.SerializerContext``1(``0)
  - FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
  - FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary{`0}})
  - FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary})
  - FastEndpoints.Endpoint`2.Tags(System.String[])
  - FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
  - FastEndpoints.Endpoint`2.ThrowError(FluentValidation.Results.ValidationFailure,System.Nullable{System.Int32})
  - FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Int32})
  - FastEndpoints.Endpoint`2.ThrowError(System.String,System.Nullable{System.Int32})
  - FastEndpoints.Endpoint`2.ThrowIfAnyErrors(System.Nullable{System.Int32})
  - FastEndpoints.Endpoint`2.TryResolve(System.Type)
  - FastEndpoints.Endpoint`2.TryResolve``1
  - FastEndpoints.Endpoint`2.User
  - FastEndpoints.Endpoint`2.ValidationFailed
  - FastEndpoints.Endpoint`2.Validator``1
  - FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  - FastEndpoints.Endpoint`2.Verbs(System.String[])
  - FastEndpoints.Endpoint`2.Version(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: Endpoint<TRequest, TResponse>
  nameWithType: Endpoint<TRequest, TResponse>
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>
  type: Class
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: use this base class for defining endpoints that use both request and response dtos.
  example: []
  syntax:
    content: 'public abstract class Endpoint<TRequest, TResponse> : BaseEndpoint, IEndpoint, IEventBus, IServiceResolverBase where TRequest : notnull'
    typeParameters:
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    content.vb: Public MustInherit Class Endpoint(Of TRequest, TResponse) Inherits BaseEndpoint Implements IEndpoint, IEventBus, IServiceResolverBase
  inheritance:
  - System.Object
  - FastEndpoints.BaseEndpoint
  derivedClasses:
  - FastEndpoints.EndpointWithMapper`2
  - FastEndpoints.EndpointWithMapping`3
  - FastEndpoints.EndpointWithoutRequest
  - FastEndpoints.EndpointWithoutRequest`1
  - FastEndpoints.Endpoint`1
  - FastEndpoints.Endpoint`3
  - FastEndpoints.Ep.Req`1.Res`1
  - FastEndpoints.Security.RefreshTokenService`2
  implements:
  - FastEndpoints.IEndpoint
  - FastEndpoints.IEventBus
  - FastEndpoints.IServiceResolverBase
  inheritedMembers:
  - FastEndpoints.BaseEndpoint.Definition
  - FastEndpoints.BaseEndpoint.HttpContext
  - FastEndpoints.BaseEndpoint.ValidationFailures
  - FastEndpoints.BaseEndpoint.Configure
  - FastEndpoints.BaseEndpoint.GetAclHash(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Endpoint(Of TRequest, TResponse)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse)
  name.vb: Endpoint(Of TRequest, TResponse)
- uid: FastEndpoints.Endpoint`2.HandleAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.HandleAsync(`0,System.Threading.CancellationToken)
  id: HandleAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: HandleAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the handler method for the endpoint. this method is called for each request received.
  example: []
  syntax:
    content: public virtual Task HandleAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function HandleAsync(req As TRequest, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.HandleAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.ExecuteAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.ExecuteAsync(`0,System.Threading.CancellationToken)
  id: ExecuteAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ExecuteAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.ExecuteAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ExecuteAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the handler method for the endpoint that returns the response dto. this method is called for each request received.
  example: []
  syntax:
    content: public virtual Task<TResponse> ExecuteAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Overridable Function ExecuteAsync(req As TRequest, ct As CancellationToken) As Task(Of TResponse)
  overload: FastEndpoints.Endpoint`2.ExecuteAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ExecuteAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ExecuteAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.TryResolve``1
  commentId: M:FastEndpoints.Endpoint`2.TryResolve``1
  id: TryResolve``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: TryResolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve<TService>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.
  example: []
  syntax:
    content: 'public TService? TryResolve<TService>() where TService : class'
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Public Function TryResolve(Of TService As Class)() As TService
  overload: FastEndpoints.Endpoint`2.TryResolve*
  implements:
  - FastEndpoints.IServiceResolverBase.TryResolve``1
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
- uid: FastEndpoints.Endpoint`2.TryResolve(System.Type)
  commentId: M:FastEndpoints.Endpoint`2.TryResolve(System.Type)
  id: TryResolve(System.Type)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: TryResolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve(System.Type)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.
  example: []
  syntax:
    content: public object? TryResolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: System.Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: Public Function TryResolve(typeOfService As Type) As Object
  overload: FastEndpoints.Endpoint`2.TryResolve*
  implements:
  - FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(System.Type)
- uid: FastEndpoints.Endpoint`2.Resolve``1
  commentId: M:FastEndpoints.Endpoint`2.Resolve``1
  id: Resolve``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Resolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.Resolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve<TService>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: resolve an instance for the given type from the dependency injection container. will throw if unresolvable.
  example: []
  syntax:
    content: 'public TService Resolve<TService>() where TService : class'
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Public Function Resolve(Of TService As Class)() As TService
  overload: FastEndpoints.Endpoint`2.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if requested service cannot be resolved
  implements:
  - FastEndpoints.IServiceResolverBase.Resolve``1
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
- uid: FastEndpoints.Endpoint`2.Resolve(System.Type)
  commentId: M:FastEndpoints.Endpoint`2.Resolve(System.Type)
  id: Resolve(System.Type)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Resolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.Resolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve(System.Type)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: resolve an instance for the given type from the dependency injection container. will throw if unresolvable.
  example: []
  syntax:
    content: public object Resolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: System.Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: Public Function Resolve(typeOfService As Type) As Object
  overload: FastEndpoints.Endpoint`2.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if requested service cannot be resolved
  implements:
  - FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(System.Type)
- uid: FastEndpoints.Endpoint`2.CreateScope
  commentId: M:FastEndpoints.Endpoint`2.CreateScope
  id: CreateScope
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: CreateScope()
  nameWithType: Endpoint<TRequest, TResponse>.CreateScope()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.CreateScope()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    if you'd like to resolve scoped or transient services from the MS DI container, obtain a service scope from this method and dispose the scope when

    the work is complete.

    <p>
       <pre><code class="lang-csharp">using var scope = CreateScope();
       var scopedService = scope.Resolve&lt;MyService&gt;();</code></pre></p>
  example: []
  syntax:
    content: public IServiceScope CreateScope()
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceScope
    content.vb: Public Function CreateScope() As IServiceScope
  overload: FastEndpoints.Endpoint`2.CreateScope*
  implements:
  - FastEndpoints.IServiceResolverBase.CreateScope
  nameWithType.vb: Endpoint(Of TRequest, TResponse).CreateScope()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).CreateScope()
- uid: FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
  id: Route``1(System.String,System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Route<T>(string, bool)
  nameWithType: Endpoint<TRequest, TResponse>.Route<T>(string, bool)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Route<T>(string, bool)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    get the value of a given route parameter by specifying the resulting type and param name.

    NOTE: an automatic validation error is sent to the client when value retrieval is not successful.
  example: []
  syntax:
    content: protected T? Route<T>(string paramName, bool isRequired = true)
    parameters:
    - id: paramName
      type: System.String
      description: route parameter name
    - id: isRequired
      type: System.Boolean
      description: set to false for disabling the automatic validation error
    typeParameters:
    - id: T
      description: type of the result
    return:
      type: '{T}'
      description: the value if retrieval is successful or null if <code class="paramref">isRequired</code> is set to false
    content.vb: Protected Function Route(Of T)(paramName As String, isRequired As Boolean = True) As T
  overload: FastEndpoints.Endpoint`2.Route*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Route(Of T)(String, Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Route(Of T)(String, Boolean)
  name.vb: Route(Of T)(String, Boolean)
- uid: FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
  id: Query``1(System.String,System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Query<T>(string, bool)
  nameWithType: Endpoint<TRequest, TResponse>.Query<T>(string, bool)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Query<T>(string, bool)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    get the value of a given query parameter by specifying the resulting type and query parameter name.

    NOTE: an automatic validation error is sent to the client when value retrieval is not successful.
  example: []
  syntax:
    content: protected T? Query<T>(string paramName, bool isRequired = true)
    parameters:
    - id: paramName
      type: System.String
      description: query parameter name
    - id: isRequired
      type: System.Boolean
      description: set to false for disabling the automatic validation error
    typeParameters:
    - id: T
      description: type of the result
    return:
      type: '{T}'
      description: the value if retrieval is successful or null if <code class="paramref">isRequired</code> is set to false
    content.vb: Protected Function Query(Of T)(paramName As String, isRequired As Boolean = True) As T
  overload: FastEndpoints.Endpoint`2.Query*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Query(Of T)(String, Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Query(Of T)(String, Boolean)
  name.vb: Query(Of T)(String, Boolean)
- uid: FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
  id: FormFileSectionsAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: FormFileSectionsAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.FormFileSectionsAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.FormFileSectionsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    gets a stream of nullable <xref href="Microsoft.AspNetCore.WebUtilities.FileMultipartSection" data-throw-if-not-resolved="false"></xref>s from the incoming multipart/form-data without buffering data to memory/disk

    as done with <xref href="Microsoft.AspNetCore.Http.IFormFile" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: protected IAsyncEnumerable<FileMultipartSection?> FormFileSectionsAsync(CancellationToken cancellation = default)
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token
    return:
      type: System.Collections.Generic.IAsyncEnumerable{Microsoft.AspNetCore.WebUtilities.FileMultipartSection}
    content.vb: Protected Function FormFileSectionsAsync(cancellation As CancellationToken = Nothing) As IAsyncEnumerable(Of FileMultipartSection)
  overload: FastEndpoints.Endpoint`2.FormFileSectionsAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).FormFileSectionsAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).FormFileSectionsAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.FormMultipartSectionsAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.FormMultipartSectionsAsync(System.Threading.CancellationToken)
  id: FormMultipartSectionsAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: FormMultipartSectionsAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.FormMultipartSectionsAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.FormMultipartSectionsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: gets a stream of <xref href="FastEndpoints.MultipartSection" data-throw-if-not-resolved="false"></xref>s from the incoming multipart/form-data without buffering to memory/disk.
  example: []
  syntax:
    content: protected IAsyncEnumerable<MultipartSection> FormMultipartSectionsAsync(CancellationToken cancellation = default)
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token
    return:
      type: System.Collections.Generic.IAsyncEnumerable{FastEndpoints.MultipartSection}
    content.vb: Protected Function FormMultipartSectionsAsync(cancellation As CancellationToken = Nothing) As IAsyncEnumerable(Of MultipartSection)
  overload: FastEndpoints.Endpoint`2.FormMultipartSectionsAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).FormMultipartSectionsAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).FormMultipartSectionsAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  id: PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: publishes a given event model to all subscribers registered to handle the that type of event.
  example: []
  syntax:
    content: 'public Task PublishAsync<TEvent>(TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default) where TEvent : notnull'
    parameters:
    - id: eventModel
      type: '{TEvent}'
      description: the notification event model/dto to publish
    - id: waitMode
      type: FastEndpoints.Mode
      description: specify whether to wait for none, any or all of the subscribers to complete their work
    - id: cancellation
      type: System.Threading.CancellationToken
      description: an optional cancellation token
    typeParameters:
    - id: TEvent
      description: the type of the event model
    return:
      type: System.Threading.Tasks.Task
      description: >-
        a Task that matches the wait mode specified.

        <xref href="FastEndpoints.Mode.WaitForNone" data-throw-if-not-resolved="false"></xref> returns an already completed Task (fire and forget).

        <xref href="FastEndpoints.Mode.WaitForAny" data-throw-if-not-resolved="false"></xref> returns a Task that will complete when any of the subscribers complete their work.

        <xref href="FastEndpoints.Mode.WaitForAll" data-throw-if-not-resolved="false"></xref> return a Task that will complete only when all of the subscribers complete their work.
    content.vb: Public Function PublishAsync(Of TEvent)(eventModel As TEvent, waitMode As Mode = Mode.WaitForAll, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.PublishAsync*
  implements:
  - FastEndpoints.IEventBus.PublishAsync``1({TEvent},FastEndpoints.Mode,System.Threading.CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
- uid: FastEndpoints.Endpoint`2.CreateTokenWith``1(System.String,System.Action{FastEndpoints.UserPrivileges},`0)
  commentId: M:FastEndpoints.Endpoint`2.CreateTokenWith``1(System.String,System.Action{FastEndpoints.UserPrivileges},`0)
  id: CreateTokenWith``1(System.String,System.Action{FastEndpoints.UserPrivileges},`0)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: CreateTokenWith<TService>(string, Action<UserPrivileges>, TRequest?)
  nameWithType: Endpoint<TRequest, TResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>, TRequest?)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.CreateTokenWith<TService>(string, System.Action<FastEndpoints.UserPrivileges>, TRequest?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: create the access/refresh token pair response with a given refresh-token service.
  example: []
  syntax:
    content: 'protected Task<TResponse> CreateTokenWith<TService>(string userId, Action<UserPrivileges> userPrivileges, TRequest? request = default) where TService : IRefreshTokenService<TResponse>'
    parameters:
    - id: userId
      type: System.String
      description: the id of the user for which the tokens will be generated for
    - id: userPrivileges
      type: System.Action{FastEndpoints.UserPrivileges}
      description: the user privileges to be embedded in the jwt such as roles/claims/permissions
    - id: request
      type: '{TRequest}'
    typeParameters:
    - id: TService
      description: the type of the token service
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Protected Function CreateTokenWith(Of TService As IRefreshTokenService(Of TResponse))(userId As String, userPrivileges As Action(Of UserPrivileges), request As TRequest = Nothing) As Task(Of TResponse)
  overload: FastEndpoints.Endpoint`2.CreateTokenWith*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).CreateTokenWith(Of TService)(String, Action(Of UserPrivileges), TRequest)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).CreateTokenWith(Of TService)(String, System.Action(Of FastEndpoints.UserPrivileges), TRequest)
  name.vb: CreateTokenWith(Of TService)(String, Action(Of UserPrivileges), TRequest)
- uid: FastEndpoints.Endpoint`2.ProcessorState``1
  commentId: M:FastEndpoints.Endpoint`2.ProcessorState``1
  id: ProcessorState``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ProcessorState<TState>()
  nameWithType: Endpoint<TRequest, TResponse>.ProcessorState<TState>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ProcessorState<TState>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: retrieve the common processor state for this endpoint.
  example: []
  syntax:
    content: 'public TState ProcessorState<TState>() where TState : class, new()'
    typeParameters:
    - id: TState
      description: the type of the processor state
    return:
      type: '{TState}'
    content.vb: Public Function ProcessorState(Of TState As {Class, New})() As TState
  overload: FastEndpoints.Endpoint`2.ProcessorState*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: >-
      thrown if the requested type of the processor state does not match with what's already stored in the

      context
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ProcessorState(Of TState)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ProcessorState(Of TState)()
  name.vb: ProcessorState(Of TState)()
- uid: FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
  id: OnBeforeValidate(`0)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnBeforeValidate(TRequest)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidate(TRequest)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidate(TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something to the request dto before it gets validated.
  example: []
  syntax:
    content: public virtual void OnBeforeValidate(TRequest req)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    content.vb: Public Overridable Sub OnBeforeValidate(req As TRequest)
  overload: FastEndpoints.Endpoint`2.OnBeforeValidate*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidate(TRequest)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidate(TRequest)
- uid: FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,System.Threading.CancellationToken)
  id: OnBeforeValidateAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnBeforeValidateAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidateAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidateAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something to the request dto before it gets validated.
  example: []
  syntax:
    content: public virtual Task OnBeforeValidateAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnBeforeValidateAsync(req As TRequest, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnBeforeValidateAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.OnAfterValidate(`0)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterValidate(`0)
  id: OnAfterValidate(`0)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnAfterValidate(TRequest)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidate(TRequest)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidate(TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something to the request dto after it gets validated.
  example: []
  syntax:
    content: public virtual void OnAfterValidate(TRequest req)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    content.vb: Public Overridable Sub OnAfterValidate(req As TRequest)
  overload: FastEndpoints.Endpoint`2.OnAfterValidate*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidate(TRequest)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidate(TRequest)
- uid: FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,System.Threading.CancellationToken)
  id: OnAfterValidateAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnAfterValidateAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidateAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidateAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something to the request dto after it gets validated.
  example: []
  syntax:
    content: public virtual Task OnAfterValidateAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnAfterValidateAsync(req As TRequest, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnAfterValidateAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidateAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidateAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
  id: OnBeforeHandle(`0)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnBeforeHandle(TRequest)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandle(TRequest)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandle(TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something to the request dto before the handler is executed.
  example: []
  syntax:
    content: public virtual void OnBeforeHandle(TRequest req)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    content.vb: Public Overridable Sub OnBeforeHandle(req As TRequest)
  overload: FastEndpoints.Endpoint`2.OnBeforeHandle*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandle(TRequest)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandle(TRequest)
- uid: FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,System.Threading.CancellationToken)
  id: OnBeforeHandleAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnBeforeHandleAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandleAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandleAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something to the request dto before the handler is executed.
  example: []
  syntax:
    content: public virtual Task OnBeforeHandleAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnBeforeHandleAsync(req As TRequest, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnBeforeHandleAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
  id: OnAfterHandle(`0,`1)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnAfterHandle(TRequest, TResponse)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandle(TRequest, TResponse)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandle(TRequest, TResponse)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something after the handler is executed.
  example: []
  syntax:
    content: public virtual void OnAfterHandle(TRequest req, TResponse res)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: res
      type: '{TResponse}'
      description: the response dto that was sent to the client
    content.vb: Public Overridable Sub OnAfterHandle(req As TRequest, res As TResponse)
  overload: FastEndpoints.Endpoint`2.OnAfterHandle*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandle(TRequest, TResponse)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandle(TRequest, TResponse)
- uid: FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,System.Threading.CancellationToken)
  id: OnAfterHandleAsync(`0,`1,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandleAsync(TRequest, TResponse, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something after the handler is executed.
  example: []
  syntax:
    content: public virtual Task OnAfterHandleAsync(TRequest req, TResponse res, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: res
      type: '{TResponse}'
      description: the response dto that was sent to the client
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnAfterHandleAsync(req As TRequest, res As TResponse, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnAfterHandleAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandleAsync(TRequest, TResponse, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.OnValidationFailed
  commentId: M:FastEndpoints.Endpoint`2.OnValidationFailed
  id: OnValidationFailed
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnValidationFailed()
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailed()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailed()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something when a validation failure occurs.
  example: []
  syntax:
    content: public virtual void OnValidationFailed()
    content.vb: Public Overridable Sub OnValidationFailed()
  overload: FastEndpoints.Endpoint`2.OnValidationFailed*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailed()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailed()
- uid: FastEndpoints.Endpoint`2.OnValidationFailedAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnValidationFailedAsync(System.Threading.CancellationToken)
  id: OnValidationFailedAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnValidationFailedAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailedAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailedAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: override this method if you'd like to do something when a validation failure occurs.
  example: []
  syntax:
    content: public virtual Task OnValidationFailedAsync(CancellationToken ct)
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnValidationFailedAsync(ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnValidationFailedAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailedAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailedAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.User
  commentId: P:FastEndpoints.Endpoint`2.User
  id: User
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: User
  nameWithType: Endpoint<TRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.User
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the current user principal
  example: []
  syntax:
    content: public ClaimsPrincipal User { get; }
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: Public ReadOnly Property User As ClaimsPrincipal
  overload: FastEndpoints.Endpoint`2.User*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).User
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).User
- uid: FastEndpoints.Endpoint`2.Response
  commentId: P:FastEndpoints.Endpoint`2.Response
  id: Response
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: Endpoint<TRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Response
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the response that is sent to the client.
  example: []
  syntax:
    content: public TResponse Response { get; set; }
    parameters: []
    return:
      type: '{TResponse}'
    content.vb: Public Property Response As TResponse
  overload: FastEndpoints.Endpoint`2.Response*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Response
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Response
- uid: FastEndpoints.Endpoint`2.Config
  commentId: P:FastEndpoints.Endpoint`2.Config
  id: Config
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: Endpoint<TRequest, TResponse>.Config
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Config
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    gives access to the configuration. if you need to access this property from within the endpoint Configure() method, make sure to pass in the config

    to <code>.AddFastEndpoints(config: builder.Configuration)</code>
  example: []
  syntax:
    content: public IConfiguration Config { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Configuration.IConfiguration
    content.vb: Public Property Config As IConfiguration
  overload: FastEndpoints.Endpoint`2.Config*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Config
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Config
- uid: FastEndpoints.Endpoint`2.Env
  commentId: P:FastEndpoints.Endpoint`2.Env
  id: Env
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Env
  nameWithType: Endpoint<TRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Env
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: gives access to the hosting environment
  example: []
  syntax:
    content: public IWebHostEnvironment Env { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
    content.vb: Public ReadOnly Property Env As IWebHostEnvironment
  overload: FastEndpoints.Endpoint`2.Env*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Env
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Env
- uid: FastEndpoints.Endpoint`2.Logger
  commentId: P:FastEndpoints.Endpoint`2.Logger
  id: Logger
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Endpoint<TRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Logger
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the logger for the current endpoint type
  example: []
  syntax:
    content: public ILogger Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public ReadOnly Property Logger As ILogger
  overload: FastEndpoints.Endpoint`2.Logger*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Logger
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Logger
- uid: FastEndpoints.Endpoint`2.BaseURL
  commentId: P:FastEndpoints.Endpoint`2.BaseURL
  id: BaseURL
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: BaseURL
  nameWithType: Endpoint<TRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.BaseURL
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the base url of the current request
  example: []
  syntax:
    content: public string BaseURL { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BaseURL As String
  overload: FastEndpoints.Endpoint`2.BaseURL*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).BaseURL
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).BaseURL
- uid: FastEndpoints.Endpoint`2.HttpMethod
  commentId: P:FastEndpoints.Endpoint`2.HttpMethod
  id: HttpMethod
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: HttpMethod
  nameWithType: Endpoint<TRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpMethod
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the http method of the current request
  example: []
  syntax:
    content: public Http HttpMethod { get; }
    parameters: []
    return:
      type: FastEndpoints.Http
    content.vb: Public ReadOnly Property HttpMethod As Http
  overload: FastEndpoints.Endpoint`2.HttpMethod*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpMethod
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpMethod
- uid: FastEndpoints.Endpoint`2.Form
  commentId: P:FastEndpoints.Endpoint`2.Form
  id: Form
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Form
  nameWithType: Endpoint<TRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Form
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the form sent with the request. only populated if content-type is 'application/x-www-form-urlencoded' or 'multipart/form-data'
  example: []
  syntax:
    content: public IFormCollection Form { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.IFormCollection
    content.vb: Public ReadOnly Property Form As IFormCollection
  overload: FastEndpoints.Endpoint`2.Form*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Form
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Form
- uid: FastEndpoints.Endpoint`2.Files
  commentId: P:FastEndpoints.Endpoint`2.Files
  id: Files
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: Endpoint<TRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Files
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the files sent with the request. only populated when content-type is 'multipart/form-data'
  example: []
  syntax:
    content: public IFormFileCollection Files { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.IFormFileCollection
    content.vb: Public ReadOnly Property Files As IFormFileCollection
  overload: FastEndpoints.Endpoint`2.Files*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Files
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Files
- uid: FastEndpoints.Endpoint`2.ResponseStarted
  commentId: P:FastEndpoints.Endpoint`2.ResponseStarted
  id: ResponseStarted
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ResponseStarted
  nameWithType: Endpoint<TRequest, TResponse>.ResponseStarted
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseStarted
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: get or set whether the response has started. you'd only use this if you're writing to the response stream by yourself.
  example: []
  syntax:
    content: public bool ResponseStarted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResponseStarted As Boolean
  overload: FastEndpoints.Endpoint`2.ResponseStarted*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseStarted
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseStarted
- uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,System.Threading.CancellationToken)
  id: SendAsync(`1,System.Int32,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendAsync(TResponse, int, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendAsync(TResponse, int, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync(TResponse, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send the supplied response dto serialized as json to the client.
  example: []
  syntax:
    content: protected Task SendAsync(TResponse response, int statusCode = 200, CancellationToken cancellation = default)
    parameters:
    - id: response
      type: '{TResponse}'
      description: the object to serialize to json
    - id: statusCode
      type: System.Int32
      description: optional custom http status code
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendAsync(response As TResponse, statusCode As Integer = 200, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendAsync(TResponse, Integer, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync(TResponse, Integer, System.Threading.CancellationToken)
  name.vb: SendAsync(TResponse, Integer, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendResultAsync(Microsoft.AspNetCore.Http.IResult)
  commentId: M:FastEndpoints.Endpoint`2.SendResultAsync(Microsoft.AspNetCore.Http.IResult)
  id: SendResultAsync(Microsoft.AspNetCore.Http.IResult)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendResultAsync(IResult)
  nameWithType: Endpoint<TRequest, TResponse>.SendResultAsync(IResult)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendResultAsync(Microsoft.AspNetCore.Http.IResult)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: execute and send any <xref href="Microsoft.AspNetCore.Http.IResult" data-throw-if-not-resolved="false"></xref> produced by the <xref href="Microsoft.AspNetCore.Http.Results" data-throw-if-not-resolved="false"></xref> class in minimal apis.
  example: []
  syntax:
    content: protected Task SendResultAsync(IResult result)
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Http.IResult
      description: >-
        the <xref href="Microsoft.AspNetCore.Http.IResult" data-throw-if-not-resolved="false"></xref> instance to execute such as:

        <pre><code class="lang-csharp">Results.Forbid();

        Results.Ok(...);</code></pre>
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendResultAsync(result As IResult) As Task
  overload: FastEndpoints.Endpoint`2.SendResultAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendResultAsync(IResult)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendResultAsync(Microsoft.AspNetCore.Http.IResult)
- uid: FastEndpoints.Endpoint`2.SendInterceptedAsync(System.Object,System.Int32,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendInterceptedAsync(System.Object,System.Int32,System.Threading.CancellationToken)
  id: SendInterceptedAsync(System.Object,System.Int32,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendInterceptedAsync(object, int, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendInterceptedAsync(object, int, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendInterceptedAsync(object, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    sends an object serialized as json to the client. if a response interceptor has been defined,

    then that will be executed before the normal response is sent.
  example: []
  syntax:
    content: protected Task SendInterceptedAsync(object response, int statusCode = 200, CancellationToken cancellation = default)
    parameters:
    - id: response
      type: System.Object
      description: the object to serialize to json
    - id: statusCode
      type: System.Int32
      description: optional custom http status code
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendInterceptedAsync(response As Object, statusCode As Integer = 200, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendInterceptedAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: will throw if an interceptor has not been defined against the endpoint or globally
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendInterceptedAsync(Object, Integer, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendInterceptedAsync(Object, Integer, System.Threading.CancellationToken)
  name.vb: SendInterceptedAsync(Object, Integer, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  id: SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendCreatedAtAsync<TEndpoint>(object?, TResponse, Http?, int?, bool, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(object?, TResponse, Http?, int?, bool, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(object?, TResponse, FastEndpoints.Http?, int?, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    send a 201 created response with a location header containing where the resource can be retrieved from.

    <p>

    HINT: if pointing to an endpoint with multiple verbs, make sure to specify the 'verb' argument and if pointing to a multi route endpoint,

    specify the 'routeNumber' argument.

    </p><p>

    WARNING: this overload will not add a location header if you've set a custom endpoint name using .WithName() method. use the other overload

    that accepts a string endpoint name instead.

    </p>
  example: []
  syntax:
    content: 'protected Task SendCreatedAtAsync<TEndpoint>(object? routeValues, TResponse responseBody, Http? verb = null, int? routeNumber = null, bool generateAbsoluteUrl = false, CancellationToken cancellation = default) where TEndpoint : IEndpoint'
    parameters:
    - id: routeValues
      type: System.Object
      description: a route values object with key/value pairs of route information
    - id: responseBody
      type: '{TResponse}'
      description: the content to be serialized in the response body
    - id: verb
      type: System.Nullable{FastEndpoints.Http}
      description: only useful when pointing to a multi verb endpoint
    - id: routeNumber
      type: System.Nullable{System.Int32}
      description: only useful when pointing to a multi route endpoint
    - id: generateAbsoluteUrl
      type: System.Boolean
      description: set to true for generating a absolute url instead of relative url for the location header
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint where the resource can be retrieved from
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendCreatedAtAsync(Of TEndpoint As IEndpoint)(routeValues As Object, responseBody As TResponse, verb As Http? = Nothing, routeNumber As Integer? = Nothing, generateAbsoluteUrl As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendCreatedAtAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)(Object, TResponse, Http?, Integer?, Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)(Object, TResponse, FastEndpoints.Http?, Integer?, Boolean, System.Threading.CancellationToken)
  name.vb: SendCreatedAtAsync(Of TEndpoint)(Object, TResponse, Http?, Integer?, Boolean, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,System.Threading.CancellationToken)
  id: SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendCreatedAtAsync(string, object?, TResponse, bool, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync(string, object?, TResponse, bool, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync(string, object?, TResponse, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    send a 201 created response with a location header containing where the resource can be retrieved from.

    <p>

    WARNING: this method is only supported on single verb/route endpoints. it will not produce a `Location` header if used in a multi verb or multi

    route endpoint.

    </p>
  example: []
  syntax:
    content: protected Task SendCreatedAtAsync(string endpointName, object? routeValues, TResponse responseBody, bool generateAbsoluteUrl = false, CancellationToken cancellation = default)
    parameters:
    - id: endpointName
      type: System.String
      description: the name of the endpoint to use for link generation (openapi route id)
    - id: routeValues
      type: System.Object
      description: a route values object with key/value pairs of route information
    - id: responseBody
      type: '{TResponse}'
      description: the content to be serialized in the response body
    - id: generateAbsoluteUrl
      type: System.Boolean
      description: set to true for generating a absolute url instead of relative url for the location header
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendCreatedAtAsync(endpointName As String, routeValues As Object, responseBody As TResponse, generateAbsoluteUrl As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendCreatedAtAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(String, Object, TResponse, Boolean, System.Threading.CancellationToken)
  name.vb: SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  id: SendStringAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendStringAsync(string, int, string, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendStringAsync(string, int, string, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStringAsync(string, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send the supplied string content to the client.
  example: []
  syntax:
    content: protected Task SendStringAsync(string content, int statusCode = 200, string contentType = "text/plain; charset=utf-8", CancellationToken cancellation = default)
    parameters:
    - id: content
      type: System.String
      description: the string to write to the response body
    - id: statusCode
      type: System.Int32
      description: optional custom http status code
    - id: contentType
      type: System.String
      description: optional content type header value
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendStringAsync(content As String, statusCode As Integer = 200, contentType As String = "text/plain; charset=utf-8", cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendStringAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStringAsync(String, Integer, String, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStringAsync(String, Integer, String, System.Threading.CancellationToken)
  name.vb: SendStringAsync(String, Integer, String, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendOkAsync(`1,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendOkAsync(`1,System.Threading.CancellationToken)
  id: SendOkAsync(`1,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendOkAsync(TResponse, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync(TResponse, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync(TResponse, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send an http 200 ok response with the supplied response dto serialized as json to the client.
  example: []
  syntax:
    content: protected Task SendOkAsync(TResponse response, CancellationToken cancellation = default)
    parameters:
    - id: response
      type: '{TResponse}'
      description: the object to serialize to json
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendOkAsync(response As TResponse, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendOkAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync(TResponse, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync(TResponse, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendOkAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendOkAsync(System.Threading.CancellationToken)
  id: SendOkAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendOkAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send an http 200 ok response without any body
  example: []
  syntax:
    content: protected Task SendOkAsync(CancellationToken cancellation = default)
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendOkAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendOkAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,System.Threading.CancellationToken)
  id: SendErrorsAsync(System.Int32,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendErrorsAsync(int, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync(int, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send a 400 bad request with error details of the current validation failures
  example: []
  syntax:
    content: protected Task SendErrorsAsync(int statusCode = 400, CancellationToken cancellation = default)
    parameters:
    - id: statusCode
      type: System.Int32
      description: the status code for the error response
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendErrorsAsync(statusCode As Integer = 400, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendErrorsAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendErrorsAsync(Integer, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync(Integer, System.Threading.CancellationToken)
  name.vb: SendErrorsAsync(Integer, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendNoContentAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendNoContentAsync(System.Threading.CancellationToken)
  id: SendNoContentAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendNoContentAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send a 204 no content response
  example: []
  syntax:
    content: protected Task SendNoContentAsync(CancellationToken cancellation = default)
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendNoContentAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendNoContentAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNoContentAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendNotFoundAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendNotFoundAsync(System.Threading.CancellationToken)
  id: SendNotFoundAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendNotFoundAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send a 404 not found response
  example: []
  syntax:
    content: protected Task SendNotFoundAsync(CancellationToken cancellation = default)
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendNotFoundAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendNotFoundAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNotFoundAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendUnauthorizedAsync(System.Threading.CancellationToken)
  id: SendUnauthorizedAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendUnauthorizedAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send a 401 unauthorized response
  example: []
  syntax:
    content: protected Task SendUnauthorizedAsync(CancellationToken cancellation = default)
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendUnauthorizedAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendUnauthorizedAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendForbiddenAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendForbiddenAsync(System.Threading.CancellationToken)
  id: SendForbiddenAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendForbiddenAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send a 403 unauthorized response
  example: []
  syntax:
    content: protected Task SendForbiddenAsync(CancellationToken cancellation = default)
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendForbiddenAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendForbiddenAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendForbiddenAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,System.Boolean)
  id: SendRedirectAsync(System.String,System.Boolean,System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendRedirectAsync(string, bool, bool)
  nameWithType: Endpoint<TRequest, TResponse>.SendRedirectAsync(string, bool, bool)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendRedirectAsync(string, bool, bool)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send a 302/301 redirect response
  example: []
  syntax:
    content: protected Task SendRedirectAsync(string location, bool isPermanent = false, bool allowRemoteRedirects = false)
    parameters:
    - id: location
      type: System.String
      description: the location to redirect to
    - id: isPermanent
      type: System.Boolean
      description: set to true for a 301 redirect. 302 is the default.
    - id: allowRemoteRedirects
      type: System.Boolean
      description: set to true if it's ok to redirect to remote addresses, which is prone to open redirect attacks.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendRedirectAsync(location As String, isPermanent As Boolean = False, allowRemoteRedirects As Boolean = False) As Task
  overload: FastEndpoints.Endpoint`2.SendRedirectAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: thrown if <code class="paramref">allowRemoteRedirects</code> is not set to true and the supplied url is not local
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendRedirectAsync(String, Boolean, Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendRedirectAsync(String, Boolean, Boolean)
  name.vb: SendRedirectAsync(String, Boolean, Boolean)
- uid: FastEndpoints.Endpoint`2.SendHeadersAsync(System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendHeadersAsync(System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,System.Threading.CancellationToken)
  id: SendHeadersAsync(System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendHeadersAsync(System.Action<Microsoft.AspNetCore.Http.IHeaderDictionary>, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send headers in response to a HEAD request
  example: []
  syntax:
    content: protected Task SendHeadersAsync(Action<IHeaderDictionary> headers, int statusCode = 200, CancellationToken cancellation = default)
    parameters:
    - id: headers
      type: System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary}
      description: an action to be performed on the headers dictionary of the response
    - id: statusCode
      type: System.Int32
      description: optional custom http status code
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendHeadersAsync(headers As Action(Of IHeaderDictionary), statusCode As Integer = 200, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendHeadersAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendHeadersAsync(Action(Of IHeaderDictionary), Integer, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendHeadersAsync(System.Action(Of Microsoft.AspNetCore.Http.IHeaderDictionary), Integer, System.Threading.CancellationToken)
  name.vb: SendHeadersAsync(Action(Of IHeaderDictionary), Integer, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  id: SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendBytesAsync(byte[], string?, string, DateTimeOffset?, bool, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync(byte[], string?, string, DateTimeOffset?, bool, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync(byte[], string?, string, System.DateTimeOffset?, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send a byte array to the client
  example: []
  syntax:
    content: protected Task SendBytesAsync(byte[] bytes, string? fileName = null, string contentType = "application/octet-stream", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: the bytes to send
    - id: fileName
      type: System.String
    - id: contentType
      type: System.String
      description: optional content type to set on the http response
    - id: lastModified
      type: System.Nullable{System.DateTimeOffset}
      description: optional last modified date-time-offset for the data stream
    - id: enableRangeProcessing
      type: System.Boolean
      description: optional switch for enabling range processing
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendBytesAsync(bytes As Byte(), fileName As String = Nothing, contentType As String = "application/octet-stream", lastModified As DateTimeOffset? = Nothing, enableRangeProcessing As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendBytesAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendBytesAsync(Byte(), String, String, DateTimeOffset?, Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync(Byte(), String, String, System.DateTimeOffset?, Boolean, System.Threading.CancellationToken)
  name.vb: SendBytesAsync(Byte(), String, String, DateTimeOffset?, Boolean, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendFileAsync(System.IO.FileInfo,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendFileAsync(System.IO.FileInfo,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  id: SendFileAsync(System.IO.FileInfo,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync(System.IO.FileInfo, string, System.DateTimeOffset?, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send a file to the client
  example: []
  syntax:
    content: protected Task SendFileAsync(FileInfo fileInfo, string contentType = "application/octet-stream", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default)
    parameters:
    - id: fileInfo
      type: System.IO.FileInfo
      description: ''
    - id: contentType
      type: System.String
      description: optional content type to set on the http response
    - id: lastModified
      type: System.Nullable{System.DateTimeOffset}
      description: optional last modified date-time-offset for the data stream
    - id: enableRangeProcessing
      type: System.Boolean
      description: optional switch for enabling range processing
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendFileAsync(fileInfo As FileInfo, contentType As String = "application/octet-stream", lastModified As DateTimeOffset? = Nothing, enableRangeProcessing As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendFileAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendFileAsync(FileInfo, String, DateTimeOffset?, Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync(System.IO.FileInfo, String, System.DateTimeOffset?, Boolean, System.Threading.CancellationToken)
  name.vb: SendFileAsync(FileInfo, String, DateTimeOffset?, Boolean, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendStreamAsync(System.IO.Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendStreamAsync(System.IO.Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  id: SendStreamAsync(System.IO.Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendStreamAsync(Stream, string?, long?, string, DateTimeOffset?, bool, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, string?, long?, string, DateTimeOffset?, bool, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync(System.IO.Stream, string?, long?, string, System.DateTimeOffset?, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send the contents of a stream to the client
  example: []
  syntax:
    content: protected Task SendStreamAsync(Stream stream, string? fileName = null, long? fileLengthBytes = null, string contentType = "application/octet-stream", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: the stream to read the data from
    - id: fileName
      type: System.String
      description: and optional file name to set in the content-disposition header
    - id: fileLengthBytes
      type: System.Nullable{System.Int64}
      description: optional total size of the file/stream
    - id: contentType
      type: System.String
      description: optional content type to set on the http response
    - id: lastModified
      type: System.Nullable{System.DateTimeOffset}
      description: optional last modified date-time-offset for the data stream
    - id: enableRangeProcessing
      type: System.Boolean
      description: optional switch for enabling range processing
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendStreamAsync(stream As Stream, fileName As String = Nothing, fileLengthBytes As Long? = Nothing, contentType As String = "application/octet-stream", lastModified As DateTimeOffset? = Nothing, enableRangeProcessing As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendStreamAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStreamAsync(Stream, String, Long?, String, DateTimeOffset?, Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync(System.IO.Stream, String, Long?, String, System.DateTimeOffset?, Boolean, System.Threading.CancellationToken)
  name.vb: SendStreamAsync(Stream, String, Long?, String, DateTimeOffset?, Boolean, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)
  id: SendEventStreamAsync``1(System.String,System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>(string, System.Collections.Generic.IAsyncEnumerable<T>, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: start a "server-sent-events" data stream for the client asynchronously without blocking any threads
  example: []
  syntax:
    content: protected Task SendEventStreamAsync<T>(string eventName, IAsyncEnumerable<T> eventStream, CancellationToken cancellation = default)
    parameters:
    - id: eventName
      type: System.String
      description: the name of the event stream
    - id: eventStream
      type: System.Collections.Generic.IAsyncEnumerable{{T}}
      description: an IAsyncEnumerable that is the source of the data
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used.
    typeParameters:
    - id: T
      description: the type of the objects being sent in the event stream
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendEventStreamAsync(Of T)(eventName As String, eventStream As IAsyncEnumerable(Of T), cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendEventStreamAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEventStreamAsync(Of T)(String, IAsyncEnumerable(Of T), CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEventStreamAsync(Of T)(String, System.Collections.Generic.IAsyncEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: SendEventStreamAsync(Of T)(String, IAsyncEnumerable(Of T), CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendEmptyJsonObject(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendEmptyJsonObject(System.Threading.CancellationToken)
  id: SendEmptyJsonObject(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendEmptyJsonObject(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendEmptyJsonObject(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEmptyJsonObject(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: send an empty json object in the body
  example: []
  syntax:
    content: protected Task SendEmptyJsonObject(CancellationToken cancellation = default)
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendEmptyJsonObject(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendEmptyJsonObject*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEmptyJsonObject(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEmptyJsonObject(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.AccessControl(System.String,System.Nullable{FastEndpoints.Apply},System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AccessControl(System.String,System.Nullable{FastEndpoints.Apply},System.String[])
  id: AccessControl(System.String,System.Nullable{FastEndpoints.Apply},System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AccessControl(string, Apply?, params string[])
  nameWithType: Endpoint<TRequest, TResponse>.AccessControl(string, Apply?, params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AccessControl(string, FastEndpoints.Apply?, params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    if the 'FastEndpoints.Generator' package is used, calling this method will generate a static class called '{assembly-name}.Auth.Allow'

    with a const field with this <code class="paramref">keyName</code> that has a 3 digit auto generated value (permission code). doesn't do anything without the

    source

    generator package installed.
  example: []
  syntax:
    content: protected void AccessControl(string keyName, Apply? behavior = null, params string[] groupNames)
    parameters:
    - id: keyName
      type: System.String
      description: the name of the constant field to generate
    - id: behavior
      type: System.Nullable{FastEndpoints.Apply}
      description: >-
        specify whether to add the generated permission code as a permission requirement for this endpoint.

        this does the same thing as calling "Permissions(...)" method.

        i.e. if this optional argument is set to <xref href="FastEndpoints.Apply.ToThisEndpoint" data-throw-if-not-resolved="false"></xref>, then a user principal must possess this permission code

        in order to be allowed access to this endpoint. you don't need to explicitly specify it via a <code>Permissions(...)</code> call, when setting the

        <code class="paramref">behavior</code>.
    - id: groupNames
      type: System.String[]
      description: >-
        optionally specify one or more groups (sets of permissions) this <code class="paramref">keyName</code> belongs to.

        for example if you want to generate a const/key called "Edit_Stock_Item" and want to assign it to an "Admin" group as well as a "Manager"

        group, you'd specify it with this parameter. The generated const/key is accessible via "Allow.Admin.Edit_Stock_Item" as well as

        "Allow.Manager.Edit_Stock_Item"
    content.vb: Protected Sub AccessControl(keyName As String, behavior As Apply? = Nothing, ParamArray groupNames As String())
  overload: FastEndpoints.Endpoint`2.AccessControl*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AccessControl(String, Apply?, ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AccessControl(String, FastEndpoints.Apply?, ParamArray String())
  name.vb: AccessControl(String, Apply?, ParamArray String())
- uid: FastEndpoints.Endpoint`2.AccessControl(System.String,System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AccessControl(System.String,System.String[])
  id: AccessControl(System.String,System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AccessControl(string, params string[])
  nameWithType: Endpoint<TRequest, TResponse>.AccessControl(string, params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AccessControl(string, params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    if the 'FastEndpoints.Generator' package is used, calling this method will generate a static class called '{assembly-name}.Auth.Allow'

    with a const field with this <code class="paramref">keyName</code> that has a 3 digit auto generated value (permission code). doesn't do anything without the

    source

    generator package installed.
  example: []
  syntax:
    content: protected void AccessControl(string keyName, params string[] groupNames)
    parameters:
    - id: keyName
      type: System.String
      description: the name of the constant field to generate
    - id: groupNames
      type: System.String[]
      description: >-
        optionally specify one or more groups (sets of permissions) this <code class="paramref">keyName</code> belongs to.

        for example if you want to generate a const/key called "Edit_Stock_Item" and want to assign it to an "Admin" group as well as a "Manager"

        group, you'd specify it with this parameter. The generated const/key is accessible via "Allow.Admin.Edit_Stock_Item" as well as

        "Allow.Manager.Edit_Stock_Item"
    content.vb: Protected Sub AccessControl(keyName As String, ParamArray groupNames As String())
  overload: FastEndpoints.Endpoint`2.AccessControl*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AccessControl(String, ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AccessControl(String, ParamArray String())
  name.vb: AccessControl(String, ParamArray String())
- uid: FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
  id: AllowAnonymous(FastEndpoints.Http[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowAnonymous(params Http[])
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous(params Http[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous(params FastEndpoints.Http[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    allow unauthenticated requests to this endpoint. optionally specify a set of verbs to allow unauthenticated access with.

    i.e. if the endpoint is listening to POST, PUT &amp; PATCH and you specify AllowAnonymous(Http.POST), then only PUT &amp; PATCH will require

    authentication.
  example: []
  syntax:
    content: protected void AllowAnonymous(params Http[] verbs)
    parameters:
    - id: verbs
      type: FastEndpoints.Http[]
    content.vb: Protected Sub AllowAnonymous(ParamArray verbs As Http())
  overload: FastEndpoints.Endpoint`2.AllowAnonymous*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnonymous(ParamArray Http())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous(ParamArray FastEndpoints.Http())
  name.vb: AllowAnonymous(ParamArray Http())
- uid: FastEndpoints.Endpoint`2.AllowAnonymous(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AllowAnonymous(System.String[])
  id: AllowAnonymous(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowAnonymous(string[])
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous(string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous(string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    allow unauthenticated requests to this endpoint for a specified set of http verbs.

    i.e. if the endpoint is listening to POST, PUT &amp; PATCH and you specify AllowAnonymous(Http.POST), then only PUT &amp; PATCH will require

    authentication.
  example: []
  syntax:
    content: protected void AllowAnonymous(string[] verbs)
    parameters:
    - id: verbs
      type: System.String[]
    content.vb: Protected Sub AllowAnonymous(verbs As String())
  overload: FastEndpoints.Endpoint`2.AllowAnonymous*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnonymous(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous(String())
  name.vb: AllowAnonymous(String())
- uid: FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
  id: AllowFileUploads(System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowFileUploads(bool)
  nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads(bool)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads(bool)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: enable file uploads with multipart/form-data content type
  example: []
  syntax:
    content: protected void AllowFileUploads(bool dontAutoBindFormData = false)
    parameters:
    - id: dontAutoBindFormData
      type: System.Boolean
      description: >-
        set 'true' to disable auto binding of form data which enables uploading and reading of large files without buffering to memory/disk.

        you can access the multipart sections for reading via the <xref href="FastEndpoints.Endpoint%602.FormFileSectionsAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> method.
    content.vb: Protected Sub AllowFileUploads(dontAutoBindFormData As Boolean = False)
  overload: FastEndpoints.Endpoint`2.AllowFileUploads*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFileUploads(Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads(Boolean)
  name.vb: AllowFileUploads(Boolean)
- uid: FastEndpoints.Endpoint`2.AllowFormData(System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.AllowFormData(System.Boolean)
  id: AllowFormData(System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowFormData(bool)
  nameWithType: Endpoint<TRequest, TResponse>.AllowFormData(bool)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFormData(bool)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: enable form-data submissions
  example: []
  syntax:
    content: protected void AllowFormData(bool urlEncoded = false)
    parameters:
    - id: urlEncoded
      type: System.Boolean
      description: set to true to accept `application/x-www-form-urlencoded` content instead of `multipart/form-data` content.
    content.vb: Protected Sub AllowFormData(urlEncoded As Boolean = False)
  overload: FastEndpoints.Endpoint`2.AllowFormData*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFormData(Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFormData(Boolean)
  name.vb: AllowFormData(Boolean)
- uid: FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
  id: AuthSchemes(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AuthSchemes(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.AuthSchemes(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AuthSchemes(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify which authentication schemes to use for authenticating requests to this endpoint
  example: []
  syntax:
    content: protected void AuthSchemes(params string[] authSchemeNames)
    parameters:
    - id: authSchemeNames
      type: System.String[]
      description: the authentication scheme names
    content.vb: Protected Sub AuthSchemes(ParamArray authSchemeNames As String())
  overload: FastEndpoints.Endpoint`2.AuthSchemes*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AuthSchemes(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AuthSchemes(ParamArray String())
  name.vb: AuthSchemes(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Claims(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Claims(System.String[])
  id: Claims(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Claims(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Claims(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: allows access if the claims principal has ANY of the given claim types
  example: []
  syntax:
    content: protected void Claims(params string[] claimTypes)
    parameters:
    - id: claimTypes
      type: System.String[]
      description: the claim types
    content.vb: Protected Sub Claims(ParamArray claimTypes As String())
  overload: FastEndpoints.Endpoint`2.Claims*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims(ParamArray String())
  name.vb: Claims(ParamArray String())
- uid: FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
  id: ClaimsAll(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ClaimsAll(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.ClaimsAll(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ClaimsAll(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: allows access if the claims principal has ALL the given claim types
  example: []
  syntax:
    content: protected void ClaimsAll(params string[] claimTypes)
    parameters:
    - id: claimTypes
      type: System.String[]
      description: the claim types
    content.vb: Protected Sub ClaimsAll(ParamArray claimTypes As String())
  overload: FastEndpoints.Endpoint`2.ClaimsAll*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ClaimsAll(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ClaimsAll(ParamArray String())
  name.vb: ClaimsAll(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Delete(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Delete(System.String[])
  id: Delete(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Delete(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Delete(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Delete(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify to listen for DELETE requests on one or more routes.
  example: []
  syntax:
    content: protected void Delete(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Delete(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Delete*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Delete(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Delete(ParamArray String())
  name.vb: Delete(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Delete(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Delete(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Delete(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Delete(string, Expression<Func<TRequest, object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Delete(string, Expression<Func<TRequest, object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Delete(string, System.Linq.Expressions.Expression<System.Func<TRequest, object>>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify a DELETE route pattern using a replacement expression.
  example: []
  syntax:
    content: protected void Delete(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: >-
        the words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.

        the replacement words do not have to match the request dto property names.

        <p><code>/invoice/{@id}/soft-delete</code></p>
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r =&gt; new { r.InvoiceID }</code>
    content.vb: Protected Sub Delete(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Delete*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Delete(String, Expression(Of Func(Of TRequest, Object)))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Delete(String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, Object)))
  name.vb: Delete(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.Description(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Description(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  id: Description(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Description(Action<RouteHandlerBuilder>, bool)
  nameWithType: Endpoint<TRequest, TResponse>.Description(Action<RouteHandlerBuilder>, bool)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Description(System.Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>, bool)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    describe openapi metadata for this endpoint. optionally specify whether you want to clear the default Accepts/Produces metadata.

    <p>

    EXAMPLE: <code>b =&gt; b.Accepts&lt;Request&gt;("text/plain")</code></p>
  example: []
  syntax:
    content: protected void Description(Action<RouteHandlerBuilder> builder, bool clearDefaults = false)
    parameters:
    - id: builder
      type: System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder}
      description: the route handler builder for this endpoint
    - id: clearDefaults
      type: System.Boolean
      description: set to true if the defaults should be cleared
    content.vb: Protected Sub Description(builder As Action(Of RouteHandlerBuilder), clearDefaults As Boolean = False)
  overload: FastEndpoints.Endpoint`2.Description*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Description(Action(Of RouteHandlerBuilder), Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Description(System.Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder), Boolean)
  name.vb: Description(Action(Of RouteHandlerBuilder), Boolean)
- uid: FastEndpoints.Endpoint`2.DontAutoSendResponse
  commentId: M:FastEndpoints.Endpoint`2.DontAutoSendResponse
  id: DontAutoSendResponse
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: DontAutoSendResponse()
  nameWithType: Endpoint<TRequest, TResponse>.DontAutoSendResponse()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontAutoSendResponse()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    disables auto sending of responses when the endpoint handler doesn't explicitly send a response. most useful for allowing a post-processor to

    handle sending of the response.
  example: []
  syntax:
    content: protected void DontAutoSendResponse()
    content.vb: Protected Sub DontAutoSendResponse()
  overload: FastEndpoints.Endpoint`2.DontAutoSendResponse*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontAutoSendResponse()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontAutoSendResponse()
- uid: FastEndpoints.Endpoint`2.DontAutoTag
  commentId: M:FastEndpoints.Endpoint`2.DontAutoTag
  id: DontAutoTag
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: DontAutoTag()
  nameWithType: Endpoint<TRequest, TResponse>.DontAutoTag()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontAutoTag()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: if swagger auto tagging based on path segment is enabled, calling this method will prevent a tag from being added to this endpoint.
  example: []
  syntax:
    content: protected void DontAutoTag()
    content.vb: Protected Sub DontAutoTag()
  overload: FastEndpoints.Endpoint`2.DontAutoTag*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontAutoTag()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontAutoTag()
- uid: FastEndpoints.Endpoint`2.DontCatchExceptions
  commentId: M:FastEndpoints.Endpoint`2.DontCatchExceptions
  id: DontCatchExceptions
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: DontCatchExceptions()
  nameWithType: Endpoint<TRequest, TResponse>.DontCatchExceptions()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontCatchExceptions()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    use this only if you have your own exception catching middleware.

    if this method is called in config, an automatic error response will not be sent to the client by the library.

    all exceptions will be thrown, and it would be the responsibility of your exception catching middleware to handle them.
  example: []
  syntax:
    content: protected void DontCatchExceptions()
    content.vb: Protected Sub DontCatchExceptions()
  overload: FastEndpoints.Endpoint`2.DontCatchExceptions*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontCatchExceptions()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontCatchExceptions()
- uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  commentId: M:FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  id: DontThrowIfValidationFails
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: DontThrowIfValidationFails()
  nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    disable auto validation failure responses (400 bad request with error details) for this endpoint.

    <p>HINT: this only applies to request dto validation.</p>
  example: []
  syntax:
    content: protected void DontThrowIfValidationFails()
    content.vb: Protected Sub DontThrowIfValidationFails()
  overload: FastEndpoints.Endpoint`2.DontThrowIfValidationFails*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
- uid: FastEndpoints.Endpoint`2.EnableAntiforgery
  commentId: M:FastEndpoints.Endpoint`2.EnableAntiforgery
  id: EnableAntiforgery
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: EnableAntiforgery()
  nameWithType: Endpoint<TRequest, TResponse>.EnableAntiforgery()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.EnableAntiforgery()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: enables antiforgery token verification for this endpoint
  example: []
  syntax:
    content: protected void EnableAntiforgery()
    content.vb: Protected Sub EnableAntiforgery()
  overload: FastEndpoints.Endpoint`2.EnableAntiforgery*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).EnableAntiforgery()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).EnableAntiforgery()
- uid: FastEndpoints.Endpoint`2.Get(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Get(System.String[])
  id: Get(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Get(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Get(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Get(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify to listen for GET requests on one or more routes.
  example: []
  syntax:
    content: protected void Get(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub [Get](ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Get*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Get(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Get(ParamArray String())
  name.vb: Get(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Get(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Get(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Get(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Get(string, Expression<Func<TRequest, object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Get(string, Expression<Func<TRequest, object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Get(string, System.Linq.Expressions.Expression<System.Func<TRequest, object>>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify a GET route pattern using a replacement expression.
  example: []
  syntax:
    content: protected void Get(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: >-
        the words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.

        the replacement words do not have to match the request dto property names.

        <p><code>/invoice/{@id}/print/{@pageNum}</code></p>
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r =&gt; new { r.InvoiceID, r.PageNumber }</code>
    content.vb: Protected Sub [Get](routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Get*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Get(String, Expression(Of Func(Of TRequest, Object)))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Get(String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, Object)))
  name.vb: Get(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.Group``1
  commentId: M:FastEndpoints.Endpoint`2.Group``1
  id: Group``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Group<TEndpointGroup>()
  nameWithType: Endpoint<TRequest, TResponse>.Group<TEndpointGroup>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Group<TEndpointGroup>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    if this endpoint is part of an endpoint group, specify the type of the <xref href="FastEndpoints.Group" data-throw-if-not-resolved="false"></xref> concrete class where the common

    configuration for the group is specified.

    <p>

    WARNING: this method can only be called after the endpoint route has been specified.

    </p>
  example: []
  syntax:
    content: 'protected override sealed void Group<TEndpointGroup>() where TEndpointGroup : Group, new()'
    typeParameters:
    - id: TEndpointGroup
      description: the type of your <xref href="FastEndpoints.Group" data-throw-if-not-resolved="false"></xref> concrete class
    content.vb: Protected NotOverridable Overrides Sub Group(Of TEndpointGroup As {Group, New})()
  overridden: FastEndpoints.BaseEndpoint.Group``1
  overload: FastEndpoints.Endpoint`2.Group*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: thrown if endpoint route hasn't yet been specified
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Group(Of TEndpointGroup)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Group(Of TEndpointGroup)()
  name.vb: Group(Of TEndpointGroup)()
- uid: FastEndpoints.Endpoint`2.Head(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Head(System.String[])
  id: Head(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Head(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Head(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Head(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify to listen for HEAD requests on one or more routes.
  example: []
  syntax:
    content: protected void Head(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Head(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Head*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Head(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Head(ParamArray String())
  name.vb: Head(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Head(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Head(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Head(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Head(string, Expression<Func<TRequest, object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Head(string, Expression<Func<TRequest, object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Head(string, System.Linq.Expressions.Expression<System.Func<TRequest, object>>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify a HEAD route pattern using a replacement expression.
  example: []
  syntax:
    content: protected void Head(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: >-
        the words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.

        the replacement words do not have to match the request dto property names.

        <p><code>/invoice/{@id}/print/{@pageNum}</code></p>
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r =&gt; new { r.InvoiceID, r.PageNumber }</code>
    content.vb: Protected Sub Head(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Head*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Head(String, Expression(Of Func(Of TRequest, Object)))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Head(String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, Object)))
  name.vb: Head(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.Options(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  commentId: M:FastEndpoints.Endpoint`2.Options(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  id: Options(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Options(Action<RouteHandlerBuilder>)
  nameWithType: Endpoint<TRequest, TResponse>.Options(Action<RouteHandlerBuilder>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options(System.Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: set endpoint configurations options using an endpoint builder action ///
  example: []
  syntax:
    content: protected void Options(Action<RouteHandlerBuilder> builder)
    parameters:
    - id: builder
      type: System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder}
      description: the builder for this endpoint
    content.vb: Protected Sub Options(builder As Action(Of RouteHandlerBuilder))
  overload: FastEndpoints.Endpoint`2.Options*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Options(Action(Of RouteHandlerBuilder))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Options(System.Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder))
  name.vb: Options(Action(Of RouteHandlerBuilder))
- uid: FastEndpoints.Endpoint`2.Patch(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Patch(System.String[])
  id: Patch(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Patch(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Patch(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Patch(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify to listen for PATCH requests on one or more routes.
  example: []
  syntax:
    content: protected void Patch(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Patch(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Patch*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Patch(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Patch(ParamArray String())
  name.vb: Patch(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Patch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Patch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Patch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Patch(string, Expression<Func<TRequest, object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Patch(string, Expression<Func<TRequest, object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Patch(string, System.Linq.Expressions.Expression<System.Func<TRequest, object>>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify a PATCH route pattern using a replacement expression.
  example: []
  syntax:
    content: protected void Patch(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: >-
        the words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.

        the replacement words do not have to match the request dto property names.

        <p><code>/invoice/{@id}</code></p>
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r =&gt; new { r.InvoiceID }</code>
    content.vb: Protected Sub Patch(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Patch*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Patch(String, Expression(Of Func(Of TRequest, Object)))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Patch(String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, Object)))
  name.vb: Patch(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Permissions(System.String[])
  id: Permissions(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Permissions(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Permissions(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: allows access if the claims principal has ANY of the given permissions
  example: []
  syntax:
    content: protected void Permissions(params string[] permissions)
    parameters:
    - id: permissions
      type: System.String[]
      description: the permissions
    content.vb: Protected Sub Permissions(ParamArray permissions As String())
  overload: FastEndpoints.Endpoint`2.Permissions*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions(ParamArray String())
  name.vb: Permissions(ParamArray String())
- uid: FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
  id: PermissionsAll(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PermissionsAll(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.PermissionsAll(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PermissionsAll(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: allows access if the claims principal has ALL the given permissions
  example: []
  syntax:
    content: protected void PermissionsAll(params string[] permissions)
    parameters:
    - id: permissions
      type: System.String[]
      description: the permissions
    content.vb: Protected Sub PermissionsAll(ParamArray permissions As String())
  overload: FastEndpoints.Endpoint`2.PermissionsAll*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PermissionsAll(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PermissionsAll(ParamArray String())
  name.vb: PermissionsAll(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Policy(System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})
  commentId: M:FastEndpoints.Endpoint`2.Policy(System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})
  id: Policy(System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Policy(Action<AuthorizationPolicyBuilder>)
  nameWithType: Endpoint<TRequest, TResponse>.Policy(Action<AuthorizationPolicyBuilder>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policy(System.Action<Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify an action for building an authorization requirement which applies only to this endpoint.
  example: []
  syntax:
    content: protected void Policy(Action<AuthorizationPolicyBuilder> policy)
    parameters:
    - id: policy
      type: System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder}
      description: the policy builder action
    content.vb: Protected Sub Policy(policy As Action(Of AuthorizationPolicyBuilder))
  overload: FastEndpoints.Endpoint`2.Policy*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policy(Action(Of AuthorizationPolicyBuilder))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policy(System.Action(Of Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder))
  name.vb: Policy(Action(Of AuthorizationPolicyBuilder))
- uid: FastEndpoints.Endpoint`2.Policies(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Policies(System.String[])
  id: Policies(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Policies(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Policies(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    specify one or more authorization policy names you have added to the middleware pipeline during app startup/ service configuration that should be

    applied to this endpoint.
  example: []
  syntax:
    content: protected void Policies(params string[] policyNames)
    parameters:
    - id: policyNames
      type: System.String[]
      description: one or more policy names (must have been added to the pipeline on startup)
    content.vb: Protected Sub Policies(ParamArray policyNames As String())
  overload: FastEndpoints.Endpoint`2.Policies*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policies(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies(ParamArray String())
  name.vb: Policies(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Post(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Post(System.String[])
  id: Post(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Post(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Post(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Post(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify to listen for POST requests on one or more routes.
  example: []
  syntax:
    content: protected void Post(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Post(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Post*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Post(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Post(ParamArray String())
  name.vb: Post(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Post(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Post(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Post(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Post(string, Expression<Func<TRequest, object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Post(string, Expression<Func<TRequest, object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Post(string, System.Linq.Expressions.Expression<System.Func<TRequest, object>>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify a POST route pattern using a replacement expression.
  example: []
  syntax:
    content: protected void Post(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: >-
        the words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.

        the replacement words do not have to match the request dto property names.

        <p><code>/invoice/{@id}/page/{@pageNum}</code></p>
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r =&gt; new { r.InvoiceID, r.PageNumber }</code>
    content.vb: Protected Sub Post(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Post*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Post(String, Expression(Of Func(Of TRequest, Object)))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Post(String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, Object)))
  name.vb: Post(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.PostProcessor``1
  commentId: M:FastEndpoints.Endpoint`2.PostProcessor``1
  id: PostProcessor``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PostProcessor<TPostProcessor>()
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessor<TPostProcessor>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessor<TPostProcessor>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    configure a  post-processor to be executed after the main handler function is done. call this method multiple times to add multiple post-processors.

    processors are executed in the order they are configured in the endpoint.
  example: []
  syntax:
    content: 'protected void PostProcessor<TPostProcessor>() where TPostProcessor : class, IPostProcessor<TRequest, TResponse>'
    typeParameters:
    - id: TPostProcessor
      description: the post-processor to add
    content.vb: Protected Sub PostProcessor(Of TPostProcessor As {Class, IPostProcessor(Of TRequest, TResponse)})()
  overload: FastEndpoints.Endpoint`2.PostProcessor*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessor(Of TPostProcessor)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessor(Of TPostProcessor)()
  name.vb: PostProcessor(Of TPostProcessor)()
- uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  commentId: M:FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  id: PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PostProcessors(params IPostProcessor<TRequest, TResponse>[])
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessors(params IPostProcessor<TRequest, TResponse>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors(params FastEndpoints.IPostProcessor<TRequest, TResponse>[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    configure a collection of post-processors to be executed after the main handler function is done. processors are executed in the order they are  defined

    here.
  example: []
  syntax:
    content: protected void PostProcessors(params IPostProcessor<TRequest, TResponse>[] postProcessors)
    parameters:
    - id: postProcessors
      type: FastEndpoints.IPostProcessor{{TRequest},{TResponse}}[]
      description: the post processors to be executed
    content.vb: Protected Sub PostProcessors(ParamArray postProcessors As IPostProcessor(Of TRequest, TResponse)())
  overload: FastEndpoints.Endpoint`2.PostProcessors*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessors(ParamArray IPostProcessor(Of TRequest, TResponse)())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors(ParamArray FastEndpoints.IPostProcessor(Of TRequest, TResponse)())
  name.vb: PostProcessors(ParamArray IPostProcessor(Of TRequest, TResponse)())
- uid: FastEndpoints.Endpoint`2.PreProcessor``1
  commentId: M:FastEndpoints.Endpoint`2.PreProcessor``1
  id: PreProcessor``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PreProcessor<TPreProcessor>()
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessor<TPreProcessor>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessor<TPreProcessor>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    configure a  pre-processor to be executed before the main handler function is called. call this method multiple times to add multiple pre-processors.

    processors are executed in the order they are configured in the endpoint.
  example: []
  syntax:
    content: 'protected void PreProcessor<TPreProcessor>() where TPreProcessor : class, IPreProcessor<TRequest>'
    typeParameters:
    - id: TPreProcessor
      description: the pre-processor to add
    content.vb: Protected Sub PreProcessor(Of TPreProcessor As {Class, IPreProcessor(Of TRequest)})()
  overload: FastEndpoints.Endpoint`2.PreProcessor*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessor(Of TPreProcessor)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessor(Of TPreProcessor)()
  name.vb: PreProcessor(Of TPreProcessor)()
- uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  commentId: M:FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  id: PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PreProcessors(params IPreProcessor<TRequest>[])
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessors(params IPreProcessor<TRequest>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors(params FastEndpoints.IPreProcessor<TRequest>[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    configure a collection of pre-processors to be executed before the main handler function is called. processors are executed in the order they are defined

    here.
  example: []
  syntax:
    content: protected void PreProcessors(params IPreProcessor<TRequest>[] preProcessors)
    parameters:
    - id: preProcessors
      type: FastEndpoints.IPreProcessor{{TRequest}}[]
      description: the pre-processors to be executed
    content.vb: Protected Sub PreProcessors(ParamArray preProcessors As IPreProcessor(Of TRequest)())
  overload: FastEndpoints.Endpoint`2.PreProcessors*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessors(ParamArray IPreProcessor(Of TRequest)())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors(ParamArray FastEndpoints.IPreProcessor(Of TRequest)())
  name.vb: PreProcessors(ParamArray IPreProcessor(Of TRequest)())
- uid: FastEndpoints.Endpoint`2.Put(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Put(System.String[])
  id: Put(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Put(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Put(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Put(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify to listen for PUT requests on one or more routes.
  example: []
  syntax:
    content: protected void Put(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Put(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Put*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Put(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Put(ParamArray String())
  name.vb: Put(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Put(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Put(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Put(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Put(string, Expression<Func<TRequest, object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Put(string, Expression<Func<TRequest, object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Put(string, System.Linq.Expressions.Expression<System.Func<TRequest, object>>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify a PUT route pattern using a replacement expression.
  example: []
  syntax:
    content: protected void Put(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: >-
        the words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.

        the replacement words do not have to match the request dto property names.

        <p><code>/invoice/{@id}/page/{@pageNum}</code></p>
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r =&gt; new { r.InvoiceID, r.PageNumber }</code>
    content.vb: Protected Sub Put(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Put*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Put(String, Expression(Of Func(Of TRequest, Object)))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Put(String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, Object)))
  name.vb: Put(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
  commentId: M:FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
  id: RequestBinder(FastEndpoints.IRequestBinder{`0})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: RequestBinder(IRequestBinder<TRequest>)
  nameWithType: Endpoint<TRequest, TResponse>.RequestBinder(IRequestBinder<TRequest>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RequestBinder(FastEndpoints.IRequestBinder<TRequest>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    configure custom model binding for this endpoint by supplying an IRequestBinder implementation.

    by calling this method, you're completely bypassing the built-in model binding and taking things into your own hands for this endpoint.
  example: []
  syntax:
    content: protected void RequestBinder(IRequestBinder<TRequest> binder)
    parameters:
    - id: binder
      type: FastEndpoints.IRequestBinder{{TRequest}}
      description: custom model binder implementation to use for this endpoint
    content.vb: Protected Sub RequestBinder(binder As IRequestBinder(Of TRequest))
  overload: FastEndpoints.Endpoint`2.RequestBinder*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RequestBinder(IRequestBinder(Of TRequest))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RequestBinder(FastEndpoints.IRequestBinder(Of TRequest))
  name.vb: RequestBinder(IRequestBinder(Of TRequest))
- uid: FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  commentId: M:FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  id: ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ResponseCache(int, ResponseCacheLocation, bool, string?, string[]?)
  nameWithType: Endpoint<TRequest, TResponse>.ResponseCache(int, ResponseCacheLocation, bool, string?, string[]?)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseCache(int, Microsoft.AspNetCore.Mvc.ResponseCacheLocation, bool, string?, string[]?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify response caching settings for this endpoint
  example: []
  syntax:
    content: protected void ResponseCache(int durationSeconds, ResponseCacheLocation location = ResponseCacheLocation.Any, bool noStore = false, string? varyByHeader = null, string[]? varyByQueryKeys = null)
    parameters:
    - id: durationSeconds
      type: System.Int32
      description: the duration in seconds for which the response is cached
    - id: location
      type: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
      description: the location where the data from a particular URL must be cached
    - id: noStore
      type: System.Boolean
      description: specify whether the data should be stored or not
    - id: varyByHeader
      type: System.String
      description: the value for the Vary response header
    - id: varyByQueryKeys
      type: System.String[]
      description: the query keys to vary by
    content.vb: Protected Sub ResponseCache(durationSeconds As Integer, location As ResponseCacheLocation = ResponseCacheLocation.Any, noStore As Boolean = False, varyByHeader As String = Nothing, varyByQueryKeys As String() = Nothing)
  overload: FastEndpoints.Endpoint`2.ResponseCache*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseCache(Integer, ResponseCacheLocation, Boolean, String, String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseCache(Integer, Microsoft.AspNetCore.Mvc.ResponseCacheLocation, Boolean, String, String())
  name.vb: ResponseCache(Integer, ResponseCacheLocation, Boolean, String, String())
- uid: FastEndpoints.Endpoint`2.ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  commentId: M:FastEndpoints.Endpoint`2.ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  id: ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ResponseInterceptor(IResponseInterceptor)
  nameWithType: Endpoint<TRequest, TResponse>.ResponseInterceptor(IResponseInterceptor)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    configure a response interceptor to be called before the SendAsync response is sent to the browser.

    this will override any globally configured interceptor. if you return a response to the browser, then

    the rest of the SendAsync method will be skipped.
  example: []
  syntax:
    content: protected void ResponseInterceptor(IResponseInterceptor responseInterceptor)
    parameters:
    - id: responseInterceptor
      type: FastEndpoints.IResponseInterceptor
      description: the response interceptor to be executed
    content.vb: Protected Sub ResponseInterceptor(responseInterceptor As IResponseInterceptor)
  overload: FastEndpoints.Endpoint`2.ResponseInterceptor*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseInterceptor(IResponseInterceptor)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseInterceptor(FastEndpoints.IResponseInterceptor)
- uid: FastEndpoints.Endpoint`2.Roles(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Roles(System.String[])
  id: Roles(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Roles(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Roles(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: allows access if the claims principal has ANY of the given roles
  example: []
  syntax:
    content: protected void Roles(params string[] rolesNames)
    parameters:
    - id: rolesNames
      type: System.String[]
      description: one or more roles that has access
    content.vb: Protected Sub Roles(ParamArray rolesNames As String())
  overload: FastEndpoints.Endpoint`2.Roles*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Roles(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles(ParamArray String())
  name.vb: Roles(ParamArray String())
- uid: FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
  commentId: M:FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
  id: RoutePrefixOverride(System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: RoutePrefixOverride(string)
  nameWithType: Endpoint<TRequest, TResponse>.RoutePrefixOverride(string)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RoutePrefixOverride(string)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    specify an override route prefix for this endpoint if a global route prefix is enabled.

    this is ignored if a global route prefix is not configured.

    global prefix can be ignored by setting <code>string.Empty</code>
  example: []
  syntax:
    content: protected void RoutePrefixOverride(string routePrefix)
    parameters:
    - id: routePrefix
      type: System.String
      description: route prefix value
    content.vb: Protected Sub RoutePrefixOverride(routePrefix As String)
  overload: FastEndpoints.Endpoint`2.RoutePrefixOverride*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RoutePrefixOverride(String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RoutePrefixOverride(String)
  name.vb: RoutePrefixOverride(String)
- uid: FastEndpoints.Endpoint`2.Routes(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Routes(System.String[])
  id: Routes(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Routes(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Routes(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify one or more route patterns this endpoint should be listening for
  example: []
  syntax:
    content: protected void Routes(params string[] patterns)
    parameters:
    - id: patterns
      type: System.String[]
    content.vb: Protected Sub Routes(ParamArray patterns As String())
  overload: FastEndpoints.Endpoint`2.Routes*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Routes(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes(ParamArray String())
  name.vb: Routes(ParamArray String())
- uid: FastEndpoints.Endpoint`2.SerializerContext``1(``0)
  commentId: M:FastEndpoints.Endpoint`2.SerializerContext``1(``0)
  id: SerializerContext``1(``0)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SerializerContext<TContext>(TContext)
  nameWithType: Endpoint<TRequest, TResponse>.SerializerContext<TContext>(TContext)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SerializerContext<TContext>(TContext)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify the json serializer context if code generation for request/response dtos is being used by supplying your own instance.
  example: []
  syntax:
    content: 'protected void SerializerContext<TContext>(TContext serializerContext) where TContext : JsonSerializerContext'
    parameters:
    - id: serializerContext
      type: '{TContext}'
    typeParameters:
    - id: TContext
      description: the type of the json serializer context for this endpoint
    content.vb: Protected Sub SerializerContext(Of TContext As JsonSerializerContext)(serializerContext As TContext)
  overload: FastEndpoints.Endpoint`2.SerializerContext*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)(TContext)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)(TContext)
  name.vb: SerializerContext(Of TContext)(TContext)
- uid: FastEndpoints.Endpoint`2.SerializerContext``1
  commentId: M:FastEndpoints.Endpoint`2.SerializerContext``1
  id: SerializerContext``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SerializerContext<TContext>()
  nameWithType: Endpoint<TRequest, TResponse>.SerializerContext<TContext>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SerializerContext<TContext>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    specify the type of the json serializer context if code generation for request/response dtos is being used.

    the json serializer context will be instantiated with <xref href="FastEndpoints.SerializerOptions" data-throw-if-not-resolved="false"></xref> from the UseFastEndpoints(...) call.
  example: []
  syntax:
    content: 'protected void SerializerContext<TContext>() where TContext : JsonSerializerContext'
    typeParameters:
    - id: TContext
      description: the type of the json serializer context for this endpoint
    content.vb: Protected Sub SerializerContext(Of TContext As JsonSerializerContext)()
  overload: FastEndpoints.Endpoint`2.SerializerContext*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)()
  name.vb: SerializerContext(Of TContext)()
- uid: FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary})
  commentId: M:FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary})
  id: Summary(System.Action{FastEndpoints.EndpointSummary})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Summary(Action<EndpointSummary>)
  nameWithType: Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary(System.Action<FastEndpoints.EndpointSummary>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: provide a summary/description for this endpoint to be used in swagger/ openapi
  example: []
  syntax:
    content: protected void Summary(Action<EndpointSummary> endpointSummary)
    parameters:
    - id: endpointSummary
      type: System.Action{FastEndpoints.EndpointSummary}
      description: an action that sets values of an endpoint summary object
    content.vb: Protected Sub Summary(endpointSummary As Action(Of EndpointSummary))
  overload: FastEndpoints.Endpoint`2.Summary*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary(Action(Of EndpointSummary))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary(System.Action(Of FastEndpoints.EndpointSummary))
  name.vb: Summary(Action(Of EndpointSummary))
- uid: FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary{`0}})
  commentId: M:FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary{`0}})
  id: Summary(System.Action{FastEndpoints.EndpointSummary{`0}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Summary(Action<EndpointSummary<TRequest>>)
  nameWithType: Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary<TRequest>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary(System.Action<FastEndpoints.EndpointSummary<TRequest>>)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: provide a summary/description for this endpoint to be used in swagger/ openapi
  example: []
  syntax:
    content: protected void Summary(Action<EndpointSummary<TRequest>> endpointSummary)
    parameters:
    - id: endpointSummary
      type: System.Action{FastEndpoints.EndpointSummary{{TRequest}}}
      description: an action that sets values of an endpoint summary object
    content.vb: Protected Sub Summary(endpointSummary As Action(Of EndpointSummary(Of TRequest)))
  overload: FastEndpoints.Endpoint`2.Summary*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary(Action(Of EndpointSummary(Of TRequest)))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary(System.Action(Of FastEndpoints.EndpointSummary(Of TRequest)))
  name.vb: Summary(Action(Of EndpointSummary(Of TRequest)))
- uid: FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
  commentId: M:FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
  id: Summary(FastEndpoints.EndpointSummary)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Summary(EndpointSummary)
  nameWithType: Endpoint<TRequest, TResponse>.Summary(EndpointSummary)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary(FastEndpoints.EndpointSummary)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: provide a summary/description for this endpoint to be used in swagger/ openapi
  example: []
  syntax:
    content: protected void Summary(EndpointSummary endpointSummary)
    parameters:
    - id: endpointSummary
      type: FastEndpoints.EndpointSummary
      description: an endpoint summary instance
    content.vb: Protected Sub Summary(endpointSummary As EndpointSummary)
  overload: FastEndpoints.Endpoint`2.Summary*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary(EndpointSummary)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary(FastEndpoints.EndpointSummary)
- uid: FastEndpoints.Endpoint`2.Tags(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Tags(System.String[])
  id: Tags(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Tags(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Tags(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Tags(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    specify one or more string tags for this endpoint so they can be used in the exclusion filter during registration.

    <p>HINT: these tags have nothing to do with swagger tags!</p>
  example: []
  syntax:
    content: protected void Tags(params string[] endpointTags)
    parameters:
    - id: endpointTags
      type: System.String[]
      description: the tag values to associate with this endpoint
    content.vb: Protected Sub Tags(ParamArray endpointTags As String())
  overload: FastEndpoints.Endpoint`2.Tags*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Tags(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Tags(ParamArray String())
  name.vb: Tags(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
  commentId: M:FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
  id: Throttle(System.Int32,System.Double,System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Throttle(int, double, string?)
  nameWithType: Endpoint<TRequest, TResponse>.Throttle(int, double, string?)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Throttle(int, double, string?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: rate limit requests to this endpoint based on a request http header sent by the client.
  example: []
  syntax:
    content: protected void Throttle(int hitLimit, double durationSeconds, string? headerName = null)
    parameters:
    - id: hitLimit
      type: System.Int32
      description: how many requests are allowed within the given duration
    - id: durationSeconds
      type: System.Double
      description: the frequency in seconds where the accrued hit count should be reset
    - id: headerName
      type: System.String
      description: >-
        the name of the request header used to uniquely identify clients.

        header name can also be configured globally using <code>app.UseFastEndpoints(c=&gt; c.ThrottleOptions...)</code>

        not specifying a header name will first look for 'X-Forwarded-For' header and if not present, will use `HttpContext.Connection.RemoteIpAddress`.
    content.vb: Protected Sub Throttle(hitLimit As Integer, durationSeconds As Double, headerName As String = Nothing)
  overload: FastEndpoints.Endpoint`2.Throttle*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Throttle(Integer, Double, String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Throttle(Integer, Double, String)
  name.vb: Throttle(Integer, Double, String)
- uid: FastEndpoints.Endpoint`2.Validator``1
  commentId: M:FastEndpoints.Endpoint`2.Validator``1
  id: Validator``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Validator<TValidator>()
  nameWithType: Endpoint<TRequest, TResponse>.Validator<TValidator>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Validator<TValidator>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    specify the validator that should be used for this endpoint.

    <p>

    TIP: you only need to call this method if you have more than one validator for the same request dto in the solution or if you just want to be

    explicit about what validator is used by the endpoint.

    </p>
  example: []
  syntax:
    content: 'protected void Validator<TValidator>() where TValidator : IValidator'
    typeParameters:
    - id: TValidator
      description: the type of the validator
    content.vb: Protected Sub Validator(Of TValidator As IValidator)()
  overload: FastEndpoints.Endpoint`2.Validator*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Validator(Of TValidator)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Validator(Of TValidator)()
  name.vb: Validator(Of TValidator)()
- uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  id: Verbs(FastEndpoints.Http[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Verbs(params Http[])
  nameWithType: Endpoint<TRequest, TResponse>.Verbs(params Http[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs(params FastEndpoints.Http[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify one or more http method verbs this endpoint should be accepting requests for
  example: []
  syntax:
    content: protected void Verbs(params Http[] methods)
    parameters:
    - id: methods
      type: FastEndpoints.Http[]
    content.vb: Protected Sub Verbs(ParamArray methods As Http())
  overload: FastEndpoints.Endpoint`2.Verbs*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs(ParamArray Http())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs(ParamArray FastEndpoints.Http())
  name.vb: Verbs(ParamArray Http())
- uid: FastEndpoints.Endpoint`2.Verbs(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Verbs(System.String[])
  id: Verbs(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Verbs(params string[])
  nameWithType: Endpoint<TRequest, TResponse>.Verbs(params string[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs(params string[])
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify one or more http method verbs this endpoint should be accepting requests for
  example: []
  syntax:
    content: public override sealed void Verbs(params string[] methods)
    parameters:
    - id: methods
      type: System.String[]
    content.vb: Public NotOverridable Overrides Sub Verbs(ParamArray methods As String())
  overridden: FastEndpoints.BaseEndpoint.Verbs(System.String[])
  overload: FastEndpoints.Endpoint`2.Verbs*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs(ParamArray String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs(ParamArray String())
  name.vb: Verbs(ParamArray String())
- uid: FastEndpoints.Endpoint`2.Version(System.Int32,System.Int32)
  commentId: M:FastEndpoints.Endpoint`2.Version(System.Int32,System.Int32)
  id: Version(System.Int32,System.Int32)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Version(int, int)
  nameWithType: Endpoint<TRequest, TResponse>.Version(int, int)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Version(int, int)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: specify the version of this endpoint.
  example: []
  syntax:
    content: protected EpVersion Version(int version, int deprecateAt = 0)
    parameters:
    - id: version
      type: System.Int32
      description: the version of this endpoint
    - id: deprecateAt
      type: System.Int32
      description: the version number starting at which this endpoint should not be included in swagger document
    return:
      type: FastEndpoints.EpVersion
    content.vb: Protected Function Version(version As Integer, deprecateAt As Integer = 0) As EpVersion
  overload: FastEndpoints.Endpoint`2.Version*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Version(Integer, Integer)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Version(Integer, Integer)
  name.vb: Version(Integer, Integer)
- uid: FastEndpoints.Endpoint`2.ValidationFailed
  commentId: P:FastEndpoints.Endpoint`2.ValidationFailed
  id: ValidationFailed
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailed
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: indicates if there are any validation failures for the current request
  example: []
  syntax:
    content: public bool ValidationFailed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ValidationFailed As Boolean
  overload: FastEndpoints.Endpoint`2.ValidationFailed*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailed
- uid: FastEndpoints.Endpoint`2.AddError(FluentValidation.Results.ValidationFailure)
  commentId: M:FastEndpoints.Endpoint`2.AddError(FluentValidation.Results.ValidationFailure)
  id: AddError(FluentValidation.Results.ValidationFailure)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AddError(ValidationFailure)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(ValidationFailure)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(FluentValidation.Results.ValidationFailure)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: add a <xref href="FluentValidation.Results.ValidationFailure" data-throw-if-not-resolved="false"></xref> to the current collection of validation failures of the endpoint
  example: []
  syntax:
    content: public void AddError(ValidationFailure failure)
    parameters:
    - id: failure
      type: FluentValidation.Results.ValidationFailure
      description: the validation failure to add
    content.vb: Public Sub AddError(failure As ValidationFailure)
  overload: FastEndpoints.Endpoint`2.AddError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(ValidationFailure)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(FluentValidation.Results.ValidationFailure)
- uid: FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
  id: AddError(System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AddError(string, string?, Severity)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(string, string?, Severity)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(string, string?, FluentValidation.Severity)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: adds a "GeneralError" to the current list of validation failures
  example: []
  syntax:
    content: public void AddError(string message, string? errorCode = null, Severity severity = Severity.Error)
    parameters:
    - id: message
      type: System.String
      description: the error message
    - id: errorCode
      type: System.String
      description: the error code associated with the error
    - id: severity
      type: FluentValidation.Severity
      description: the severity of the error
    content.vb: Public Sub AddError(message As String, errorCode As String = Nothing, severity As Severity = Severity.Error)
  overload: FastEndpoints.Endpoint`2.AddError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(String, String, Severity)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(String, String, FluentValidation.Severity)
  name.vb: AddError(String, String, Severity)
- uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  id: AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AddError(Expression<Func<TRequest, object?>>, string, string?, Severity)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(Expression<Func<TRequest, object?>>, string, string?, Severity)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(System.Linq.Expressions.Expression<System.Func<TRequest, object?>>, string, string?, FluentValidation.Severity)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: adds an error message for the specified property of the request dto
  example: []
  syntax:
    content: public void AddError(Expression<Func<TRequest, object?>> property, string errorMessage, string? errorCode = null, Severity severity = Severity.Error)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: the property to add the error message for
    - id: errorMessage
      type: System.String
      description: the error message
    - id: errorCode
      type: System.String
      description: the error code associated with the error
    - id: severity
      type: FluentValidation.Severity
      description: the severity of the error
    content.vb: Public Sub AddError([property] As Expression(Of Func(Of TRequest, Object)), errorMessage As String, errorCode As String = Nothing, severity As Severity = Severity.Error)
  overload: FastEndpoints.Endpoint`2.AddError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(Expression(Of Func(Of TRequest, Object)), String, String, Severity)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, Object)), String, String, FluentValidation.Severity)
  name.vb: AddError(Expression(Of Func(Of TRequest, Object)), String, String, Severity)
- uid: FastEndpoints.Endpoint`2.ThrowError(FluentValidation.Results.ValidationFailure,System.Nullable{System.Int32})
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(FluentValidation.Results.ValidationFailure,System.Nullable{System.Int32})
  id: ThrowError(FluentValidation.Results.ValidationFailure,System.Nullable{System.Int32})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowError(ValidationFailure, int?)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(ValidationFailure, int?)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(FluentValidation.Results.ValidationFailure, int?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    adds a <xref href="FluentValidation.Results.ValidationFailure" data-throw-if-not-resolved="false"></xref> to the validation failure collection of the endpoint and send back a 400 bad request with error details

    immediately interrupting handler execution flow. if there are any vallidation failures, no execution will continue past this call.
  example: []
  syntax:
    content: public void ThrowError(ValidationFailure failure, int? statusCode = null)
    parameters:
    - id: failure
      type: FluentValidation.Results.ValidationFailure
      description: the validation failure to add
    - id: statusCode
      type: System.Nullable{System.Int32}
      description: an optional status code to be used when building the error response
    content.vb: Public Sub ThrowError(failure As ValidationFailure, statusCode As Integer? = Nothing)
  overload: FastEndpoints.Endpoint`2.ThrowError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(ValidationFailure, Integer?)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(FluentValidation.Results.ValidationFailure, Integer?)
  name.vb: ThrowError(ValidationFailure, Integer?)
- uid: FastEndpoints.Endpoint`2.ThrowError(System.String,System.Nullable{System.Int32})
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.String,System.Nullable{System.Int32})
  id: ThrowError(System.String,System.Nullable{System.Int32})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowError(string, int?)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(string, int?)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(string, int?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    add a "GeneralError" to the validation failure list and send back a 400 bad request with error details immediately interrupting handler execution

    flow. if there are any vallidation failures, no execution will continue past this call.
  example: []
  syntax:
    content: public void ThrowError(string message, int? statusCode = null)
    parameters:
    - id: message
      type: System.String
      description: the error message
    - id: statusCode
      type: System.Nullable{System.Int32}
      description: an optional status code to be used when building the error response
    content.vb: Public Sub ThrowError(message As String, statusCode As Integer? = Nothing)
  overload: FastEndpoints.Endpoint`2.ThrowError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(String, Integer?)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(String, Integer?)
  name.vb: ThrowError(String, Integer?)
- uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Int32})
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Int32})
  id: ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Int32})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowError(Expression<Func<TRequest, object?>>, string, int?)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(Expression<Func<TRequest, object?>>, string, int?)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(System.Linq.Expressions.Expression<System.Func<TRequest, object?>>, string, int?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    adds an error message for the specified property of the request dto and sends back a 400 bad request with error details immediately interrupting

    handler execution flow. no execution will continue past this call.
  example: []
  syntax:
    content: public void ThrowError(Expression<Func<TRequest, object?>> property, string errorMessage, int? statusCode = null)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: the property to add the error message for
    - id: errorMessage
      type: System.String
      description: the error message
    - id: statusCode
      type: System.Nullable{System.Int32}
      description: an optional status code to be used when building the error response
    content.vb: Public Sub ThrowError([property] As Expression(Of Func(Of TRequest, Object)), errorMessage As String, statusCode As Integer? = Nothing)
  overload: FastEndpoints.Endpoint`2.ThrowError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(Expression(Of Func(Of TRequest, Object)), String, Integer?)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, Object)), String, Integer?)
  name.vb: ThrowError(Expression(Of Func(Of TRequest, Object)), String, Integer?)
- uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors(System.Nullable{System.Int32})
  commentId: M:FastEndpoints.Endpoint`2.ThrowIfAnyErrors(System.Nullable{System.Int32})
  id: ThrowIfAnyErrors(System.Nullable{System.Int32})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowIfAnyErrors(int?)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors(int?)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors(int?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    interrupt the flow of handler execution and send a 400 bad request with error details if there are any validation failures in the current request. if

    there are no validation failures, execution will continue past this call.
  example: []
  syntax:
    content: public void ThrowIfAnyErrors(int? statusCode = null)
    parameters:
    - id: statusCode
      type: System.Nullable{System.Int32}
      description: an optional status code to be used when building the error response
    content.vb: Public Sub ThrowIfAnyErrors(statusCode As Integer? = Nothing)
  overload: FastEndpoints.Endpoint`2.ThrowIfAnyErrors*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors(Integer?)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors(Integer?)
  name.vb: ThrowIfAnyErrors(Integer?)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FastEndpoints.BaseEndpoint
  commentId: T:FastEndpoints.BaseEndpoint
  parent: FastEndpoints
  href: FastEndpoints.BaseEndpoint.html
  name: BaseEndpoint
  nameWithType: BaseEndpoint
  fullName: FastEndpoints.BaseEndpoint
- uid: FastEndpoints.IEndpoint
  commentId: T:FastEndpoints.IEndpoint
  parent: FastEndpoints
  href: FastEndpoints.IEndpoint.html
  name: IEndpoint
  nameWithType: IEndpoint
  fullName: FastEndpoints.IEndpoint
- uid: FastEndpoints.IEventBus
  commentId: T:FastEndpoints.IEventBus
  parent: FastEndpoints
  href: FastEndpoints.IEventBus.html
  name: IEventBus
  nameWithType: IEventBus
  fullName: FastEndpoints.IEventBus
- uid: FastEndpoints.IServiceResolverBase
  commentId: T:FastEndpoints.IServiceResolverBase
  parent: FastEndpoints
  href: FastEndpoints.IServiceResolverBase.html
  name: IServiceResolverBase
  nameWithType: IServiceResolverBase
  fullName: FastEndpoints.IServiceResolverBase
- uid: FastEndpoints.BaseEndpoint.Definition
  commentId: P:FastEndpoints.BaseEndpoint.Definition
  parent: FastEndpoints.BaseEndpoint
  href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Definition
  name: Definition
  nameWithType: BaseEndpoint.Definition
  fullName: FastEndpoints.BaseEndpoint.Definition
- uid: FastEndpoints.BaseEndpoint.HttpContext
  commentId: P:FastEndpoints.BaseEndpoint.HttpContext
  parent: FastEndpoints.BaseEndpoint
  href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_HttpContext
  name: HttpContext
  nameWithType: BaseEndpoint.HttpContext
  fullName: FastEndpoints.BaseEndpoint.HttpContext
- uid: FastEndpoints.BaseEndpoint.ValidationFailures
  commentId: P:FastEndpoints.BaseEndpoint.ValidationFailures
  parent: FastEndpoints.BaseEndpoint
  href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_ValidationFailures
  name: ValidationFailures
  nameWithType: BaseEndpoint.ValidationFailures
  fullName: FastEndpoints.BaseEndpoint.ValidationFailures
- uid: FastEndpoints.BaseEndpoint.Configure
  commentId: M:FastEndpoints.BaseEndpoint.Configure
  parent: FastEndpoints.BaseEndpoint
  href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Configure
  name: Configure()
  nameWithType: BaseEndpoint.Configure()
  fullName: FastEndpoints.BaseEndpoint.Configure()
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.Configure
    name: Configure
    href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Configure
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.Configure
    name: Configure
    href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Configure
  - name: (
  - name: )
- uid: FastEndpoints.BaseEndpoint.GetAclHash(System.String)
  commentId: M:FastEndpoints.BaseEndpoint.GetAclHash(System.String)
  parent: FastEndpoints.BaseEndpoint
  isExternal: true
  href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_GetAclHash_System_String_
  name: GetAclHash(string)
  nameWithType: BaseEndpoint.GetAclHash(string)
  fullName: FastEndpoints.BaseEndpoint.GetAclHash(string)
  nameWithType.vb: BaseEndpoint.GetAclHash(String)
  fullName.vb: FastEndpoints.BaseEndpoint.GetAclHash(String)
  name.vb: GetAclHash(String)
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.GetAclHash(System.String)
    name: GetAclHash
    href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_GetAclHash_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.GetAclHash(System.String)
    name: GetAclHash
    href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_GetAclHash_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Endpoint`2.HandleAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.HandleAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_HandleAsync__0_System_Threading_CancellationToken_
  name: HandleAsync
  nameWithType: Endpoint<TRequest, TResponse>.HandleAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HandleAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FastEndpoints.Endpoint`2.ExecuteAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.ExecuteAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_ExecuteAsync__0_System_Threading_CancellationToken_
  name: ExecuteAsync
  nameWithType: Endpoint<TRequest, TResponse>.ExecuteAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ExecuteAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ExecuteAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ExecuteAsync
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: FastEndpoints.Endpoint`2.TryResolve*
  commentId: Overload:FastEndpoints.Endpoint`2.TryResolve
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_TryResolve__1
  name: TryResolve
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve
- uid: FastEndpoints.IServiceResolverBase.TryResolve``1
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve``1
  parent: FastEndpoints.IServiceResolverBase
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve__1
  name: TryResolve<TService>()
  nameWithType: IServiceResolverBase.TryResolve<TService>()
  fullName: FastEndpoints.IServiceResolverBase.TryResolve<TService>()
  nameWithType.vb: IServiceResolverBase.TryResolve(Of TService)()
  fullName.vb: FastEndpoints.IServiceResolverBase.TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve__1
  - name: <
  - name: TService
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve__1
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
  - name: (
  - name: )
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve_System_Type_
  name: TryResolve(Type)
  nameWithType: IServiceResolverBase.TryResolve(Type)
  fullName: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: FastEndpoints.Endpoint`2.Resolve*
  commentId: Overload:FastEndpoints.Endpoint`2.Resolve
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Resolve__1
  name: Resolve
  nameWithType: Endpoint<TRequest, TResponse>.Resolve
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve
- uid: FastEndpoints.IServiceResolverBase.Resolve``1
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve``1
  parent: FastEndpoints.IServiceResolverBase
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve__1
  name: Resolve<TService>()
  nameWithType: IServiceResolverBase.Resolve<TService>()
  fullName: FastEndpoints.IServiceResolverBase.Resolve<TService>()
  nameWithType.vb: IServiceResolverBase.Resolve(Of TService)()
  fullName.vb: FastEndpoints.IServiceResolverBase.Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve__1
  - name: <
  - name: TService
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve__1
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
  - name: (
  - name: )
- uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve_System_Type_
  name: Resolve(Type)
  nameWithType: IServiceResolverBase.Resolve(Type)
  fullName: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: FastEndpoints.Endpoint`2.CreateScope*
  commentId: Overload:FastEndpoints.Endpoint`2.CreateScope
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_CreateScope
  name: CreateScope
  nameWithType: Endpoint<TRequest, TResponse>.CreateScope
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.CreateScope
  nameWithType.vb: Endpoint(Of TRequest, TResponse).CreateScope
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).CreateScope
- uid: FastEndpoints.IServiceResolverBase.CreateScope
  commentId: M:FastEndpoints.IServiceResolverBase.CreateScope
  parent: FastEndpoints.IServiceResolverBase
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_CreateScope
  name: CreateScope()
  nameWithType: IServiceResolverBase.CreateScope()
  fullName: FastEndpoints.IServiceResolverBase.CreateScope()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.CreateScope
    name: CreateScope
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_CreateScope
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.CreateScope
    name: CreateScope
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_CreateScope
  - name: (
  - name: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceScope
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceScope
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicescope
  name: IServiceScope
  nameWithType: IServiceScope
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScope
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: FastEndpoints.Endpoint`2.Route*
  commentId: Overload:FastEndpoints.Endpoint`2.Route
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Route__1_System_String_System_Boolean_
  name: Route
  nameWithType: Endpoint<TRequest, TResponse>.Route
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Route
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Route
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Route
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: FastEndpoints.Endpoint`2.Query*
  commentId: Overload:FastEndpoints.Endpoint`2.Query
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Query__1_System_String_System_Boolean_
  name: Query
  nameWithType: Endpoint<TRequest, TResponse>.Query
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Query
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Query
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Query
- uid: Microsoft.AspNetCore.WebUtilities.FileMultipartSection
  commentId: T:Microsoft.AspNetCore.WebUtilities.FileMultipartSection
  parent: Microsoft.AspNetCore.WebUtilities
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.webutilities.filemultipartsection
  name: FileMultipartSection
  nameWithType: FileMultipartSection
  fullName: Microsoft.AspNetCore.WebUtilities.FileMultipartSection
- uid: Microsoft.AspNetCore.Http.IFormFile
  commentId: T:Microsoft.AspNetCore.Http.IFormFile
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.iformfile
  name: IFormFile
  nameWithType: IFormFile
  fullName: Microsoft.AspNetCore.Http.IFormFile
- uid: FastEndpoints.Endpoint`2.FormFileSectionsAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.FormFileSectionsAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_FormFileSectionsAsync_System_Threading_CancellationToken_
  name: FormFileSectionsAsync
  nameWithType: Endpoint<TRequest, TResponse>.FormFileSectionsAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.FormFileSectionsAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).FormFileSectionsAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).FormFileSectionsAsync
- uid: System.Collections.Generic.IAsyncEnumerable{Microsoft.AspNetCore.WebUtilities.FileMultipartSection}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Microsoft.AspNetCore.WebUtilities.FileMultipartSection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<FileMultipartSection>
  nameWithType: IAsyncEnumerable<FileMultipartSection>
  fullName: System.Collections.Generic.IAsyncEnumerable<Microsoft.AspNetCore.WebUtilities.FileMultipartSection>
  nameWithType.vb: IAsyncEnumerable(Of FileMultipartSection)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Microsoft.AspNetCore.WebUtilities.FileMultipartSection)
  name.vb: IAsyncEnumerable(Of FileMultipartSection)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - uid: Microsoft.AspNetCore.WebUtilities.FileMultipartSection
    name: FileMultipartSection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.webutilities.filemultipartsection
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.WebUtilities.FileMultipartSection
    name: FileMultipartSection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.webutilities.filemultipartsection
  - name: )
- uid: Microsoft.AspNetCore.WebUtilities
  commentId: N:Microsoft.AspNetCore.WebUtilities
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.WebUtilities
  nameWithType: Microsoft.AspNetCore.WebUtilities
  fullName: Microsoft.AspNetCore.WebUtilities
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.WebUtilities
    name: WebUtilities
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.webutilities
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.WebUtilities
    name: WebUtilities
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.webutilities
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: FastEndpoints.MultipartSection
  commentId: T:FastEndpoints.MultipartSection
  href: FastEndpoints.MultipartSection.html
  name: MultipartSection
  nameWithType: MultipartSection
  fullName: FastEndpoints.MultipartSection
- uid: FastEndpoints.Endpoint`2.FormMultipartSectionsAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.FormMultipartSectionsAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_FormMultipartSectionsAsync_System_Threading_CancellationToken_
  name: FormMultipartSectionsAsync
  nameWithType: Endpoint<TRequest, TResponse>.FormMultipartSectionsAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.FormMultipartSectionsAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).FormMultipartSectionsAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).FormMultipartSectionsAsync
- uid: System.Collections.Generic.IAsyncEnumerable{FastEndpoints.MultipartSection}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{FastEndpoints.MultipartSection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<MultipartSection>
  nameWithType: IAsyncEnumerable<MultipartSection>
  fullName: System.Collections.Generic.IAsyncEnumerable<FastEndpoints.MultipartSection>
  nameWithType.vb: IAsyncEnumerable(Of MultipartSection)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of FastEndpoints.MultipartSection)
  name.vb: IAsyncEnumerable(Of MultipartSection)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - uid: FastEndpoints.MultipartSection
    name: MultipartSection
    href: FastEndpoints.MultipartSection.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FastEndpoints.MultipartSection
    name: MultipartSection
    href: FastEndpoints.MultipartSection.html
  - name: )
- uid: FastEndpoints.Mode.WaitForNone
  commentId: F:FastEndpoints.Mode.WaitForNone
  href: FastEndpoints.Mode.html#FastEndpoints_Mode_WaitForNone
  name: WaitForNone
  nameWithType: Mode.WaitForNone
  fullName: FastEndpoints.Mode.WaitForNone
- uid: FastEndpoints.Mode.WaitForAny
  commentId: F:FastEndpoints.Mode.WaitForAny
  href: FastEndpoints.Mode.html#FastEndpoints_Mode_WaitForAny
  name: WaitForAny
  nameWithType: Mode.WaitForAny
  fullName: FastEndpoints.Mode.WaitForAny
- uid: FastEndpoints.Mode.WaitForAll
  commentId: F:FastEndpoints.Mode.WaitForAll
  href: FastEndpoints.Mode.html#FastEndpoints_Mode_WaitForAll
  name: WaitForAll
  nameWithType: Mode.WaitForAll
  fullName: FastEndpoints.Mode.WaitForAll
- uid: FastEndpoints.Endpoint`2.PublishAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.PublishAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_PublishAsync__1___0_FastEndpoints_Mode_System_Threading_CancellationToken_
  name: PublishAsync
  nameWithType: Endpoint<TRequest, TResponse>.PublishAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PublishAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync
- uid: FastEndpoints.IEventBus.PublishAsync``1({TEvent},FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  parent: FastEndpoints.IEventBus
  definition: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  href: FastEndpoints.IEventBus.html#FastEndpoints_IEventBus_PublishAsync__1___0_FastEndpoints_Mode_System_Threading_CancellationToken_
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: IEventBus.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.IEventBus.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  nameWithType.vb: IEventBus.PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.IEventBus.PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
    name: PublishAsync
    href: FastEndpoints.IEventBus.html#FastEndpoints_IEventBus_PublishAsync__1___0_FastEndpoints_Mode_System_Threading_CancellationToken_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: FastEndpoints.Mode
    name: Mode
    href: FastEndpoints.Mode.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
    name: PublishAsync
    href: FastEndpoints.IEventBus.html#FastEndpoints_IEventBus_PublishAsync__1___0_FastEndpoints_Mode_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: FastEndpoints.Mode
    name: Mode
    href: FastEndpoints.Mode.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: FastEndpoints.Mode
  commentId: T:FastEndpoints.Mode
  parent: FastEndpoints
  href: FastEndpoints.Mode.html
  name: Mode
  nameWithType: Mode
  fullName: FastEndpoints.Mode
- uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  isExternal: true
  href: FastEndpoints.IEventBus.html#FastEndpoints_IEventBus_PublishAsync__1___0_FastEndpoints_Mode_System_Threading_CancellationToken_
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: IEventBus.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.IEventBus.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  nameWithType.vb: IEventBus.PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.IEventBus.PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
    name: PublishAsync
    href: FastEndpoints.IEventBus.html#FastEndpoints_IEventBus_PublishAsync__1___0_FastEndpoints_Mode_System_Threading_CancellationToken_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: FastEndpoints.Mode
    name: Mode
    href: FastEndpoints.Mode.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
    name: PublishAsync
    href: FastEndpoints.IEventBus.html#FastEndpoints_IEventBus_PublishAsync__1___0_FastEndpoints_Mode_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: FastEndpoints.Mode
    name: Mode
    href: FastEndpoints.Mode.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: FastEndpoints.Endpoint`2.CreateTokenWith*
  commentId: Overload:FastEndpoints.Endpoint`2.CreateTokenWith
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_CreateTokenWith__1_System_String_System_Action_FastEndpoints_UserPrivileges___0_
  name: CreateTokenWith
  nameWithType: Endpoint<TRequest, TResponse>.CreateTokenWith
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.CreateTokenWith
  nameWithType.vb: Endpoint(Of TRequest, TResponse).CreateTokenWith
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).CreateTokenWith
- uid: System.Action{FastEndpoints.UserPrivileges}
  commentId: T:System.Action{FastEndpoints.UserPrivileges}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<UserPrivileges>
  nameWithType: Action<UserPrivileges>
  fullName: System.Action<FastEndpoints.UserPrivileges>
  nameWithType.vb: Action(Of UserPrivileges)
  fullName.vb: System.Action(Of FastEndpoints.UserPrivileges)
  name.vb: Action(Of UserPrivileges)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FastEndpoints.UserPrivileges
    name: UserPrivileges
    href: FastEndpoints.UserPrivileges.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FastEndpoints.UserPrivileges
    name: UserPrivileges
    href: FastEndpoints.UserPrivileges.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FastEndpoints.Endpoint`2.ProcessorState*
  commentId: Overload:FastEndpoints.Endpoint`2.ProcessorState
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_ProcessorState__1
  name: ProcessorState
  nameWithType: Endpoint<TRequest, TResponse>.ProcessorState
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ProcessorState
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ProcessorState
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ProcessorState
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: FastEndpoints.Endpoint`2.OnBeforeValidate*
  commentId: Overload:FastEndpoints.Endpoint`2.OnBeforeValidate
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnBeforeValidate__0_
  name: OnBeforeValidate
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidate
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidate
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidate
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidate
- uid: FastEndpoints.Endpoint`2.OnBeforeValidateAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnBeforeValidateAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnBeforeValidateAsync__0_System_Threading_CancellationToken_
  name: OnBeforeValidateAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidateAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidateAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync
- uid: FastEndpoints.Endpoint`2.OnAfterValidate*
  commentId: Overload:FastEndpoints.Endpoint`2.OnAfterValidate
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnAfterValidate__0_
  name: OnAfterValidate
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidate
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidate
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidate
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidate
- uid: FastEndpoints.Endpoint`2.OnAfterValidateAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnAfterValidateAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnAfterValidateAsync__0_System_Threading_CancellationToken_
  name: OnAfterValidateAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidateAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidateAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidateAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidateAsync
- uid: FastEndpoints.Endpoint`2.OnBeforeHandle*
  commentId: Overload:FastEndpoints.Endpoint`2.OnBeforeHandle
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnBeforeHandle__0_
  name: OnBeforeHandle
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandle
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandle
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandle
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandle
- uid: FastEndpoints.Endpoint`2.OnBeforeHandleAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnBeforeHandleAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnBeforeHandleAsync__0_System_Threading_CancellationToken_
  name: OnBeforeHandleAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandleAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandleAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync
- uid: FastEndpoints.Endpoint`2.OnAfterHandle*
  commentId: Overload:FastEndpoints.Endpoint`2.OnAfterHandle
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnAfterHandle__0__1_
  name: OnAfterHandle
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandle
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandle
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandle
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandle
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: FastEndpoints.Endpoint`2.OnAfterHandleAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnAfterHandleAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnAfterHandleAsync__0__1_System_Threading_CancellationToken_
  name: OnAfterHandleAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandleAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandleAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandleAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandleAsync
- uid: FastEndpoints.Endpoint`2.OnValidationFailed*
  commentId: Overload:FastEndpoints.Endpoint`2.OnValidationFailed
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnValidationFailed
  name: OnValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailed
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailed
- uid: FastEndpoints.Endpoint`2.OnValidationFailedAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnValidationFailedAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_OnValidationFailedAsync_System_Threading_CancellationToken_
  name: OnValidationFailedAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailedAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailedAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailedAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailedAsync
- uid: FastEndpoints.Endpoint`2.User*
  commentId: Overload:FastEndpoints.Endpoint`2.User
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_User
  name: User
  nameWithType: Endpoint<TRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.User
  nameWithType.vb: Endpoint(Of TRequest, TResponse).User
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).User
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.claims.claimsprincipal
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Claims
    name: Claims
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Claims
    name: Claims
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims
- uid: FastEndpoints.Endpoint`2.Response*
  commentId: Overload:FastEndpoints.Endpoint`2.Response
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Response
  name: Response
  nameWithType: Endpoint<TRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Response
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Response
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Response
- uid: FastEndpoints.Endpoint`2.Config*
  commentId: Overload:FastEndpoints.Endpoint`2.Config
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Config
  name: Config
  nameWithType: Endpoint<TRequest, TResponse>.Config
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Config
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Config
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Config
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
- uid: FastEndpoints.Endpoint`2.Env*
  commentId: Overload:FastEndpoints.Endpoint`2.Env
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Env
  name: Env
  nameWithType: Endpoint<TRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Env
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Env
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Env
- uid: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting.iwebhostenvironment
  name: IWebHostEnvironment
  nameWithType: IWebHostEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting
- uid: FastEndpoints.Endpoint`2.Logger*
  commentId: Overload:FastEndpoints.Endpoint`2.Logger
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Logger
  name: Logger
  nameWithType: Endpoint<TRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Logger
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Logger
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: FastEndpoints.Endpoint`2.BaseURL*
  commentId: Overload:FastEndpoints.Endpoint`2.BaseURL
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_BaseURL
  name: BaseURL
  nameWithType: Endpoint<TRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.BaseURL
  nameWithType.vb: Endpoint(Of TRequest, TResponse).BaseURL
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).BaseURL
- uid: FastEndpoints.Endpoint`2.HttpMethod*
  commentId: Overload:FastEndpoints.Endpoint`2.HttpMethod
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_HttpMethod
  name: HttpMethod
  nameWithType: Endpoint<TRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpMethod
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpMethod
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpMethod
- uid: FastEndpoints.Http
  commentId: T:FastEndpoints.Http
  parent: FastEndpoints
  href: FastEndpoints.Http.html
  name: Http
  nameWithType: Http
  fullName: FastEndpoints.Http
- uid: FastEndpoints.Endpoint`2.Form*
  commentId: Overload:FastEndpoints.Endpoint`2.Form
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Form
  name: Form
  nameWithType: Endpoint<TRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Form
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Form
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Form
- uid: Microsoft.AspNetCore.Http.IFormCollection
  commentId: T:Microsoft.AspNetCore.Http.IFormCollection
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.iformcollection
  name: IFormCollection
  nameWithType: IFormCollection
  fullName: Microsoft.AspNetCore.Http.IFormCollection
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http
- uid: FastEndpoints.Endpoint`2.Files*
  commentId: Overload:FastEndpoints.Endpoint`2.Files
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Files
  name: Files
  nameWithType: Endpoint<TRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Files
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Files
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Files
- uid: Microsoft.AspNetCore.Http.IFormFileCollection
  commentId: T:Microsoft.AspNetCore.Http.IFormFileCollection
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.iformfilecollection
  name: IFormFileCollection
  nameWithType: IFormFileCollection
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection
- uid: FastEndpoints.Endpoint`2.ResponseStarted*
  commentId: Overload:FastEndpoints.Endpoint`2.ResponseStarted
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_ResponseStarted
  name: ResponseStarted
  nameWithType: Endpoint<TRequest, TResponse>.ResponseStarted
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseStarted
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseStarted
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseStarted
- uid: FastEndpoints.Endpoint`2.SendAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendAsync__1_System_Int32_System_Threading_CancellationToken_
  name: SendAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Microsoft.AspNetCore.Http.IResult
  commentId: T:Microsoft.AspNetCore.Http.IResult
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.iresult
  name: IResult
  nameWithType: IResult
  fullName: Microsoft.AspNetCore.Http.IResult
- uid: Microsoft.AspNetCore.Http.Results
  commentId: T:Microsoft.AspNetCore.Http.Results
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.results
  name: Results
  nameWithType: Results
  fullName: Microsoft.AspNetCore.Http.Results
- uid: FastEndpoints.Endpoint`2.SendResultAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendResultAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendResultAsync_Microsoft_AspNetCore_Http_IResult_
  name: SendResultAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendResultAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendResultAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendResultAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendResultAsync
- uid: FastEndpoints.Endpoint`2.SendInterceptedAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendInterceptedAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendInterceptedAsync_System_Object_System_Int32_System_Threading_CancellationToken_
  name: SendInterceptedAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendInterceptedAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendInterceptedAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendInterceptedAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendInterceptedAsync
- uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendCreatedAtAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendCreatedAtAsync__1_System_Object__1_System_Nullable_FastEndpoints_Http__System_Nullable_System_Int32__System_Boolean_System_Threading_CancellationToken_
  name: SendCreatedAtAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync
- uid: System.Nullable{FastEndpoints.Http}
  commentId: T:System.Nullable{FastEndpoints.Http}
  parent: System
  definition: System.Nullable`1
  name: Http?
  nameWithType: Http?
  fullName: FastEndpoints.Http?
  spec.csharp:
  - uid: FastEndpoints.Http
    name: Http
  - name: '?'
  spec.vb:
  - uid: FastEndpoints.Http
    name: Http
  - name: '?'
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FastEndpoints.Endpoint`2.SendStringAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendStringAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendStringAsync_System_String_System_Int32_System_String_System_Threading_CancellationToken_
  name: SendStringAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendStringAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStringAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStringAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStringAsync
- uid: FastEndpoints.Endpoint`2.SendOkAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendOkAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendOkAsync__1_System_Threading_CancellationToken_
  name: SendOkAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync
- uid: FastEndpoints.Endpoint`2.SendErrorsAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendErrorsAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendErrorsAsync_System_Int32_System_Threading_CancellationToken_
  name: SendErrorsAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendErrorsAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync
- uid: FastEndpoints.Endpoint`2.SendNoContentAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendNoContentAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendNoContentAsync_System_Threading_CancellationToken_
  name: SendNoContentAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNoContentAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync
- uid: FastEndpoints.Endpoint`2.SendNotFoundAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendNotFoundAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendNotFoundAsync_System_Threading_CancellationToken_
  name: SendNotFoundAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNotFoundAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync
- uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendUnauthorizedAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendUnauthorizedAsync_System_Threading_CancellationToken_
  name: SendUnauthorizedAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
- uid: FastEndpoints.Endpoint`2.SendForbiddenAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendForbiddenAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendForbiddenAsync_System_Threading_CancellationToken_
  name: SendForbiddenAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendForbiddenAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync
- uid: FastEndpoints.Endpoint`2.SendRedirectAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendRedirectAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendRedirectAsync_System_String_System_Boolean_System_Boolean_
  name: SendRedirectAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendRedirectAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendRedirectAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendRedirectAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendRedirectAsync
- uid: FastEndpoints.Endpoint`2.SendHeadersAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendHeadersAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendHeadersAsync_System_Action_Microsoft_AspNetCore_Http_IHeaderDictionary__System_Int32_System_Threading_CancellationToken_
  name: SendHeadersAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendHeadersAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendHeadersAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendHeadersAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendHeadersAsync
- uid: System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary}
  commentId: T:System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IHeaderDictionary>
  nameWithType: Action<IHeaderDictionary>
  fullName: System.Action<Microsoft.AspNetCore.Http.IHeaderDictionary>
  nameWithType.vb: Action(Of IHeaderDictionary)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Http.IHeaderDictionary)
  name.vb: Action(Of IHeaderDictionary)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.iheaderdictionary
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.iheaderdictionary
  - name: )
- uid: FastEndpoints.Endpoint`2.SendBytesAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendBytesAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendBytesAsync_System_Byte___System_String_System_String_System_Nullable_System_DateTimeOffset__System_Boolean_System_Threading_CancellationToken_
  name: SendBytesAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendBytesAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset?
  nameWithType: DateTimeOffset?
  fullName: System.DateTimeOffset?
  spec.csharp:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
  spec.vb:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
- uid: FastEndpoints.Endpoint`2.SendFileAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendFileAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendFileAsync_System_IO_FileInfo_System_String_System_Nullable_System_DateTimeOffset__System_Boolean_System_Threading_CancellationToken_
  name: SendFileAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendFileAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: FastEndpoints.Endpoint`2.SendStreamAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendStreamAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendStreamAsync_System_IO_Stream_System_String_System_Nullable_System_Int64__System_String_System_Nullable_System_DateTimeOffset__System_Boolean_System_Threading_CancellationToken_
  name: SendStreamAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStreamAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: FastEndpoints.Endpoint`2.SendEventStreamAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendEventStreamAsync
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendEventStreamAsync__1_System_String_System_Collections_Generic_IAsyncEnumerable___0__System_Threading_CancellationToken_
  name: SendEventStreamAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendEventStreamAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEventStreamAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEventStreamAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEventStreamAsync
- uid: System.Collections.Generic.IAsyncEnumerable{{T}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FastEndpoints.Endpoint`2.SendEmptyJsonObject*
  commentId: Overload:FastEndpoints.Endpoint`2.SendEmptyJsonObject
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SendEmptyJsonObject_System_Threading_CancellationToken_
  name: SendEmptyJsonObject
  nameWithType: Endpoint<TRequest, TResponse>.SendEmptyJsonObject
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEmptyJsonObject
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEmptyJsonObject
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEmptyJsonObject
- uid: FastEndpoints.Apply.ToThisEndpoint
  commentId: F:FastEndpoints.Apply.ToThisEndpoint
  href: FastEndpoints.Apply.html#FastEndpoints_Apply_ToThisEndpoint
  name: ToThisEndpoint
  nameWithType: Apply.ToThisEndpoint
  fullName: FastEndpoints.Apply.ToThisEndpoint
- uid: FastEndpoints.Endpoint`2.AccessControl*
  commentId: Overload:FastEndpoints.Endpoint`2.AccessControl
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_AccessControl_System_String_System_Nullable_FastEndpoints_Apply__System_String___
  name: AccessControl
  nameWithType: Endpoint<TRequest, TResponse>.AccessControl
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AccessControl
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AccessControl
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AccessControl
- uid: System.Nullable{FastEndpoints.Apply}
  commentId: T:System.Nullable{FastEndpoints.Apply}
  parent: System
  definition: System.Nullable`1
  href: FastEndpoints.Apply.html
  name: Apply?
  nameWithType: Apply?
  fullName: FastEndpoints.Apply?
  spec.csharp:
  - uid: FastEndpoints.Apply
    name: Apply
    href: FastEndpoints.Apply.html
  - name: '?'
  spec.vb:
  - uid: FastEndpoints.Apply
    name: Apply
    href: FastEndpoints.Apply.html
  - name: '?'
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: FastEndpoints.Endpoint`2.AllowAnonymous*
  commentId: Overload:FastEndpoints.Endpoint`2.AllowAnonymous
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_AllowAnonymous_FastEndpoints_Http___
  name: AllowAnonymous
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnonymous
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous
- uid: FastEndpoints.Http[]
  isExternal: true
  name: Http[]
  nameWithType: Http[]
  fullName: FastEndpoints.Http[]
  nameWithType.vb: Http()
  fullName.vb: FastEndpoints.Http()
  name.vb: Http()
  spec.csharp:
  - uid: FastEndpoints.Http
    name: Http
  - name: '['
  - name: ']'
  spec.vb:
  - uid: FastEndpoints.Http
    name: Http
  - name: (
  - name: )
- uid: FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
  isExternal: true
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_FormFileSectionsAsync_System_Threading_CancellationToken_
  name: FormFileSectionsAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.FormFileSectionsAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.FormFileSectionsAsync(System.Threading.CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).FormFileSectionsAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).FormFileSectionsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
    name: FormFileSectionsAsync
    href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_FormFileSectionsAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
    name: FormFileSectionsAsync
    href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_FormFileSectionsAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FastEndpoints.Endpoint`2.AllowFileUploads*
  commentId: Overload:FastEndpoints.Endpoint`2.AllowFileUploads
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_AllowFileUploads_System_Boolean_
  name: AllowFileUploads
  nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFileUploads
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads
- uid: FastEndpoints.Endpoint`2.AllowFormData*
  commentId: Overload:FastEndpoints.Endpoint`2.AllowFormData
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_AllowFormData_System_Boolean_
  name: AllowFormData
  nameWithType: Endpoint<TRequest, TResponse>.AllowFormData
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFormData
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFormData
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFormData
- uid: FastEndpoints.Endpoint`2.AuthSchemes*
  commentId: Overload:FastEndpoints.Endpoint`2.AuthSchemes
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_AuthSchemes_System_String___
  name: AuthSchemes
  nameWithType: Endpoint<TRequest, TResponse>.AuthSchemes
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AuthSchemes
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AuthSchemes
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AuthSchemes
- uid: FastEndpoints.Endpoint`2.Claims*
  commentId: Overload:FastEndpoints.Endpoint`2.Claims
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Claims_System_String___
  name: Claims
  nameWithType: Endpoint<TRequest, TResponse>.Claims
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims
- uid: FastEndpoints.Endpoint`2.ClaimsAll*
  commentId: Overload:FastEndpoints.Endpoint`2.ClaimsAll
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_ClaimsAll_System_String___
  name: ClaimsAll
  nameWithType: Endpoint<TRequest, TResponse>.ClaimsAll
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ClaimsAll
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ClaimsAll
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ClaimsAll
- uid: FastEndpoints.Endpoint`2.Delete*
  commentId: Overload:FastEndpoints.Endpoint`2.Delete
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Delete_System_String___
  name: Delete
  nameWithType: Endpoint<TRequest, TResponse>.Delete
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Delete
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Delete
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Delete
- uid: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TRequest, object>>
  nameWithType: Expression<Func<TRequest, object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TRequest, object>>
  nameWithType.vb: Expression(Of Func(Of TRequest, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TRequest, Object))
  name.vb: Expression(Of Func(Of TRequest, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: FastEndpoints.Endpoint`2.Description*
  commentId: Overload:FastEndpoints.Endpoint`2.Description
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Description_System_Action_Microsoft_AspNetCore_Builder_RouteHandlerBuilder__System_Boolean_
  name: Description
  nameWithType: Endpoint<TRequest, TResponse>.Description
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Description
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Description
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Description
- uid: System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder}
  commentId: T:System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<RouteHandlerBuilder>
  nameWithType: Action<RouteHandlerBuilder>
  fullName: System.Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>
  nameWithType.vb: Action(Of RouteHandlerBuilder)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder)
  name.vb: Action(Of RouteHandlerBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder.routehandlerbuilder
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder.routehandlerbuilder
  - name: )
- uid: FastEndpoints.Endpoint`2.DontAutoSendResponse*
  commentId: Overload:FastEndpoints.Endpoint`2.DontAutoSendResponse
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_DontAutoSendResponse
  name: DontAutoSendResponse
  nameWithType: Endpoint<TRequest, TResponse>.DontAutoSendResponse
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontAutoSendResponse
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontAutoSendResponse
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontAutoSendResponse
- uid: FastEndpoints.Endpoint`2.DontAutoTag*
  commentId: Overload:FastEndpoints.Endpoint`2.DontAutoTag
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_DontAutoTag
  name: DontAutoTag
  nameWithType: Endpoint<TRequest, TResponse>.DontAutoTag
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontAutoTag
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontAutoTag
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontAutoTag
- uid: FastEndpoints.Endpoint`2.DontCatchExceptions*
  commentId: Overload:FastEndpoints.Endpoint`2.DontCatchExceptions
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_DontCatchExceptions
  name: DontCatchExceptions
  nameWithType: Endpoint<TRequest, TResponse>.DontCatchExceptions
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontCatchExceptions
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontCatchExceptions
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontCatchExceptions
- uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails*
  commentId: Overload:FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_DontThrowIfValidationFails
  name: DontThrowIfValidationFails
  nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
- uid: FastEndpoints.Endpoint`2.EnableAntiforgery*
  commentId: Overload:FastEndpoints.Endpoint`2.EnableAntiforgery
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_EnableAntiforgery
  name: EnableAntiforgery
  nameWithType: Endpoint<TRequest, TResponse>.EnableAntiforgery
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.EnableAntiforgery
  nameWithType.vb: Endpoint(Of TRequest, TResponse).EnableAntiforgery
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).EnableAntiforgery
- uid: FastEndpoints.Endpoint`2.Get*
  commentId: Overload:FastEndpoints.Endpoint`2.Get
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Get_System_String___
  name: Get
  nameWithType: Endpoint<TRequest, TResponse>.Get
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Get
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Get
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Get
- uid: FastEndpoints.Group
  commentId: T:FastEndpoints.Group
  parent: FastEndpoints
  href: FastEndpoints.Group.html
  name: Group
  nameWithType: Group
  fullName: FastEndpoints.Group
- uid: FastEndpoints.BaseEndpoint.Group``1
  commentId: M:FastEndpoints.BaseEndpoint.Group``1
  parent: FastEndpoints.BaseEndpoint
  href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Group__1
  name: Group<TEndpointGroup>()
  nameWithType: BaseEndpoint.Group<TEndpointGroup>()
  fullName: FastEndpoints.BaseEndpoint.Group<TEndpointGroup>()
  nameWithType.vb: BaseEndpoint.Group(Of TEndpointGroup)()
  fullName.vb: FastEndpoints.BaseEndpoint.Group(Of TEndpointGroup)()
  name.vb: Group(Of TEndpointGroup)()
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.Group``1
    name: Group
    href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Group__1
  - name: <
  - name: TEndpointGroup
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.Group``1
    name: Group
    href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Group__1
  - name: (
  - name: Of
  - name: " "
  - name: TEndpointGroup
  - name: )
  - name: (
  - name: )
- uid: FastEndpoints.Endpoint`2.Group*
  commentId: Overload:FastEndpoints.Endpoint`2.Group
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Group__1
  name: Group
  nameWithType: Endpoint<TRequest, TResponse>.Group
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Group
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Group
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Group
- uid: FastEndpoints.Endpoint`2.Head*
  commentId: Overload:FastEndpoints.Endpoint`2.Head
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Head_System_String___
  name: Head
  nameWithType: Endpoint<TRequest, TResponse>.Head
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Head
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Head
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Head
- uid: FastEndpoints.Endpoint`2.Options*
  commentId: Overload:FastEndpoints.Endpoint`2.Options
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Options_System_Action_Microsoft_AspNetCore_Builder_RouteHandlerBuilder__
  name: Options
  nameWithType: Endpoint<TRequest, TResponse>.Options
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Options
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Options
- uid: FastEndpoints.Endpoint`2.Patch*
  commentId: Overload:FastEndpoints.Endpoint`2.Patch
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Patch_System_String___
  name: Patch
  nameWithType: Endpoint<TRequest, TResponse>.Patch
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Patch
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Patch
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Patch
- uid: FastEndpoints.Endpoint`2.Permissions*
  commentId: Overload:FastEndpoints.Endpoint`2.Permissions
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Permissions_System_String___
  name: Permissions
  nameWithType: Endpoint<TRequest, TResponse>.Permissions
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions
- uid: FastEndpoints.Endpoint`2.PermissionsAll*
  commentId: Overload:FastEndpoints.Endpoint`2.PermissionsAll
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_PermissionsAll_System_String___
  name: PermissionsAll
  nameWithType: Endpoint<TRequest, TResponse>.PermissionsAll
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PermissionsAll
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PermissionsAll
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PermissionsAll
- uid: FastEndpoints.Endpoint`2.Policy*
  commentId: Overload:FastEndpoints.Endpoint`2.Policy
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Policy_System_Action_Microsoft_AspNetCore_Authorization_AuthorizationPolicyBuilder__
  name: Policy
  nameWithType: Endpoint<TRequest, TResponse>.Policy
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policy
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policy
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policy
- uid: System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder}
  commentId: T:System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<AuthorizationPolicyBuilder>
  nameWithType: Action<AuthorizationPolicyBuilder>
  fullName: System.Action<Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder>
  nameWithType.vb: Action(Of AuthorizationPolicyBuilder)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder)
  name.vb: Action(Of AuthorizationPolicyBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
    name: AuthorizationPolicyBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authorization.authorizationpolicybuilder
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
    name: AuthorizationPolicyBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.authorization.authorizationpolicybuilder
  - name: )
- uid: FastEndpoints.Endpoint`2.Policies*
  commentId: Overload:FastEndpoints.Endpoint`2.Policies
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Policies_System_String___
  name: Policies
  nameWithType: Endpoint<TRequest, TResponse>.Policies
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policies
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies
- uid: FastEndpoints.Endpoint`2.Post*
  commentId: Overload:FastEndpoints.Endpoint`2.Post
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Post_System_String___
  name: Post
  nameWithType: Endpoint<TRequest, TResponse>.Post
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Post
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Post
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Post
- uid: FastEndpoints.Endpoint`2.PostProcessor*
  commentId: Overload:FastEndpoints.Endpoint`2.PostProcessor
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_PostProcessor__1
  name: PostProcessor
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessor
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessor
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessor
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessor
- uid: FastEndpoints.Endpoint`2.PostProcessors*
  commentId: Overload:FastEndpoints.Endpoint`2.PostProcessors
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_PostProcessors_FastEndpoints_IPostProcessor__0__1____
  name: PostProcessors
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessors
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessors
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors
- uid: FastEndpoints.IPostProcessor{{TRequest},{TResponse}}[]
  isExternal: true
  href: FastEndpoints.IPostProcessor-2.html
  name: IPostProcessor<TRequest, TResponse>[]
  nameWithType: IPostProcessor<TRequest, TResponse>[]
  fullName: FastEndpoints.IPostProcessor<TRequest, TResponse>[]
  nameWithType.vb: IPostProcessor(Of TRequest, TResponse)()
  fullName.vb: FastEndpoints.IPostProcessor(Of TRequest, TResponse)()
  name.vb: IPostProcessor(Of TRequest, TResponse)()
  spec.csharp:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    href: FastEndpoints.IPostProcessor-2.html
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    href: FastEndpoints.IPostProcessor-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
  - name: (
  - name: )
- uid: FastEndpoints.Endpoint`2.PreProcessor*
  commentId: Overload:FastEndpoints.Endpoint`2.PreProcessor
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_PreProcessor__1
  name: PreProcessor
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessor
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessor
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessor
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessor
- uid: FastEndpoints.Endpoint`2.PreProcessors*
  commentId: Overload:FastEndpoints.Endpoint`2.PreProcessors
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_PreProcessors_FastEndpoints_IPreProcessor__0____
  name: PreProcessors
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessors
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessors
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors
- uid: FastEndpoints.IPreProcessor{{TRequest}}[]
  isExternal: true
  href: FastEndpoints.IPreProcessor-1.html
  name: IPreProcessor<TRequest>[]
  nameWithType: IPreProcessor<TRequest>[]
  fullName: FastEndpoints.IPreProcessor<TRequest>[]
  nameWithType.vb: IPreProcessor(Of TRequest)()
  fullName.vb: FastEndpoints.IPreProcessor(Of TRequest)()
  name.vb: IPreProcessor(Of TRequest)()
  spec.csharp:
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    href: FastEndpoints.IPreProcessor-1.html
  - name: <
  - name: TRequest
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    href: FastEndpoints.IPreProcessor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: )
  - name: (
  - name: )
- uid: FastEndpoints.Endpoint`2.Put*
  commentId: Overload:FastEndpoints.Endpoint`2.Put
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Put_System_String___
  name: Put
  nameWithType: Endpoint<TRequest, TResponse>.Put
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Put
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Put
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Put
- uid: FastEndpoints.Endpoint`2.RequestBinder*
  commentId: Overload:FastEndpoints.Endpoint`2.RequestBinder
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_RequestBinder_FastEndpoints_IRequestBinder__0__
  name: RequestBinder
  nameWithType: Endpoint<TRequest, TResponse>.RequestBinder
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RequestBinder
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RequestBinder
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RequestBinder
- uid: FastEndpoints.IRequestBinder{{TRequest}}
  commentId: T:FastEndpoints.IRequestBinder{`0}
  parent: FastEndpoints
  definition: FastEndpoints.IRequestBinder`1
  href: FastEndpoints.IRequestBinder-1.html
  name: IRequestBinder<TRequest>
  nameWithType: IRequestBinder<TRequest>
  fullName: FastEndpoints.IRequestBinder<TRequest>
  nameWithType.vb: IRequestBinder(Of TRequest)
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest)
  name.vb: IRequestBinder(Of TRequest)
  spec.csharp:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    href: FastEndpoints.IRequestBinder-1.html
  - name: <
  - name: TRequest
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    href: FastEndpoints.IRequestBinder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: )
- uid: FastEndpoints.IRequestBinder`1
  commentId: T:FastEndpoints.IRequestBinder`1
  href: FastEndpoints.IRequestBinder-1.html
  name: IRequestBinder<TRequest>
  nameWithType: IRequestBinder<TRequest>
  fullName: FastEndpoints.IRequestBinder<TRequest>
  nameWithType.vb: IRequestBinder(Of TRequest)
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest)
  name.vb: IRequestBinder(Of TRequest)
  spec.csharp:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    href: FastEndpoints.IRequestBinder-1.html
  - name: <
  - name: TRequest
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    href: FastEndpoints.IRequestBinder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: )
- uid: FastEndpoints.Endpoint`2.ResponseCache*
  commentId: Overload:FastEndpoints.Endpoint`2.ResponseCache
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_ResponseCache_System_Int32_Microsoft_AspNetCore_Mvc_ResponseCacheLocation_System_Boolean_System_String_System_String___
  name: ResponseCache
  nameWithType: Endpoint<TRequest, TResponse>.ResponseCache
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseCache
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseCache
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseCache
- uid: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
  commentId: T:Microsoft.AspNetCore.Mvc.ResponseCacheLocation
  parent: Microsoft.AspNetCore.Mvc
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.responsecachelocation
  name: ResponseCacheLocation
  nameWithType: ResponseCacheLocation
  fullName: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Mvc
    name: Mvc
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Mvc
    name: Mvc
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc
- uid: FastEndpoints.Endpoint`2.ResponseInterceptor*
  commentId: Overload:FastEndpoints.Endpoint`2.ResponseInterceptor
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_ResponseInterceptor_FastEndpoints_IResponseInterceptor_
  name: ResponseInterceptor
  nameWithType: Endpoint<TRequest, TResponse>.ResponseInterceptor
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseInterceptor
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseInterceptor
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseInterceptor
- uid: FastEndpoints.IResponseInterceptor
  commentId: T:FastEndpoints.IResponseInterceptor
  parent: FastEndpoints
  href: FastEndpoints.IResponseInterceptor.html
  name: IResponseInterceptor
  nameWithType: IResponseInterceptor
  fullName: FastEndpoints.IResponseInterceptor
- uid: FastEndpoints.Endpoint`2.Roles*
  commentId: Overload:FastEndpoints.Endpoint`2.Roles
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Roles_System_String___
  name: Roles
  nameWithType: Endpoint<TRequest, TResponse>.Roles
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Roles
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles
- uid: FastEndpoints.Endpoint`2.RoutePrefixOverride*
  commentId: Overload:FastEndpoints.Endpoint`2.RoutePrefixOverride
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_RoutePrefixOverride_System_String_
  name: RoutePrefixOverride
  nameWithType: Endpoint<TRequest, TResponse>.RoutePrefixOverride
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RoutePrefixOverride
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RoutePrefixOverride
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RoutePrefixOverride
- uid: FastEndpoints.Endpoint`2.Routes*
  commentId: Overload:FastEndpoints.Endpoint`2.Routes
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Routes_System_String___
  name: Routes
  nameWithType: Endpoint<TRequest, TResponse>.Routes
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Routes
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes
- uid: FastEndpoints.Endpoint`2.SerializerContext*
  commentId: Overload:FastEndpoints.Endpoint`2.SerializerContext
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_SerializerContext__1___0_
  name: SerializerContext
  nameWithType: Endpoint<TRequest, TResponse>.SerializerContext
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SerializerContext
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SerializerContext
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SerializerContext
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: TContext
  commentId: '!:TContext'
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: FastEndpoints.SerializerOptions
  commentId: T:FastEndpoints.SerializerOptions
  parent: FastEndpoints
  href: FastEndpoints.SerializerOptions.html
  name: SerializerOptions
  nameWithType: SerializerOptions
  fullName: FastEndpoints.SerializerOptions
- uid: FastEndpoints.Endpoint`2.Summary*
  commentId: Overload:FastEndpoints.Endpoint`2.Summary
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Summary_System_Action_FastEndpoints_EndpointSummary__
  name: Summary
  nameWithType: Endpoint<TRequest, TResponse>.Summary
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary
- uid: System.Action{FastEndpoints.EndpointSummary}
  commentId: T:System.Action{FastEndpoints.EndpointSummary}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<EndpointSummary>
  nameWithType: Action<EndpointSummary>
  fullName: System.Action<FastEndpoints.EndpointSummary>
  nameWithType.vb: Action(Of EndpointSummary)
  fullName.vb: System.Action(Of FastEndpoints.EndpointSummary)
  name.vb: Action(Of EndpointSummary)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    href: FastEndpoints.EndpointSummary.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    href: FastEndpoints.EndpointSummary.html
  - name: )
- uid: System.Action{FastEndpoints.EndpointSummary{{TRequest}}}
  commentId: T:System.Action{FastEndpoints.EndpointSummary{``0}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<EndpointSummary<TRequest>>
  nameWithType: Action<EndpointSummary<TRequest>>
  fullName: System.Action<FastEndpoints.EndpointSummary<TRequest>>
  nameWithType.vb: Action(Of EndpointSummary(Of TRequest))
  fullName.vb: System.Action(Of FastEndpoints.EndpointSummary(Of TRequest))
  name.vb: Action(Of EndpointSummary(Of TRequest))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FastEndpoints.EndpointSummary`1
    name: EndpointSummary
    href: FastEndpoints.EndpointSummary-1.html
  - name: <
  - name: TRequest
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FastEndpoints.EndpointSummary`1
    name: EndpointSummary
    href: FastEndpoints.EndpointSummary-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: )
  - name: )
- uid: FastEndpoints.EndpointSummary
  commentId: T:FastEndpoints.EndpointSummary
  parent: FastEndpoints
  href: FastEndpoints.EndpointSummary.html
  name: EndpointSummary
  nameWithType: EndpointSummary
  fullName: FastEndpoints.EndpointSummary
- uid: FastEndpoints.Endpoint`2.Tags*
  commentId: Overload:FastEndpoints.Endpoint`2.Tags
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Tags_System_String___
  name: Tags
  nameWithType: Endpoint<TRequest, TResponse>.Tags
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Tags
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Tags
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Tags
- uid: FastEndpoints.Endpoint`2.Throttle*
  commentId: Overload:FastEndpoints.Endpoint`2.Throttle
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Throttle_System_Int32_System_Double_System_String_
  name: Throttle
  nameWithType: Endpoint<TRequest, TResponse>.Throttle
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Throttle
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Throttle
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Throttle
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: FastEndpoints.Endpoint`2.Validator*
  commentId: Overload:FastEndpoints.Endpoint`2.Validator
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Validator__1
  name: Validator
  nameWithType: Endpoint<TRequest, TResponse>.Validator
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Validator
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Validator
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Validator
- uid: FastEndpoints.Endpoint`2.Verbs*
  commentId: Overload:FastEndpoints.Endpoint`2.Verbs
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Verbs_FastEndpoints_Http___
  name: Verbs
  nameWithType: Endpoint<TRequest, TResponse>.Verbs
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs
- uid: FastEndpoints.BaseEndpoint.Verbs(System.String[])
  commentId: M:FastEndpoints.BaseEndpoint.Verbs(System.String[])
  parent: FastEndpoints.BaseEndpoint
  isExternal: true
  href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Verbs_System_String___
  name: Verbs(params string[])
  nameWithType: BaseEndpoint.Verbs(params string[])
  fullName: FastEndpoints.BaseEndpoint.Verbs(params string[])
  nameWithType.vb: BaseEndpoint.Verbs(ParamArray String())
  fullName.vb: FastEndpoints.BaseEndpoint.Verbs(ParamArray String())
  name.vb: Verbs(ParamArray String())
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.Verbs(System.String[])
    name: Verbs
    href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Verbs_System_String___
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.Verbs(System.String[])
    name: Verbs
    href: FastEndpoints.BaseEndpoint.html#FastEndpoints_BaseEndpoint_Verbs_System_String___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: FastEndpoints.Endpoint`2.Version*
  commentId: Overload:FastEndpoints.Endpoint`2.Version
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_Version_System_Int32_System_Int32_
  name: Version
  nameWithType: Endpoint<TRequest, TResponse>.Version
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Version
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Version
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Version
- uid: FastEndpoints.EpVersion
  commentId: T:FastEndpoints.EpVersion
  parent: FastEndpoints
  href: FastEndpoints.EpVersion.html
  name: EpVersion
  nameWithType: EpVersion
  fullName: FastEndpoints.EpVersion
- uid: FastEndpoints.Endpoint`2.ValidationFailed*
  commentId: Overload:FastEndpoints.Endpoint`2.ValidationFailed
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_ValidationFailed
  name: ValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailed
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailed
- uid: FluentValidation.Results.ValidationFailure
  commentId: T:FluentValidation.Results.ValidationFailure
  parent: FluentValidation.Results
  isExternal: true
  name: ValidationFailure
  nameWithType: ValidationFailure
  fullName: FluentValidation.Results.ValidationFailure
- uid: FastEndpoints.Endpoint`2.AddError*
  commentId: Overload:FastEndpoints.Endpoint`2.AddError
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_AddError_FluentValidation_Results_ValidationFailure_
  name: AddError
  nameWithType: Endpoint<TRequest, TResponse>.AddError
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError
- uid: FluentValidation.Results
  commentId: N:FluentValidation.Results
  isExternal: true
  name: FluentValidation.Results
  nameWithType: FluentValidation.Results
  fullName: FluentValidation.Results
  spec.csharp:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
  spec.vb:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
- uid: FluentValidation.Severity
  commentId: T:FluentValidation.Severity
  parent: FluentValidation
  isExternal: true
  name: Severity
  nameWithType: Severity
  fullName: FluentValidation.Severity
- uid: FluentValidation
  commentId: N:FluentValidation
  isExternal: true
  name: FluentValidation
  nameWithType: FluentValidation
  fullName: FluentValidation
- uid: FastEndpoints.Endpoint`2.ThrowError*
  commentId: Overload:FastEndpoints.Endpoint`2.ThrowError
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_ThrowError_FluentValidation_Results_ValidationFailure_System_Nullable_System_Int32__
  name: ThrowError
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError
- uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors*
  commentId: Overload:FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  href: FastEndpoints.Endpoint-2.html#FastEndpoints_Endpoint_2_ThrowIfAnyErrors_System_Nullable_System_Int32__
  name: ThrowIfAnyErrors
  nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
