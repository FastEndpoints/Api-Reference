### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Endpoint`2
  commentId: T:FastEndpoints.Endpoint`2
  id: Endpoint`2
  parent: FastEndpoints
  children:
  - FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
  - FastEndpoints.Endpoint`2.AllowAnonymous(System.String[])
  - FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
  - FastEndpoints.Endpoint`2.AllowFormData
  - FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
  - FastEndpoints.Endpoint`2.BaseURL
  - FastEndpoints.Endpoint`2.Claims(System.String[])
  - FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
  - FastEndpoints.Endpoint`2.Config
  - FastEndpoints.Endpoint`2.CreateScope
  - FastEndpoints.Endpoint`2.CreateTokenWith``1(System.String,System.Action{FastEndpoints.UserPrivileges})
  - FastEndpoints.Endpoint`2.Delete(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Delete(System.String[])
  - FastEndpoints.Endpoint`2.Description(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  - FastEndpoints.Endpoint`2.DontAutoTag
  - FastEndpoints.Endpoint`2.DontCatchExceptions
  - FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  - FastEndpoints.Endpoint`2.Env
  - FastEndpoints.Endpoint`2.ExecuteAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Files
  - FastEndpoints.Endpoint`2.Form
  - FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Get(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Get(System.String[])
  - FastEndpoints.Endpoint`2.Group``1
  - FastEndpoints.Endpoint`2.HandleAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Head(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Head(System.String[])
  - FastEndpoints.Endpoint`2.HttpMethod
  - FastEndpoints.Endpoint`2.Logger
  - FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
  - FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.OnAfterValidate(`0)
  - FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
  - FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
  - FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.OnValidationFailed
  - FastEndpoints.Endpoint`2.OnValidationFailedAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Options(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  - FastEndpoints.Endpoint`2.Patch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Patch(System.String[])
  - FastEndpoints.Endpoint`2.Permissions(System.String[])
  - FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
  - FastEndpoints.Endpoint`2.Policies(System.String[])
  - FastEndpoints.Endpoint`2.Policy(System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})
  - FastEndpoints.Endpoint`2.Post(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Post(System.String[])
  - FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  - FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  - FastEndpoints.Endpoint`2.ProcessorState``1
  - FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.Put(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - FastEndpoints.Endpoint`2.Put(System.String[])
  - FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
  - FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
  - FastEndpoints.Endpoint`2.Resolve(System.Type)
  - FastEndpoints.Endpoint`2.Resolve``1
  - FastEndpoints.Endpoint`2.Response
  - FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  - FastEndpoints.Endpoint`2.ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  - FastEndpoints.Endpoint`2.ResponseStarted
  - FastEndpoints.Endpoint`2.Roles(System.String[])
  - FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
  - FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
  - FastEndpoints.Endpoint`2.Routes(System.String[])
  - FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendEmptyJsonObject(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendFileAsync(System.IO.FileInfo,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendForbiddenAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendHeadersAsync(System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendInterceptedAsync(System.Object,System.Int32,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendNoContentAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendNotFoundAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendOkAsync(`1,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendOkAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendStreamAsync(System.IO.Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SendUnauthorizedAsync(System.Threading.CancellationToken)
  - FastEndpoints.Endpoint`2.SerializerContext``1(``0)
  - FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
  - FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary{`0}})
  - FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary})
  - FastEndpoints.Endpoint`2.Tags(System.String[])
  - FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
  - FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
  - FastEndpoints.Endpoint`2.ThrowError(System.String)
  - FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  - FastEndpoints.Endpoint`2.TryResolve(System.Type)
  - FastEndpoints.Endpoint`2.TryResolve``1
  - FastEndpoints.Endpoint`2.User
  - FastEndpoints.Endpoint`2.ValidationFailed
  - FastEndpoints.Endpoint`2.Validator``1
  - FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  - FastEndpoints.Endpoint`2.Verbs(System.String[])
  - FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: Endpoint<TRequest, TResponse>
  nameWithType: Endpoint<TRequest, TResponse>
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>
  type: Class
  source:
    id: Endpoint
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Validation.cs
    startLine: 8
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nuse this base class for defining endpoints that use both request and response dtos.\n"
  example: []
  syntax:
    content: 'public abstract class Endpoint<TRequest, TResponse> : BaseEndpoint, IEndpoint, IEventBus, IServiceResolverBase'
    typeParameters:
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    content.vb: >-
      Public MustInherit Class Endpoint(Of TRequest, TResponse)

          Inherits BaseEndpoint

          Implements IEndpoint, IEventBus, IServiceResolverBase
  inheritance:
  - System.Object
  - FastEndpoints.BaseEndpoint
  derivedClasses:
  - FastEndpoints.Endpoint`1
  - FastEndpoints.Endpoint`3
  - FastEndpoints.EndpointWithMapper`2
  - FastEndpoints.EndpointWithMapping`3
  - FastEndpoints.EndpointWithoutRequest
  - FastEndpoints.EndpointWithoutRequest`1
  - FastEndpoints.Security.RefreshTokenService`2
  implements:
  - FastEndpoints.IEndpoint
  - FastEndpoints.IEventBus
  - FastEndpoints.IServiceResolverBase
  inheritedMembers:
  - FastEndpoints.BaseEndpoint.Definition
  - FastEndpoints.BaseEndpoint.HttpContext
  - FastEndpoints.BaseEndpoint.ValidationFailures
  - FastEndpoints.BaseEndpoint.Configure
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Endpoint(Of TRequest, TResponse)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse)
  name.vb: Endpoint(Of TRequest, TResponse)
- uid: FastEndpoints.Endpoint`2.HandleAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.HandleAsync(`0,System.Threading.CancellationToken)
  id: HandleAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: HandleAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  source:
    id: HandleAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 128
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe handler method for the endpoint. this method is called for each request received.\n"
  example: []
  syntax:
    content: public virtual Task HandleAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function HandleAsync(req As TRequest, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.HandleAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.ExecuteAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.ExecuteAsync(`0,System.Threading.CancellationToken)
  id: ExecuteAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ExecuteAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.ExecuteAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ExecuteAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  source:
    id: ExecuteAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 136
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe handler method for the endpoint that returns the response dto. this method is called for each request received.\n"
  example: []
  syntax:
    content: public virtual Task<TResponse> ExecuteAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Overridable Function ExecuteAsync(req As TRequest, ct As CancellationToken) As Task(Of TResponse)
  overload: FastEndpoints.Endpoint`2.ExecuteAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ExecuteAsync(TRequest, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ExecuteAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.TryResolve``1
  commentId: M:FastEndpoints.Endpoint`2.TryResolve``1
  id: TryResolve``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: TryResolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve<TService>()
  type: Method
  source:
    id: TryResolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 140
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: >-
      public TService TryResolve<TService>()

          where TService : class
    typeParameters:
    - id: TService
    return:
      type: '{TService}'
    content.vb: Public Function TryResolve(Of TService As Class) As TService
  overload: FastEndpoints.Endpoint`2.TryResolve*
  implements:
  - FastEndpoints.IServiceResolverBase.TryResolve``1
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
- uid: FastEndpoints.Endpoint`2.TryResolve(System.Type)
  commentId: M:FastEndpoints.Endpoint`2.TryResolve(System.Type)
  id: TryResolve(System.Type)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: TryResolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve(System.Type)
  type: Method
  source:
    id: TryResolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 142
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public object TryResolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function TryResolve(typeOfService As Type) As Object
  overload: FastEndpoints.Endpoint`2.TryResolve*
  implements:
  - FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(System.Type)
- uid: FastEndpoints.Endpoint`2.Resolve``1
  commentId: M:FastEndpoints.Endpoint`2.Resolve``1
  id: Resolve``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Resolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.Resolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve<TService>()
  type: Method
  source:
    id: Resolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 144
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: >-
      public TService Resolve<TService>()

          where TService : class
    typeParameters:
    - id: TService
    return:
      type: '{TService}'
    content.vb: Public Function Resolve(Of TService As Class) As TService
  overload: FastEndpoints.Endpoint`2.Resolve*
  implements:
  - FastEndpoints.IServiceResolverBase.Resolve``1
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
- uid: FastEndpoints.Endpoint`2.Resolve(System.Type)
  commentId: M:FastEndpoints.Endpoint`2.Resolve(System.Type)
  id: Resolve(System.Type)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Resolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.Resolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve(System.Type)
  type: Method
  source:
    id: Resolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 146
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public object Resolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function Resolve(typeOfService As Type) As Object
  overload: FastEndpoints.Endpoint`2.Resolve*
  implements:
  - FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(System.Type)
- uid: FastEndpoints.Endpoint`2.CreateScope
  commentId: M:FastEndpoints.Endpoint`2.CreateScope
  id: CreateScope
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: CreateScope()
  nameWithType: Endpoint<TRequest, TResponse>.CreateScope()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.CreateScope()
  type: Method
  source:
    id: CreateScope
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 148
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public IServiceScope CreateScope()
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceScope
    content.vb: Public Function CreateScope As IServiceScope
  overload: FastEndpoints.Endpoint`2.CreateScope*
  implements:
  - FastEndpoints.IServiceResolverBase.CreateScope
  nameWithType.vb: Endpoint(Of TRequest, TResponse).CreateScope()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).CreateScope()
- uid: FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
  id: Route``1(System.String,System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Route<T>(String, Boolean)
  nameWithType: Endpoint<TRequest, TResponse>.Route<T>(String, Boolean)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Route<T>(System.String, System.Boolean)
  type: Method
  source:
    id: Route
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 158
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nget the value of a given route parameter by specifying the resulting type and param name.\nNOTE: an automatic validation error is sent to the client when value retrieval is not successful.\n"
  example: []
  syntax:
    content: protected T Route<T>(string paramName, bool isRequired = true)
    parameters:
    - id: paramName
      type: System.String
      description: route parameter name
    - id: isRequired
      type: System.Boolean
      description: set to false for disabling the automatic validation error
    typeParameters:
    - id: T
      description: type of the result
    return:
      type: '{T}'
      description: the value if retrieval is successful or null if <code data-dev-comment-type="paramref" class="paramref">isRequired</code> is set to false
    content.vb: Protected Function Route(Of T)(paramName As String, isRequired As Boolean = True) As T
  overload: FastEndpoints.Endpoint`2.Route*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Route(Of T)(String, Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Route(Of T)(System.String, System.Boolean)
  name.vb: Route(Of T)(String, Boolean)
- uid: FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
  id: Query``1(System.String,System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Query<T>(String, Boolean)
  nameWithType: Endpoint<TRequest, TResponse>.Query<T>(String, Boolean)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Query<T>(System.String, System.Boolean)
  type: Method
  source:
    id: Query
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 188
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nget the value of a given query parameter by specifying the resulting type and query parameter name.\nNOTE: an automatic validation error is sent to the client when value retrieval is not successful.\n"
  example: []
  syntax:
    content: protected T Query<T>(string paramName, bool isRequired = true)
    parameters:
    - id: paramName
      type: System.String
      description: query parameter name
    - id: isRequired
      type: System.Boolean
      description: set to false for disabling the automatic validation error
    typeParameters:
    - id: T
      description: type of the result
    return:
      type: '{T}'
      description: the value if retrieval is successful or null if <code data-dev-comment-type="paramref" class="paramref">isRequired</code> is set to false
    content.vb: Protected Function Query(Of T)(paramName As String, isRequired As Boolean = True) As T
  overload: FastEndpoints.Endpoint`2.Query*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Query(Of T)(String, Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Query(Of T)(System.String, System.Boolean)
  name.vb: Query(Of T)(String, Boolean)
- uid: FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.FormFileSectionsAsync(System.Threading.CancellationToken)
  id: FormFileSectionsAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: FormFileSectionsAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.FormFileSectionsAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.FormFileSectionsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: FormFileSectionsAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 214
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ngets a stream of nullable FileMultipartSections from the incoming multipart/form-data without buffering the whole file to memory/disk as done with IFormFile\n"
  example: []
  syntax:
    content: protected async IAsyncEnumerable<FileMultipartSection> FormFileSectionsAsync(CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token
    return:
      type: System.Collections.Generic.IAsyncEnumerable{Microsoft.AspNetCore.WebUtilities.FileMultipartSection}
    content.vb: Protected Function FormFileSectionsAsync(cancellation As CancellationToken = Nothing) As IAsyncEnumerable(Of FileMultipartSection)
  overload: FastEndpoints.Endpoint`2.FormFileSectionsAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).FormFileSectionsAsync(CancellationToken)
  modifiers.csharp:
  - protected
  - async
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).FormFileSectionsAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  id: PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  type: Method
  source:
    id: PublishAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 228
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public Task PublishAsync<TEvent>(TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: eventModel
      type: '{TEvent}'
    - id: waitMode
      type: FastEndpoints.Mode
    - id: cancellation
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TEvent
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function PublishAsync(Of TEvent)(eventModel As TEvent, waitMode As Mode = Mode.WaitForAll, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.PublishAsync*
  implements:
  - FastEndpoints.IEventBus.PublishAsync``1({TEvent},FastEndpoints.Mode,System.Threading.CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
- uid: FastEndpoints.Endpoint`2.CreateTokenWith``1(System.String,System.Action{FastEndpoints.UserPrivileges})
  commentId: M:FastEndpoints.Endpoint`2.CreateTokenWith``1(System.String,System.Action{FastEndpoints.UserPrivileges})
  id: CreateTokenWith``1(System.String,System.Action{FastEndpoints.UserPrivileges})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: CreateTokenWith<TService>(String, Action<UserPrivileges>)
  nameWithType: Endpoint<TRequest, TResponse>.CreateTokenWith<TService>(String, Action<UserPrivileges>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.CreateTokenWith<TService>(System.String, System.Action<FastEndpoints.UserPrivileges>)
  type: Method
  source:
    id: CreateTokenWith
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 237
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ncreate the access/refresh token pair response with a given refresh-token service.\n"
  example: []
  syntax:
    content: >-
      protected Task<TResponse> CreateTokenWith<TService>(string userId, Action<UserPrivileges> userPrivileges)

          where TService : IRefreshTokenService<TResponse>
    parameters:
    - id: userId
      type: System.String
      description: the id of the user for which the tokens will be generated for
    - id: userPrivileges
      type: System.Action{FastEndpoints.UserPrivileges}
      description: the user priviledges to be embeded in the jwt such as roles/claims/permissions
    typeParameters:
    - id: TService
      description: ''
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Protected Function CreateTokenWith(Of TService As IRefreshTokenService(Of TResponse))(userId As String, userPrivileges As Action(Of UserPrivileges)) As Task(Of TResponse)
  overload: FastEndpoints.Endpoint`2.CreateTokenWith*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).CreateTokenWith(Of TService)(String, Action(Of UserPrivileges))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).CreateTokenWith(Of TService)(System.String, System.Action(Of FastEndpoints.UserPrivileges))
  name.vb: CreateTokenWith(Of TService)(String, Action(Of UserPrivileges))
- uid: FastEndpoints.Endpoint`2.ProcessorState``1
  commentId: M:FastEndpoints.Endpoint`2.ProcessorState``1
  id: ProcessorState``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ProcessorState<TState>()
  nameWithType: Endpoint<TRequest, TResponse>.ProcessorState<TState>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ProcessorState<TState>()
  type: Method
  source:
    id: ProcessorState
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 249
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nretrieve the common processor state for this endpoint.\n"
  example: []
  syntax:
    content: >-
      public TState ProcessorState<TState>()

          where TState : class, new()
    typeParameters:
    - id: TState
      description: the type of the processor state
    return:
      type: '{TState}'
    content.vb: Public Function ProcessorState(Of TState As {Class, New}) As TState
  overload: FastEndpoints.Endpoint`2.ProcessorState*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: thrown if the requested type of the processor state does not match with what&apos;s already stored in the context
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ProcessorState(Of TState)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ProcessorState(Of TState)()
  name.vb: ProcessorState(Of TState)()
- uid: FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
  id: OnBeforeValidate(`0)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnBeforeValidate(TRequest)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidate(TRequest)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidate(TRequest)
  type: Method
  source:
    id: OnBeforeValidate
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 8
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something to the request dto before it gets validated.\n"
  example: []
  syntax:
    content: public virtual void OnBeforeValidate(TRequest req)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    content.vb: Public Overridable Sub OnBeforeValidate(req As TRequest)
  overload: FastEndpoints.Endpoint`2.OnBeforeValidate*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidate(TRequest)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidate(TRequest)
- uid: FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,System.Threading.CancellationToken)
  id: OnBeforeValidateAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnBeforeValidateAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidateAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidateAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  source:
    id: OnBeforeValidateAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 15
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something to the request dto before it gets validated.\n"
  example: []
  syntax:
    content: public virtual Task OnBeforeValidateAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnBeforeValidateAsync(req As TRequest, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnBeforeValidateAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync(TRequest, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.OnAfterValidate(`0)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterValidate(`0)
  id: OnAfterValidate(`0)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnAfterValidate(TRequest)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidate(TRequest)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidate(TRequest)
  type: Method
  source:
    id: OnAfterValidate
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 21
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something to the request dto after it gets validated.\n"
  example: []
  syntax:
    content: public virtual void OnAfterValidate(TRequest req)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    content.vb: Public Overridable Sub OnAfterValidate(req As TRequest)
  overload: FastEndpoints.Endpoint`2.OnAfterValidate*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidate(TRequest)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidate(TRequest)
- uid: FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,System.Threading.CancellationToken)
  id: OnAfterValidateAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnAfterValidateAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidateAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidateAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  source:
    id: OnAfterValidateAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 28
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something to the request dto after it gets validated.\n"
  example: []
  syntax:
    content: public virtual Task OnAfterValidateAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnAfterValidateAsync(req As TRequest, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnAfterValidateAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidateAsync(TRequest, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidateAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
  id: OnBeforeHandle(`0)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnBeforeHandle(TRequest)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandle(TRequest)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandle(TRequest)
  type: Method
  source:
    id: OnBeforeHandle
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 34
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something to the request dto before the handler is executed.\n"
  example: []
  syntax:
    content: public virtual void OnBeforeHandle(TRequest req)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    content.vb: Public Overridable Sub OnBeforeHandle(req As TRequest)
  overload: FastEndpoints.Endpoint`2.OnBeforeHandle*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandle(TRequest)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandle(TRequest)
- uid: FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,System.Threading.CancellationToken)
  id: OnBeforeHandleAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnBeforeHandleAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandleAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandleAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  source:
    id: OnBeforeHandleAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 41
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something to the request dto before the handler is executed.\n"
  example: []
  syntax:
    content: public virtual Task OnBeforeHandleAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnBeforeHandleAsync(req As TRequest, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnBeforeHandleAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync(TRequest, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
  id: OnAfterHandle(`0,`1)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnAfterHandle(TRequest, TResponse)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandle(TRequest, TResponse)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandle(TRequest, TResponse)
  type: Method
  source:
    id: OnAfterHandle
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 48
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something after the handler is executed.\n"
  example: []
  syntax:
    content: public virtual void OnAfterHandle(TRequest req, TResponse res)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: res
      type: '{TResponse}'
      description: the response dto that was sent to the client
    content.vb: Public Overridable Sub OnAfterHandle(req As TRequest, res As TResponse)
  overload: FastEndpoints.Endpoint`2.OnAfterHandle*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandle(TRequest, TResponse)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandle(TRequest, TResponse)
- uid: FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,System.Threading.CancellationToken)
  id: OnAfterHandleAsync(`0,`1,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandleAsync(TRequest, TResponse, System.Threading.CancellationToken)
  type: Method
  source:
    id: OnAfterHandleAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 56
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something after the handler is executed.\n"
  example: []
  syntax:
    content: public virtual Task OnAfterHandleAsync(TRequest req, TResponse res, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: res
      type: '{TResponse}'
      description: the response dto that was sent to the client
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnAfterHandleAsync(req As TRequest, res As TResponse, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnAfterHandleAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandleAsync(TRequest, TResponse, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.OnValidationFailed
  commentId: M:FastEndpoints.Endpoint`2.OnValidationFailed
  id: OnValidationFailed
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnValidationFailed()
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailed()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailed()
  type: Method
  source:
    id: OnValidationFailed
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 61
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something when a validation failure occurs.\n"
  example: []
  syntax:
    content: public virtual void OnValidationFailed()
    content.vb: Public Overridable Sub OnValidationFailed
  overload: FastEndpoints.Endpoint`2.OnValidationFailed*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailed()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailed()
- uid: FastEndpoints.Endpoint`2.OnValidationFailedAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnValidationFailedAsync(System.Threading.CancellationToken)
  id: OnValidationFailedAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: OnValidationFailedAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailedAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailedAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: OnValidationFailedAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Hooks.cs
    startLine: 67
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\noverride this method if you&apos;d like to do something when a validation failure occurs.\n"
  example: []
  syntax:
    content: public virtual Task OnValidationFailedAsync(CancellationToken ct)
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function OnValidationFailedAsync(ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.OnValidationFailedAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailedAsync(CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailedAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.User
  commentId: P:FastEndpoints.Endpoint`2.User
  id: User
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: User
  nameWithType: Endpoint<TRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.User
  type: Property
  source:
    id: User
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 23
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe current user principal\n"
  example: []
  syntax:
    content: public ClaimsPrincipal User { get; }
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: Public ReadOnly Property User As ClaimsPrincipal
  overload: FastEndpoints.Endpoint`2.User*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).User
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).User
- uid: FastEndpoints.Endpoint`2.Response
  commentId: P:FastEndpoints.Endpoint`2.Response
  id: Response
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: Endpoint<TRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Response
  type: Property
  source:
    id: Response
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 28
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe response that is sent to the client.\n"
  example: []
  syntax:
    content: public TResponse Response { get; set; }
    parameters: []
    return:
      type: '{TResponse}'
    content.vb: Public Property Response As TResponse
  overload: FastEndpoints.Endpoint`2.Response*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Response
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Response
- uid: FastEndpoints.Endpoint`2.Config
  commentId: P:FastEndpoints.Endpoint`2.Config
  id: Config
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: Endpoint<TRequest, TResponse>.Config
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Config
  type: Property
  source:
    id: Config
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 37
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ngives access to the configuration. if you need to access this property from within the endpoint Configure() method, make sure to pass in the config to <code>.AddFastEndpoints(config: builder.Configuration)</code>\n"
  example: []
  syntax:
    content: public IConfiguration Config { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Configuration.IConfiguration
    content.vb: Public ReadOnly Property Config As IConfiguration
  overload: FastEndpoints.Endpoint`2.Config*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Config
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Config
- uid: FastEndpoints.Endpoint`2.Env
  commentId: P:FastEndpoints.Endpoint`2.Env
  id: Env
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Env
  nameWithType: Endpoint<TRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Env
  type: Property
  source:
    id: Env
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 46
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ngives access to the hosting environment\n"
  example: []
  syntax:
    content: public IWebHostEnvironment Env { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
    content.vb: Public ReadOnly Property Env As IWebHostEnvironment
  overload: FastEndpoints.Endpoint`2.Env*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Env
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Env
- uid: FastEndpoints.Endpoint`2.Logger
  commentId: P:FastEndpoints.Endpoint`2.Logger
  id: Logger
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Endpoint<TRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Logger
  type: Property
  source:
    id: Logger
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 51
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe logger for the current endpoint type\n"
  example: []
  syntax:
    content: public ILogger Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public ReadOnly Property Logger As ILogger
  overload: FastEndpoints.Endpoint`2.Logger*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Logger
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Logger
- uid: FastEndpoints.Endpoint`2.BaseURL
  commentId: P:FastEndpoints.Endpoint`2.BaseURL
  id: BaseURL
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: BaseURL
  nameWithType: Endpoint<TRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.BaseURL
  type: Property
  source:
    id: BaseURL
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 56
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe base url of the current request\n"
  example: []
  syntax:
    content: public string BaseURL { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BaseURL As String
  overload: FastEndpoints.Endpoint`2.BaseURL*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).BaseURL
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).BaseURL
- uid: FastEndpoints.Endpoint`2.HttpMethod
  commentId: P:FastEndpoints.Endpoint`2.HttpMethod
  id: HttpMethod
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: HttpMethod
  nameWithType: Endpoint<TRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpMethod
  type: Property
  source:
    id: HttpMethod
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 61
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe http method of the current request\n"
  example: []
  syntax:
    content: public Http HttpMethod { get; }
    parameters: []
    return:
      type: FastEndpoints.Http
    content.vb: Public ReadOnly Property HttpMethod As Http
  overload: FastEndpoints.Endpoint`2.HttpMethod*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpMethod
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpMethod
- uid: FastEndpoints.Endpoint`2.Form
  commentId: P:FastEndpoints.Endpoint`2.Form
  id: Form
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Form
  nameWithType: Endpoint<TRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Form
  type: Property
  source:
    id: Form
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 66
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe form sent with the request. only populated if content-type is &apos;application/x-www-form-urlencoded&apos; or &apos;multipart/form-data&apos;\n"
  example: []
  syntax:
    content: public IFormCollection Form { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.IFormCollection
    content.vb: Public ReadOnly Property Form As IFormCollection
  overload: FastEndpoints.Endpoint`2.Form*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Form
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Form
- uid: FastEndpoints.Endpoint`2.Files
  commentId: P:FastEndpoints.Endpoint`2.Files
  id: Files
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: Endpoint<TRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Files
  type: Property
  source:
    id: Files
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 71
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe files sent with the request. only populated when content-type is &apos;multipart/form-data&apos;\n"
  example: []
  syntax:
    content: public IFormFileCollection Files { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.IFormFileCollection
    content.vb: Public ReadOnly Property Files As IFormFileCollection
  overload: FastEndpoints.Endpoint`2.Files*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Files
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Files
- uid: FastEndpoints.Endpoint`2.ResponseStarted
  commentId: P:FastEndpoints.Endpoint`2.ResponseStarted
  id: ResponseStarted
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ResponseStarted
  nameWithType: Endpoint<TRequest, TResponse>.ResponseStarted
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseStarted
  type: Property
  source:
    id: ResponseStarted
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Properties.cs
    startLine: 76
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nget or set whether the response has started. you&apos;d only use this if you&apos;re writing to the response stream by yourself.\n"
  example: []
  syntax:
    content: public bool ResponseStarted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResponseStarted As Boolean
  overload: FastEndpoints.Endpoint`2.ResponseStarted*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseStarted
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseStarted
- uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,System.Threading.CancellationToken)
  id: SendAsync(`1,System.Int32,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendAsync(TResponse, Int32, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync(TResponse, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 12
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend the supplied response dto serialized as json to the client.\n"
  example: []
  syntax:
    content: protected Task SendAsync(TResponse response, int statusCode = 200, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: response
      type: '{TResponse}'
      description: the object to serialize to json
    - id: statusCode
      type: System.Int32
      description: optional custom http status code
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendAsync(response As TResponse, statusCode As Integer = 200, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendAsync(TResponse, Int32, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync(TResponse, System.Int32, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendInterceptedAsync(System.Object,System.Int32,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendInterceptedAsync(System.Object,System.Int32,System.Threading.CancellationToken)
  id: SendInterceptedAsync(System.Object,System.Int32,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendInterceptedAsync(Object, Int32, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendInterceptedAsync(Object, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendInterceptedAsync(System.Object, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendInterceptedAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 26
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsends an object serialized as json to the client. if a response interceptor has been defined,\nthen that will be executed before the normal response is sent.\n"
  example: []
  syntax:
    content: protected async Task SendInterceptedAsync(object response, int statusCode = 200, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: response
      type: System.Object
      description: the object to serialize to json
    - id: statusCode
      type: System.Int32
      description: optional custom http status code
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendInterceptedAsync(response As Object, statusCode As Integer = 200, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendInterceptedAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: will throw if an interceptor has not been defined against the endpoint or globally
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendInterceptedAsync(Object, Int32, CancellationToken)
  modifiers.csharp:
  - protected
  - async
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendInterceptedAsync(System.Object, System.Int32, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  id: SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(System.Object, TResponse, System.Nullable<FastEndpoints.Http>, System.Nullable<System.Int32>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendCreatedAtAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 49
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 201 created response with a location header containing where the resource can be retrieved from.\n<p>HINT: if pointing to an endpoint with multiple verbs, make sure to specify the &apos;verb&apos; argument and if pointing to a multi route endpoint, specify the &apos;routeNumber&apos; argument.</p>\n<p>WARNING: this overload will not add a location header if you&apos;ve set a custom endpoint name using .WithName() method. use the other overload that accepts a string endpoint name instead.</p>\n"
  example: []
  syntax:
    content: >-
      protected Task SendCreatedAtAsync<TEndpoint>(object routeValues, TResponse responseBody, Http? verb = null, int? routeNumber = null, bool generateAbsoluteUrl = false, CancellationToken cancellation = default(CancellationToken))

          where TEndpoint : IEndpoint
    parameters:
    - id: routeValues
      type: System.Object
      description: a route values object with key/value pairs of route information
    - id: responseBody
      type: '{TResponse}'
      description: the content to be serialized in the response body
    - id: verb
      type: System.Nullable{FastEndpoints.Http}
      description: only useful when pointing to a multi verb endpoint
    - id: routeNumber
      type: System.Nullable{System.Int32}
      description: only useful when pointing to a multi route endpoint
    - id: generateAbsoluteUrl
      type: System.Boolean
      description: set to true for generating a absolute url instead of relative url for the location header
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint where the resource can be retrieved from
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendCreatedAtAsync(Of TEndpoint As IEndpoint)(routeValues As Object, responseBody As TResponse, verb As Http? = Nothing, routeNumber As Integer? = Nothing, generateAbsoluteUrl As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendCreatedAtAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)(Object, TResponse, Nullable(Of Http), Nullable(Of Int32), Boolean, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)(System.Object, TResponse, System.Nullable(Of FastEndpoints.Http), System.Nullable(Of System.Int32), System.Boolean, System.Threading.CancellationToken)
  name.vb: SendCreatedAtAsync(Of TEndpoint)(Object, TResponse, Nullable(Of Http), Nullable(Of Int32), Boolean, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,System.Threading.CancellationToken)
  id: SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync(System.String, System.Object, TResponse, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendCreatedAtAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 78
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 201 created response with a location header containing where the resource can be retrieved from.\n<p>WARNING: this method is only supported on single verb/route endpoints. it will not produce a `Location` header if used in a multi verb or multi route endpoint.</p>\n"
  example: []
  syntax:
    content: protected Task SendCreatedAtAsync(string endpointName, object routeValues, TResponse responseBody, bool generateAbsoluteUrl = false, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: endpointName
      type: System.String
      description: the name of the endpoint to use for link generation (openapi route id)
    - id: routeValues
      type: System.Object
      description: a route values object with key/value pairs of route information
    - id: responseBody
      type: '{TResponse}'
      description: the content to be serialized in the response body
    - id: generateAbsoluteUrl
      type: System.Boolean
      description: set to true for generating a absolute url instead of relative url for the location header
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendCreatedAtAsync(endpointName As String, routeValues As Object, responseBody As TResponse, generateAbsoluteUrl As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendCreatedAtAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(System.String, System.Object, TResponse, System.Boolean, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  id: SendStringAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendStringAsync(String, Int32, String, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendStringAsync(String, Int32, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStringAsync(System.String, System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendStringAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 103
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend the supplied string content to the client.\n"
  example: []
  syntax:
    content: protected Task SendStringAsync(string content, int statusCode = 200, string contentType = "text/plain", CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: content
      type: System.String
      description: the string to write to the response body
    - id: statusCode
      type: System.Int32
      description: optional custom http status code
    - id: contentType
      type: System.String
      description: optional content type header value
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendStringAsync(content As String, statusCode As Integer = 200, contentType As String = "text/plain", cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendStringAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStringAsync(String, Int32, String, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStringAsync(System.String, System.Int32, System.String, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendOkAsync(`1,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendOkAsync(`1,System.Threading.CancellationToken)
  id: SendOkAsync(`1,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendOkAsync(TResponse, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync(TResponse, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync(TResponse, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendOkAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 116
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend an http 200 ok response with the supplied response dto serialized as json to the client.\n"
  example: []
  syntax:
    content: protected Task SendOkAsync(TResponse response, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: response
      type: '{TResponse}'
      description: the object to serialize to json
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendOkAsync(response As TResponse, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendOkAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync(TResponse, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync(TResponse, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendOkAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendOkAsync(System.Threading.CancellationToken)
  id: SendOkAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendOkAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: SendOkAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 126
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend an http 200 ok response without any body\n"
  example: []
  syntax:
    content: protected Task SendOkAsync(CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendOkAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendOkAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync(CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,System.Threading.CancellationToken)
  id: SendErrorsAsync(System.Int32,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendErrorsAsync(Int32, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync(Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendErrorsAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 136
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 400 bad request with error details of the current validation failures\n"
  example: []
  syntax:
    content: protected Task SendErrorsAsync(int statusCode = 400, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: statusCode
      type: System.Int32
      description: the status code for the error response
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendErrorsAsync(statusCode As Integer = 400, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendErrorsAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendErrorsAsync(Int32, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync(System.Int32, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendNoContentAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendNoContentAsync(System.Threading.CancellationToken)
  id: SendNoContentAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendNoContentAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: SendNoContentAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 145
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 204 no content response\n"
  example: []
  syntax:
    content: protected Task SendNoContentAsync(CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendNoContentAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendNoContentAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNoContentAsync(CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendNotFoundAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendNotFoundAsync(System.Threading.CancellationToken)
  id: SendNotFoundAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendNotFoundAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: SendNotFoundAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 154
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 404 not found response\n"
  example: []
  syntax:
    content: protected Task SendNotFoundAsync(CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendNotFoundAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendNotFoundAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNotFoundAsync(CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendUnauthorizedAsync(System.Threading.CancellationToken)
  id: SendUnauthorizedAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendUnauthorizedAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: SendUnauthorizedAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 163
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 401 unauthorized response\n"
  example: []
  syntax:
    content: protected Task SendUnauthorizedAsync(CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendUnauthorizedAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendUnauthorizedAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync(CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendForbiddenAsync(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendForbiddenAsync(System.Threading.CancellationToken)
  id: SendForbiddenAsync(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendForbiddenAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: SendForbiddenAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 172
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 403 unauthorized response\n"
  example: []
  syntax:
    content: protected Task SendForbiddenAsync(CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendForbiddenAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendForbiddenAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendForbiddenAsync(CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: SendRedirectAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendRedirectAsync(String, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendRedirectAsync(String, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendRedirectAsync(System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendRedirectAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 183
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 301/302 redirect response\n"
  example: []
  syntax:
    content: protected Task SendRedirectAsync(string location, bool isPermanant = false, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: location
      type: System.String
      description: the location to redirect to
    - id: isPermanant
      type: System.Boolean
      description: set to true for a 302 redirect. 301 is the default.
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendRedirectAsync(location As String, isPermanant As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendRedirectAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendRedirectAsync(String, Boolean, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendRedirectAsync(System.String, System.Boolean, System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendHeadersAsync(System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendHeadersAsync(System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,System.Threading.CancellationToken)
  id: SendHeadersAsync(System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendHeadersAsync(System.Action<Microsoft.AspNetCore.Http.IHeaderDictionary>, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendHeadersAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 194
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend headers in response to a HEAD request\n"
  example: []
  syntax:
    content: protected Task SendHeadersAsync(Action<IHeaderDictionary> headers, int statusCode = 200, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: headers
      type: System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary}
      description: an action to be performed on the headers dictionary of the response
    - id: statusCode
      type: System.Int32
      description: optional custom http status code
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendHeadersAsync(headers As Action(Of IHeaderDictionary), statusCode As Integer = 200, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendHeadersAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendHeadersAsync(Action(Of IHeaderDictionary), Int32, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendHeadersAsync(System.Action(Of Microsoft.AspNetCore.Http.IHeaderDictionary), System.Int32, System.Threading.CancellationToken)
  name.vb: SendHeadersAsync(Action(Of IHeaderDictionary), Int32, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  id: SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendBytesAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 207
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a byte array to the client\n"
  example: []
  syntax:
    content: protected Task SendBytesAsync(byte[] bytes, string fileName = null, string contentType = "application/octet-stream", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: bytes
      type: System.Byte[]
      description: the bytes to send
    - id: fileName
      type: System.String
    - id: contentType
      type: System.String
      description: optional content type to set on the http response
    - id: lastModified
      type: System.Nullable{System.DateTimeOffset}
      description: optional last modified date-time-offset for the data stream
    - id: enableRangeProcessing
      type: System.Boolean
      description: optional switch for enabling range processing
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendBytesAsync(bytes As Byte(), fileName As String = Nothing, contentType As String = "application/octet-stream", lastModified As DateTimeOffset? = Nothing, enableRangeProcessing As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendBytesAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendBytesAsync(Byte(), String, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync(System.Byte(), System.String, System.String, System.Nullable(Of System.DateTimeOffset), System.Boolean, System.Threading.CancellationToken)
  name.vb: SendBytesAsync(Byte(), String, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendFileAsync(System.IO.FileInfo,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendFileAsync(System.IO.FileInfo,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  id: SendFileAsync(System.IO.FileInfo,System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync(System.IO.FileInfo, System.String, System.Nullable<System.DateTimeOffset>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendFileAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 225
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a file to the client\n"
  example: []
  syntax:
    content: protected Task SendFileAsync(FileInfo fileInfo, string contentType = "application/octet-stream", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: fileInfo
      type: System.IO.FileInfo
      description: ''
    - id: contentType
      type: System.String
      description: optional content type to set on the http response
    - id: lastModified
      type: System.Nullable{System.DateTimeOffset}
      description: optional last modified date-time-offset for the data stream
    - id: enableRangeProcessing
      type: System.Boolean
      description: optional switch for enabling range processing
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendFileAsync(fileInfo As FileInfo, contentType As String = "application/octet-stream", lastModified As DateTimeOffset? = Nothing, enableRangeProcessing As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendFileAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendFileAsync(FileInfo, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync(System.IO.FileInfo, System.String, System.Nullable(Of System.DateTimeOffset), System.Boolean, System.Threading.CancellationToken)
  name.vb: SendFileAsync(FileInfo, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendStreamAsync(System.IO.Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendStreamAsync(System.IO.Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  id: SendStreamAsync(System.IO.Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTimeOffset},System.Boolean,System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync(System.IO.Stream, System.String, System.Nullable<System.Int64>, System.String, System.Nullable<System.DateTimeOffset>, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendStreamAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 244
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend the contents of a stream to the client\n"
  example: []
  syntax:
    content: protected Task SendStreamAsync(Stream stream, string fileName = null, long? fileLengthBytes = null, string contentType = "application/octet-stream", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: stream
      type: System.IO.Stream
      description: the stream to read the data from
    - id: fileName
      type: System.String
      description: and optional file name to set in the content-disposition header
    - id: fileLengthBytes
      type: System.Nullable{System.Int64}
      description: optional total size of the file/stream
    - id: contentType
      type: System.String
      description: optional content type to set on the http response
    - id: lastModified
      type: System.Nullable{System.DateTimeOffset}
      description: optional last modified date-time-offset for the data stream
    - id: enableRangeProcessing
      type: System.Boolean
      description: optional switch for enabling range processing
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendStreamAsync(stream As Stream, fileName As String = Nothing, fileLengthBytes As Long? = Nothing, contentType As String = "application/octet-stream", lastModified As DateTimeOffset? = Nothing, enableRangeProcessing As Boolean = False, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendStreamAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStreamAsync(Stream, String, Nullable(Of Int64), String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync(System.IO.Stream, System.String, System.Nullable(Of System.Int64), System.String, System.Nullable(Of System.DateTimeOffset), System.Boolean, System.Threading.CancellationToken)
  name.vb: SendStreamAsync(Stream, String, Nullable(Of Int64), String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)
  id: SendEventStreamAsync``1(System.String,System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>(System.String, System.Collections.Generic.IAsyncEnumerable<T>, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendEventStreamAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 269
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nstart a &quot;server-sent-events&quot; data stream for the client asynchronously without blocking any threads\n"
  example: []
  syntax:
    content: protected Task SendEventStreamAsync<T>(string eventName, IAsyncEnumerable<T> eventStream, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: eventName
      type: System.String
      description: the name of the event stream
    - id: eventStream
      type: System.Collections.Generic.IAsyncEnumerable{{T}}
      description: an IAsyncEnumerable that is the source of the data
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used.
    typeParameters:
    - id: T
      description: the type of the objects being sent in the event stream
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendEventStreamAsync(Of T)(eventName As String, eventStream As IAsyncEnumerable(Of T), cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendEventStreamAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEventStreamAsync(Of T)(String, IAsyncEnumerable(Of T), CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEventStreamAsync(Of T)(System.String, System.Collections.Generic.IAsyncEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: SendEventStreamAsync(Of T)(String, IAsyncEnumerable(Of T), CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendEmptyJsonObject(System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendEmptyJsonObject(System.Threading.CancellationToken)
  id: SendEmptyJsonObject(System.Threading.CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendEmptyJsonObject(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendEmptyJsonObject(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEmptyJsonObject(System.Threading.CancellationToken)
  type: Method
  source:
    id: SendEmptyJsonObject
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Send.cs
    startLine: 278
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend an empty json object in the body\n"
  example: []
  syntax:
    content: protected Task SendEmptyJsonObject(CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: cancellation
      type: System.Threading.CancellationToken
      description: optional cancellation token. if not specified, the <code>HttpContext.RequestAborted</code> token is used
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function SendEmptyJsonObject(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendEmptyJsonObject*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEmptyJsonObject(CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEmptyJsonObject(System.Threading.CancellationToken)
- uid: FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
  id: AllowAnonymous(FastEndpoints.Http[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowAnonymous(Http[])
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous(Http[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous(FastEndpoints.Http[])
  type: Method
  source:
    id: AllowAnonymous
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 21
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nallow unauthenticated requests to this endpoint. optionally specify a set of verbs to allow unauthenticated access with.\ni.e. if the endpoint is listening to POST, PUT &amp; PATCH and you specify AllowAnonymous(Http.POST), then only PUT &amp; PATCH will require authentication.\n"
  example: []
  syntax:
    content: protected void AllowAnonymous(params Http[] verbs)
    parameters:
    - id: verbs
      type: FastEndpoints.Http[]
    content.vb: Protected Sub AllowAnonymous(ParamArray verbs As Http())
  overload: FastEndpoints.Endpoint`2.AllowAnonymous*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnonymous(Http())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous(FastEndpoints.Http())
  name.vb: AllowAnonymous(Http())
- uid: FastEndpoints.Endpoint`2.AllowAnonymous(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AllowAnonymous(System.String[])
  id: AllowAnonymous(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowAnonymous(String[])
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous(System.String[])
  type: Method
  source:
    id: AllowAnonymous
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 27
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nallow unauthenticated requests to this endpoint for a specified set of http verbs.\ni.e. if the endpoint is listening to POST, PUT &amp; PATCH and you specify AllowAnonymous(Http.POST), then only PUT &amp; PATCH will require authentication.\n"
  example: []
  syntax:
    content: protected void AllowAnonymous(string[] verbs)
    parameters:
    - id: verbs
      type: System.String[]
    content.vb: Protected Sub AllowAnonymous(verbs As String())
  overload: FastEndpoints.Endpoint`2.AllowAnonymous*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnonymous(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous(System.String())
  name.vb: AllowAnonymous(String())
- uid: FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
  id: AllowFileUploads(System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowFileUploads(Boolean)
  nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads(Boolean)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads(System.Boolean)
  type: Method
  source:
    id: AllowFileUploads
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 36
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nenable file uploads with multipart/form-data content type\n"
  example: []
  syntax:
    content: protected void AllowFileUploads(bool dontAutoBindFormData = false)
    parameters:
    - id: dontAutoBindFormData
      type: System.Boolean
      description: "\nset &apos;true&apos; to disable auto binding of form data which enables uploading and reading of large files without buffering to memory/disk.\nyou can access the multipart sections for reading via the FormFileSectionsAsync() method.\n"
    content.vb: Protected Sub AllowFileUploads(dontAutoBindFormData As Boolean = False)
  overload: FastEndpoints.Endpoint`2.AllowFileUploads*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFileUploads(Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads(System.Boolean)
- uid: FastEndpoints.Endpoint`2.AllowFormData
  commentId: M:FastEndpoints.Endpoint`2.AllowFormData
  id: AllowFormData
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowFormData()
  nameWithType: Endpoint<TRequest, TResponse>.AllowFormData()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFormData()
  type: Method
  source:
    id: AllowFormData
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 41
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nenable multipart/form-data submissions\n"
  example: []
  syntax:
    content: protected void AllowFormData()
    content.vb: Protected Sub AllowFormData
  overload: FastEndpoints.Endpoint`2.AllowFormData*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFormData()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFormData()
- uid: FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
  id: AuthSchemes(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AuthSchemes(String[])
  nameWithType: Endpoint<TRequest, TResponse>.AuthSchemes(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AuthSchemes(System.String[])
  type: Method
  source:
    id: AuthSchemes
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 47
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify which authentication schemes to use for authenticating requests to this endpoint\n"
  example: []
  syntax:
    content: protected void AuthSchemes(params string[] authSchemeNames)
    parameters:
    - id: authSchemeNames
      type: System.String[]
      description: the authentication scheme names
    content.vb: Protected Sub AuthSchemes(ParamArray authSchemeNames As String())
  overload: FastEndpoints.Endpoint`2.AuthSchemes*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AuthSchemes(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AuthSchemes(System.String())
  name.vb: AuthSchemes(String())
- uid: FastEndpoints.Endpoint`2.Claims(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Claims(System.String[])
  id: Claims(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Claims(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Claims(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims(System.String[])
  type: Method
  source:
    id: Claims
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 53
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nallows access if the claims principal has ANY of the given claim types\n"
  example: []
  syntax:
    content: protected void Claims(params string[] claimTypes)
    parameters:
    - id: claimTypes
      type: System.String[]
      description: the claim types
    content.vb: Protected Sub Claims(ParamArray claimTypes As String())
  overload: FastEndpoints.Endpoint`2.Claims*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims(System.String())
  name.vb: Claims(String())
- uid: FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
  id: ClaimsAll(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ClaimsAll(String[])
  nameWithType: Endpoint<TRequest, TResponse>.ClaimsAll(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ClaimsAll(System.String[])
  type: Method
  source:
    id: ClaimsAll
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 59
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nallows access if the claims principal has ALL of the given claim types\n"
  example: []
  syntax:
    content: protected void ClaimsAll(params string[] claimTypes)
    parameters:
    - id: claimTypes
      type: System.String[]
      description: the claim types
    content.vb: Protected Sub ClaimsAll(ParamArray claimTypes As String())
  overload: FastEndpoints.Endpoint`2.ClaimsAll*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ClaimsAll(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ClaimsAll(System.String())
  name.vb: ClaimsAll(String())
- uid: FastEndpoints.Endpoint`2.Delete(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Delete(System.String[])
  id: Delete(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Delete(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Delete(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Delete(System.String[])
  type: Method
  source:
    id: Delete
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 64
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify to listen for DELETE requests on one or more routes.\n"
  example: []
  syntax:
    content: protected void Delete(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Delete(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Delete*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Delete(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Delete(System.String())
  name.vb: Delete(String())
- uid: FastEndpoints.Endpoint`2.Delete(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Delete(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Delete(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Delete(String, Expression<Func<TRequest, Object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Delete(String, Expression<Func<TRequest, Object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Delete(System.String, System.Linq.Expressions.Expression<System.Func<TRequest, System.Object>>)
  type: Method
  source:
    id: Delete
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 78
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify a DELETE route pattern using a replacement expression.\n"
  example: []
  syntax:
    content: protected void Delete(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: "\nthe words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.\nthe replacement words do not have to match the request dto property names.\n<p><code>/invoice/{@id}/soft-delete</code></p>"
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r => new { r.InvoiceID }</code>
    content.vb: Protected Sub Delete(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Delete*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Delete(String, Expression(Of Func(Of TRequest, Object)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Delete(System.String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Object)))
  name.vb: Delete(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.Description(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Description(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  id: Description(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Description(Action<RouteHandlerBuilder>, Boolean)
  nameWithType: Endpoint<TRequest, TResponse>.Description(Action<RouteHandlerBuilder>, Boolean)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Description(System.Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>, System.Boolean)
  type: Method
  source:
    id: Description
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 92
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ndescribe openapi metadata for this endpoint. optionaly specify whether or not you want to clear the default Accepts/Produces metadata.\n<p>\nEXAMPLE: <code>b => b.Accepts&lt;Request>(&quot;text/plain&quot;)</code>\n</p>\n"
  example: []
  syntax:
    content: protected void Description(Action<RouteHandlerBuilder> builder, bool clearDefaults = false)
    parameters:
    - id: builder
      type: System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder}
      description: the route handler builder for this endpoint
    - id: clearDefaults
      type: System.Boolean
      description: set to true if the defaults should be cleared
    content.vb: Protected Sub Description(builder As Action(Of RouteHandlerBuilder), clearDefaults As Boolean = False)
  overload: FastEndpoints.Endpoint`2.Description*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Description(Action(Of RouteHandlerBuilder), Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Description(System.Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder), System.Boolean)
  name.vb: Description(Action(Of RouteHandlerBuilder), Boolean)
- uid: FastEndpoints.Endpoint`2.DontAutoTag
  commentId: M:FastEndpoints.Endpoint`2.DontAutoTag
  id: DontAutoTag
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: DontAutoTag()
  nameWithType: Endpoint<TRequest, TResponse>.DontAutoTag()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontAutoTag()
  type: Method
  source:
    id: DontAutoTag
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 97
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nif swagger auto tagging based on path segment is enabled, calling this method will prevent a tag from being added to this endpoint.\n"
  example: []
  syntax:
    content: protected void DontAutoTag()
    content.vb: Protected Sub DontAutoTag
  overload: FastEndpoints.Endpoint`2.DontAutoTag*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontAutoTag()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontAutoTag()
- uid: FastEndpoints.Endpoint`2.DontCatchExceptions
  commentId: M:FastEndpoints.Endpoint`2.DontCatchExceptions
  id: DontCatchExceptions
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: DontCatchExceptions()
  nameWithType: Endpoint<TRequest, TResponse>.DontCatchExceptions()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontCatchExceptions()
  type: Method
  source:
    id: DontCatchExceptions
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 104
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nuse this only if you have your own exception catching middleware.\nif this method is called in config, an automatic error response will not be sent to the client by the library.\nall exceptions will be thrown and it would be the responsibility of your exeception catching middleware to handle them.\n"
  example: []
  syntax:
    content: protected void DontCatchExceptions()
    content.vb: Protected Sub DontCatchExceptions
  overload: FastEndpoints.Endpoint`2.DontCatchExceptions*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontCatchExceptions()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontCatchExceptions()
- uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  commentId: M:FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  id: DontThrowIfValidationFails
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: DontThrowIfValidationFails()
  nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  type: Method
  source:
    id: DontThrowIfValidationFails
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 110
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ndisable auto validation failure responses (400 bad request with error details) for this endpoint.\n<p>HINT: this only applies to request dto validation.</p>\n"
  example: []
  syntax:
    content: protected void DontThrowIfValidationFails()
    content.vb: Protected Sub DontThrowIfValidationFails
  overload: FastEndpoints.Endpoint`2.DontThrowIfValidationFails*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
- uid: FastEndpoints.Endpoint`2.Get(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Get(System.String[])
  id: Get(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Get(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Get(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Get(System.String[])
  type: Method
  source:
    id: Get
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 115
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify to listen for GET requests on one or more routes.\n"
  example: []
  syntax:
    content: protected void Get(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Get(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Get*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Get(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Get(System.String())
  name.vb: Get(String())
- uid: FastEndpoints.Endpoint`2.Get(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Get(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Get(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Get(String, Expression<Func<TRequest, Object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Get(String, Expression<Func<TRequest, Object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Get(System.String, System.Linq.Expressions.Expression<System.Func<TRequest, System.Object>>)
  type: Method
  source:
    id: Get
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 129
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify a GET route pattern using a replacement expression.\n"
  example: []
  syntax:
    content: protected void Get(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: "\nthe words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.\nthe replacement words do not have to match the request dto property names.\n<p><code>/invoice/{@id}/print/{@pageNum}</code></p>"
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r => new { r.InvoiceID, r.PageNumber }</code>
    content.vb: Protected Sub Get(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Get*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Get(String, Expression(Of Func(Of TRequest, Object)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Get(System.String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Object)))
  name.vb: Get(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.Group``1
  commentId: M:FastEndpoints.Endpoint`2.Group``1
  id: Group``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Group<TEndpointGroup>()
  nameWithType: Endpoint<TRequest, TResponse>.Group<TEndpointGroup>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Group<TEndpointGroup>()
  type: Method
  source:
    id: Group
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 143
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nif this endpoint is part of an endpoint group, specify the type of the <xref href=\"FastEndpoints.Group\" data-throw-if-not-resolved=\"false\"></xref> concrete class where the common configuration for the group is specified.\n<p>\nWARNING: this method can only be called after the endpoint route has been specified.\n</p>\n"
  example: []
  syntax:
    content: >-
      protected sealed override void Group<TEndpointGroup>()

          where TEndpointGroup : Group, new()
    typeParameters:
    - id: TEndpointGroup
      description: the type of your <xref href="FastEndpoints.Group" data-throw-if-not-resolved="false"></xref> concrete class
    content.vb: Protected NotOverridable Overrides Sub Group(Of TEndpointGroup As {Group, New})
  overridden: FastEndpoints.BaseEndpoint.Group``1
  overload: FastEndpoints.Endpoint`2.Group*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: thrown if endpoint route hasn&apos;t yet been specified
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Group(Of TEndpointGroup)()
  modifiers.csharp:
  - protected
  - sealed
  - override
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Group(Of TEndpointGroup)()
  name.vb: Group(Of TEndpointGroup)()
- uid: FastEndpoints.Endpoint`2.Head(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Head(System.String[])
  id: Head(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Head(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Head(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Head(System.String[])
  type: Method
  source:
    id: Head
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 155
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify to listen for HEAD requests on one or more routes.\n"
  example: []
  syntax:
    content: protected void Head(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Head(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Head*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Head(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Head(System.String())
  name.vb: Head(String())
- uid: FastEndpoints.Endpoint`2.Head(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Head(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Head(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Head(String, Expression<Func<TRequest, Object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Head(String, Expression<Func<TRequest, Object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Head(System.String, System.Linq.Expressions.Expression<System.Func<TRequest, System.Object>>)
  type: Method
  source:
    id: Head
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 169
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify a HEAD route pattern using a replacement expression.\n"
  example: []
  syntax:
    content: protected void Head(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: "\nthe words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.\nthe replacement words do not have to match the request dto property names.\n<p><code>/invoice/{@id}/print/{@pageNum}</code></p>"
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r => new { r.InvoiceID, r.PageNumber }</code>
    content.vb: Protected Sub Head(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Head*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Head(String, Expression(Of Func(Of TRequest, Object)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Head(System.String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Object)))
  name.vb: Head(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.Options(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  commentId: M:FastEndpoints.Endpoint`2.Options(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  id: Options(System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Options(Action<RouteHandlerBuilder>)
  nameWithType: Endpoint<TRequest, TResponse>.Options(Action<RouteHandlerBuilder>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options(System.Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>)
  type: Method
  source:
    id: Options
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 179
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nset endpoint configurations options using an endpoint builder action ///\n"
  example: []
  syntax:
    content: protected void Options(Action<RouteHandlerBuilder> builder)
    parameters:
    - id: builder
      type: System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder}
      description: the builder for this endpoint
    content.vb: Protected Sub Options(builder As Action(Of RouteHandlerBuilder))
  overload: FastEndpoints.Endpoint`2.Options*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Options(Action(Of RouteHandlerBuilder))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Options(System.Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder))
  name.vb: Options(Action(Of RouteHandlerBuilder))
- uid: FastEndpoints.Endpoint`2.Patch(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Patch(System.String[])
  id: Patch(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Patch(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Patch(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Patch(System.String[])
  type: Method
  source:
    id: Patch
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 184
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify to listen for PATCH requests on one or more routes.\n"
  example: []
  syntax:
    content: protected void Patch(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Patch(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Patch*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Patch(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Patch(System.String())
  name.vb: Patch(String())
- uid: FastEndpoints.Endpoint`2.Patch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Patch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Patch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Patch(String, Expression<Func<TRequest, Object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Patch(String, Expression<Func<TRequest, Object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Patch(System.String, System.Linq.Expressions.Expression<System.Func<TRequest, System.Object>>)
  type: Method
  source:
    id: Patch
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 198
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify a PATCH route pattern using a replacement expression.\n"
  example: []
  syntax:
    content: protected void Patch(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: "\nthe words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.\nthe replacement words do not have to match the request dto property names.\n<p><code>/invoice/{@id}</code></p>"
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r => new { r.InvoiceID }</code>
    content.vb: Protected Sub Patch(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Patch*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Patch(String, Expression(Of Func(Of TRequest, Object)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Patch(System.String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Object)))
  name.vb: Patch(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Permissions(System.String[])
  id: Permissions(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Permissions(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Permissions(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions(System.String[])
  type: Method
  source:
    id: Permissions
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 208
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nallows access if the claims principal has ANY of the given permissions\n"
  example: []
  syntax:
    content: protected void Permissions(params string[] permissions)
    parameters:
    - id: permissions
      type: System.String[]
      description: the permissions
    content.vb: Protected Sub Permissions(ParamArray permissions As String())
  overload: FastEndpoints.Endpoint`2.Permissions*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions(System.String())
  name.vb: Permissions(String())
- uid: FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
  id: PermissionsAll(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PermissionsAll(String[])
  nameWithType: Endpoint<TRequest, TResponse>.PermissionsAll(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PermissionsAll(System.String[])
  type: Method
  source:
    id: PermissionsAll
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 214
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nallows access if the claims principal has ALL of the given permissions\n"
  example: []
  syntax:
    content: protected void PermissionsAll(params string[] permissions)
    parameters:
    - id: permissions
      type: System.String[]
      description: the permissions
    content.vb: Protected Sub PermissionsAll(ParamArray permissions As String())
  overload: FastEndpoints.Endpoint`2.PermissionsAll*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PermissionsAll(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PermissionsAll(System.String())
  name.vb: PermissionsAll(String())
- uid: FastEndpoints.Endpoint`2.Policy(System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})
  commentId: M:FastEndpoints.Endpoint`2.Policy(System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})
  id: Policy(System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Policy(Action<AuthorizationPolicyBuilder>)
  nameWithType: Endpoint<TRequest, TResponse>.Policy(Action<AuthorizationPolicyBuilder>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policy(System.Action<Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder>)
  type: Method
  source:
    id: Policy
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 220
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify an action for building an authorization requirement which applies only to this endpoint.\n"
  example: []
  syntax:
    content: protected void Policy(Action<AuthorizationPolicyBuilder> policy)
    parameters:
    - id: policy
      type: System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder}
      description: the policy builder action
    content.vb: Protected Sub Policy(policy As Action(Of AuthorizationPolicyBuilder))
  overload: FastEndpoints.Endpoint`2.Policy*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policy(Action(Of AuthorizationPolicyBuilder))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policy(System.Action(Of Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder))
  name.vb: Policy(Action(Of AuthorizationPolicyBuilder))
- uid: FastEndpoints.Endpoint`2.Policies(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Policies(System.String[])
  id: Policies(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Policies(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Policies(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies(System.String[])
  type: Method
  source:
    id: Policies
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 226
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify one or more authorization policy names you have added to the middleware pipeline during app startup/ service configuration that should be applied to this endpoint.\n"
  example: []
  syntax:
    content: protected void Policies(params string[] policyNames)
    parameters:
    - id: policyNames
      type: System.String[]
      description: one or more policy names (must have been added to the pipeline on startup)
    content.vb: Protected Sub Policies(ParamArray policyNames As String())
  overload: FastEndpoints.Endpoint`2.Policies*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policies(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies(System.String())
  name.vb: Policies(String())
- uid: FastEndpoints.Endpoint`2.Post(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Post(System.String[])
  id: Post(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Post(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Post(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Post(System.String[])
  type: Method
  source:
    id: Post
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 231
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify to listen for POST requests on one or more routes.\n"
  example: []
  syntax:
    content: protected void Post(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Post(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Post*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Post(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Post(System.String())
  name.vb: Post(String())
- uid: FastEndpoints.Endpoint`2.Post(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Post(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Post(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Post(String, Expression<Func<TRequest, Object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Post(String, Expression<Func<TRequest, Object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Post(System.String, System.Linq.Expressions.Expression<System.Func<TRequest, System.Object>>)
  type: Method
  source:
    id: Post
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 245
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify a POST route pattern using a replacement expression.\n"
  example: []
  syntax:
    content: protected void Post(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: "\nthe words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.\nthe replacement words do not have to match the request dto property names.\n<p><code>/invoice/{@id}/page/{@pageNum}</code></p>"
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r => new { r.InvoiceID, r.PageNumber }</code>
    content.vb: Protected Sub Post(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Post*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Post(String, Expression(Of Func(Of TRequest, Object)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Post(System.String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Object)))
  name.vb: Post(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  commentId: M:FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  id: PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PostProcessors(IPostProcessor<TRequest, TResponse>[])
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessors(IPostProcessor<TRequest, TResponse>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors(FastEndpoints.IPostProcessor<TRequest, TResponse>[])
  type: Method
  source:
    id: PostProcessors
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 255
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nconfigure a collection of post-processors to be executed after the main handler function is done. processors are executed in the order they are defined here.\n"
  example: []
  syntax:
    content: protected void PostProcessors(params IPostProcessor<TRequest, TResponse>[] postProcessors)
    parameters:
    - id: postProcessors
      type: FastEndpoints.IPostProcessor{{TRequest},{TResponse}}[]
      description: the post processors to be executed
    content.vb: Protected Sub PostProcessors(ParamArray postProcessors As IPostProcessor(Of TRequest, TResponse)())
  overload: FastEndpoints.Endpoint`2.PostProcessors*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessors(IPostProcessor(Of TRequest, TResponse)())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors(FastEndpoints.IPostProcessor(Of TRequest, TResponse)())
  name.vb: PostProcessors(IPostProcessor(Of TRequest, TResponse)())
- uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  commentId: M:FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  id: PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PreProcessors(IPreProcessor<TRequest>[])
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessors(IPreProcessor<TRequest>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors(FastEndpoints.IPreProcessor<TRequest>[])
  type: Method
  source:
    id: PreProcessors
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 261
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nconfigure a collection of pre-processors to be executed before the main handler function is called. processors are executed in the order they are defined here.\n"
  example: []
  syntax:
    content: protected void PreProcessors(params IPreProcessor<TRequest>[] preProcessors)
    parameters:
    - id: preProcessors
      type: FastEndpoints.IPreProcessor{{TRequest}}[]
      description: the pre processors to be executed
    content.vb: Protected Sub PreProcessors(ParamArray preProcessors As IPreProcessor(Of TRequest)())
  overload: FastEndpoints.Endpoint`2.PreProcessors*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessors(IPreProcessor(Of TRequest)())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors(FastEndpoints.IPreProcessor(Of TRequest)())
  name.vb: PreProcessors(IPreProcessor(Of TRequest)())
- uid: FastEndpoints.Endpoint`2.Put(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Put(System.String[])
  id: Put(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Put(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Put(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Put(System.String[])
  type: Method
  source:
    id: Put
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 266
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify to listen for PUT requests on one or more routes.\n"
  example: []
  syntax:
    content: protected void Put(params string[] routePatterns)
    parameters:
    - id: routePatterns
      type: System.String[]
    content.vb: Protected Sub Put(ParamArray routePatterns As String())
  overload: FastEndpoints.Endpoint`2.Put*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Put(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Put(System.String())
  name.vb: Put(String())
- uid: FastEndpoints.Endpoint`2.Put(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:FastEndpoints.Endpoint`2.Put(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Put(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Put(String, Expression<Func<TRequest, Object>>)
  nameWithType: Endpoint<TRequest, TResponse>.Put(String, Expression<Func<TRequest, Object>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Put(System.String, System.Linq.Expressions.Expression<System.Func<TRequest, System.Object>>)
  type: Method
  source:
    id: Put
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 280
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify a PUT route pattern using a replacement expression.\n"
  example: []
  syntax:
    content: protected void Put(string routePattern, Expression<Func<TRequest, object>> members)
    parameters:
    - id: routePattern
      type: System.String
      description: "\nthe words prefixed with @ will be replaced by property names of the `new` expression in the order they are specified.\nthe replacement words do not have to match the request dto property names.\n<p><code>/invoice/{@id}/page/{@pageNum}</code></p>"
    - id: members
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
      description: <code>r => new { r.InvoiceID, r.PageNumber }</code>
    content.vb: Protected Sub Put(routePattern As String, members As Expression(Of Func(Of TRequest, Object)))
  overload: FastEndpoints.Endpoint`2.Put*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Put(String, Expression(Of Func(Of TRequest, Object)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Put(System.String, System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Object)))
  name.vb: Put(String, Expression(Of Func(Of TRequest, Object)))
- uid: FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
  commentId: M:FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
  id: RequestBinder(FastEndpoints.IRequestBinder{`0})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: RequestBinder(IRequestBinder<TRequest>)
  nameWithType: Endpoint<TRequest, TResponse>.RequestBinder(IRequestBinder<TRequest>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RequestBinder(FastEndpoints.IRequestBinder<TRequest>)
  type: Method
  source:
    id: RequestBinder
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 291
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nconfigure custom model binding for this endpoint by supplying an IRequestBinder implementation.\nby calling this method, you&apos;re completely bypassing the built-in model binding and taking things into your own hands for this endpoint.\n"
  example: []
  syntax:
    content: protected void RequestBinder(IRequestBinder<TRequest> binder)
    parameters:
    - id: binder
      type: FastEndpoints.IRequestBinder{{TRequest}}
      description: custom model binder implementation to use for this endpoint
    content.vb: Protected Sub RequestBinder(binder As IRequestBinder(Of TRequest))
  overload: FastEndpoints.Endpoint`2.RequestBinder*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RequestBinder(IRequestBinder(Of TRequest))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RequestBinder(FastEndpoints.IRequestBinder(Of TRequest))
  name.vb: RequestBinder(IRequestBinder(Of TRequest))
- uid: FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  commentId: M:FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  id: ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[])
  nameWithType: Endpoint<TRequest, TResponse>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseCache(System.Int32, Microsoft.AspNetCore.Mvc.ResponseCacheLocation, System.Boolean, System.String, System.String[])
  type: Method
  source:
    id: ResponseCache
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 301
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify response caching settings for this endpoint\n"
  example: []
  syntax:
    content: protected void ResponseCache(int durationSeconds, ResponseCacheLocation location = ResponseCacheLocation.Any, bool noStore = false, string varyByHeader = null, string[] varyByQueryKeys = null)
    parameters:
    - id: durationSeconds
      type: System.Int32
      description: the duration in seconds for which the response is cached
    - id: location
      type: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
      description: the location where the data from a particular URL must be cached
    - id: noStore
      type: System.Boolean
      description: specify whether the data should be stored or not
    - id: varyByHeader
      type: System.String
      description: the value for the Vary response header
    - id: varyByQueryKeys
      type: System.String[]
      description: the query keys to vary by
    content.vb: Protected Sub ResponseCache(durationSeconds As Integer, location As ResponseCacheLocation = ResponseCacheLocation.Any, noStore As Boolean = False, varyByHeader As String = Nothing, varyByQueryKeys As String() = Nothing)
  overload: FastEndpoints.Endpoint`2.ResponseCache*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseCache(System.Int32, Microsoft.AspNetCore.Mvc.ResponseCacheLocation, System.Boolean, System.String, System.String())
  name.vb: ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String())
- uid: FastEndpoints.Endpoint`2.ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  commentId: M:FastEndpoints.Endpoint`2.ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  id: ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ResponseInterceptor(IResponseInterceptor)
  nameWithType: Endpoint<TRequest, TResponse>.ResponseInterceptor(IResponseInterceptor)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseInterceptor(FastEndpoints.IResponseInterceptor)
  type: Method
  source:
    id: ResponseInterceptor
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 309
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nconfigure a response interceptor to be called before the SendAsync response is sent to the browser.\nthis will override any globally configured interceptor. if you return a response to the browser, then\nthe rest of the SendAsync method will be skipped.\n"
  example: []
  syntax:
    content: protected void ResponseInterceptor(IResponseInterceptor responseInterceptor)
    parameters:
    - id: responseInterceptor
      type: FastEndpoints.IResponseInterceptor
      description: the response interceptor to be executed
    content.vb: Protected Sub ResponseInterceptor(responseInterceptor As IResponseInterceptor)
  overload: FastEndpoints.Endpoint`2.ResponseInterceptor*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseInterceptor(IResponseInterceptor)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseInterceptor(FastEndpoints.IResponseInterceptor)
- uid: FastEndpoints.Endpoint`2.Roles(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Roles(System.String[])
  id: Roles(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Roles(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Roles(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles(System.String[])
  type: Method
  source:
    id: Roles
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 315
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nallows access if the claims principal has ANY of the given roles\n"
  example: []
  syntax:
    content: protected void Roles(params string[] rolesNames)
    parameters:
    - id: rolesNames
      type: System.String[]
      description: one or more roles that has access
    content.vb: Protected Sub Roles(ParamArray rolesNames As String())
  overload: FastEndpoints.Endpoint`2.Roles*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Roles(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles(System.String())
  name.vb: Roles(String())
- uid: FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
  commentId: M:FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
  id: RoutePrefixOverride(System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: RoutePrefixOverride(String)
  nameWithType: Endpoint<TRequest, TResponse>.RoutePrefixOverride(String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RoutePrefixOverride(System.String)
  type: Method
  source:
    id: RoutePrefixOverride
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 323
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify an override route prefix for this endpoint if a global route prefix is enabled.\nthis is ignored if a global route prefix is not configured.\nglobal prefix can be ignored by setting <code>string.Empty</code>\n"
  example: []
  syntax:
    content: protected void RoutePrefixOverride(string routePrefix)
    parameters:
    - id: routePrefix
      type: System.String
      description: route prefix value
    content.vb: Protected Sub RoutePrefixOverride(routePrefix As String)
  overload: FastEndpoints.Endpoint`2.RoutePrefixOverride*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RoutePrefixOverride(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RoutePrefixOverride(System.String)
- uid: FastEndpoints.Endpoint`2.Routes(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Routes(System.String[])
  id: Routes(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Routes(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Routes(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes(System.String[])
  type: Method
  source:
    id: Routes
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 328
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify one or more route patterns this endpoint should be listening for\n"
  example: []
  syntax:
    content: protected void Routes(params string[] patterns)
    parameters:
    - id: patterns
      type: System.String[]
    content.vb: Protected Sub Routes(ParamArray patterns As String())
  overload: FastEndpoints.Endpoint`2.Routes*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Routes(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes(System.String())
  name.vb: Routes(String())
- uid: FastEndpoints.Endpoint`2.SerializerContext``1(``0)
  commentId: M:FastEndpoints.Endpoint`2.SerializerContext``1(``0)
  id: SerializerContext``1(``0)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SerializerContext<TContext>(TContext)
  nameWithType: Endpoint<TRequest, TResponse>.SerializerContext<TContext>(TContext)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SerializerContext<TContext>(TContext)
  type: Method
  source:
    id: SerializerContext
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 334
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify the json serializer context if code generation for request/response dtos is being used\n"
  example: []
  syntax:
    content: >-
      protected void SerializerContext<TContext>(TContext serializerContext)

          where TContext : JsonSerializerContext
    parameters:
    - id: serializerContext
      type: '{TContext}'
    typeParameters:
    - id: TContext
      description: the type of the json serializer context for this endpoint
    content.vb: Protected Sub SerializerContext(Of TContext As JsonSerializerContext)(serializerContext As TContext)
  overload: FastEndpoints.Endpoint`2.SerializerContext*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)(TContext)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)(TContext)
  name.vb: SerializerContext(Of TContext)(TContext)
- uid: FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary})
  commentId: M:FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary})
  id: Summary(System.Action{FastEndpoints.EndpointSummary})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Summary(Action<EndpointSummary>)
  nameWithType: Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary(System.Action<FastEndpoints.EndpointSummary>)
  type: Method
  source:
    id: Summary
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 340
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nprovide a summary/description for this endpoint to be used in swagger/ openapi\n"
  example: []
  syntax:
    content: protected void Summary(Action<EndpointSummary> endpointSummary)
    parameters:
    - id: endpointSummary
      type: System.Action{FastEndpoints.EndpointSummary}
      description: an action that sets values of an endpoint summary object
    content.vb: Protected Sub Summary(endpointSummary As Action(Of EndpointSummary))
  overload: FastEndpoints.Endpoint`2.Summary*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary(Action(Of EndpointSummary))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary(System.Action(Of FastEndpoints.EndpointSummary))
  name.vb: Summary(Action(Of EndpointSummary))
- uid: FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary{`0}})
  commentId: M:FastEndpoints.Endpoint`2.Summary(System.Action{FastEndpoints.EndpointSummary{`0}})
  id: Summary(System.Action{FastEndpoints.EndpointSummary{`0}})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Summary(Action<EndpointSummary<TRequest>>)
  nameWithType: Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary<TRequest>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary(System.Action<FastEndpoints.EndpointSummary<TRequest>>)
  type: Method
  source:
    id: Summary
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 346
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nprovide a summary/description for this endpoint to be used in swagger/ openapi\n"
  example: []
  syntax:
    content: protected void Summary(Action<EndpointSummary<TRequest>> endpointSummary)
    parameters:
    - id: endpointSummary
      type: System.Action{FastEndpoints.EndpointSummary{{TRequest}}}
      description: an action that sets values of an endpoint summary object
    content.vb: Protected Sub Summary(endpointSummary As Action(Of EndpointSummary(Of TRequest)))
  overload: FastEndpoints.Endpoint`2.Summary*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary(Action(Of EndpointSummary(Of TRequest)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary(System.Action(Of FastEndpoints.EndpointSummary(Of TRequest)))
  name.vb: Summary(Action(Of EndpointSummary(Of TRequest)))
- uid: FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
  commentId: M:FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
  id: Summary(FastEndpoints.EndpointSummary)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Summary(EndpointSummary)
  nameWithType: Endpoint<TRequest, TResponse>.Summary(EndpointSummary)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary(FastEndpoints.EndpointSummary)
  type: Method
  source:
    id: Summary
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 352
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nprovide a summary/description for this endpoint to be used in swagger/ openapi\n"
  example: []
  syntax:
    content: protected void Summary(EndpointSummary endpointSummary)
    parameters:
    - id: endpointSummary
      type: FastEndpoints.EndpointSummary
      description: an endpoint summary instance
    content.vb: Protected Sub Summary(endpointSummary As EndpointSummary)
  overload: FastEndpoints.Endpoint`2.Summary*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary(EndpointSummary)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary(FastEndpoints.EndpointSummary)
- uid: FastEndpoints.Endpoint`2.Tags(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Tags(System.String[])
  id: Tags(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Tags(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Tags(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Tags(System.String[])
  type: Method
  source:
    id: Tags
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 359
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify one or more string tags for this endpoint so they can be used in the exclusion filter during registration.\n<p>HINT: these tags have nothing to do with swagger tags!</p>\n"
  example: []
  syntax:
    content: protected void Tags(params string[] endpointTags)
    parameters:
    - id: endpointTags
      type: System.String[]
      description: the tag values to associate with this endpoint
    content.vb: Protected Sub Tags(ParamArray endpointTags As String())
  overload: FastEndpoints.Endpoint`2.Tags*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Tags(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Tags(System.String())
  name.vb: Tags(String())
- uid: FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
  commentId: M:FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
  id: Throttle(System.Int32,System.Double,System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Throttle(Int32, Double, String)
  nameWithType: Endpoint<TRequest, TResponse>.Throttle(Int32, Double, String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Throttle(System.Int32, System.Double, System.String)
  type: Method
  source:
    id: Throttle
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 371
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nrate limit requests to this endpoint based on a request http header sent by the client.\n"
  example: []
  syntax:
    content: protected void Throttle(int hitLimit, double durationSeconds, string headerName = null)
    parameters:
    - id: hitLimit
      type: System.Int32
      description: how many requests are allowed within the given duration
    - id: durationSeconds
      type: System.Double
      description: the frequency in seconds where the accrued hit count should be reset
    - id: headerName
      type: System.String
      description: "\nthe name of the request header used to uniquely identify clients.\nheader name can also be configured globally using <code>app.UseFastEndpoints(c=> c.ThrottleOptions...)</code>\nnot specifying a header name will first look for &apos;X-Forwarded-For&apos; header and if not present, will use `HttpContext.Connection.RemoteIpAddress`.\n"
    content.vb: Protected Sub Throttle(hitLimit As Integer, durationSeconds As Double, headerName As String = Nothing)
  overload: FastEndpoints.Endpoint`2.Throttle*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Throttle(Int32, Double, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Throttle(System.Int32, System.Double, System.String)
- uid: FastEndpoints.Endpoint`2.Validator``1
  commentId: M:FastEndpoints.Endpoint`2.Validator``1
  id: Validator``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Validator<TValidator>()
  nameWithType: Endpoint<TRequest, TResponse>.Validator<TValidator>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Validator<TValidator>()
  type: Method
  source:
    id: Validator
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 378
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify the validator that should be used for this endpoint.\n<p>TIP: you only need to call this method if you have more than one validator for the same request dto in the solution or if you just want to be explicit about what validator is used by the endpoint.</p>\n"
  example: []
  syntax:
    content: >-
      protected void Validator<TValidator>()

          where TValidator : IValidator
    typeParameters:
    - id: TValidator
      description: the type of the validator
    content.vb: Protected Sub Validator(Of TValidator As IValidator)
  overload: FastEndpoints.Endpoint`2.Validator*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Validator(Of TValidator)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Validator(Of TValidator)()
  name.vb: Validator(Of TValidator)()
- uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  id: Verbs(FastEndpoints.Http[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Verbs(Http[])
  nameWithType: Endpoint<TRequest, TResponse>.Verbs(Http[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs(FastEndpoints.Http[])
  type: Method
  source:
    id: Verbs
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 383
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify one or more http method verbs this endpoint should be accepting requests for\n"
  example: []
  syntax:
    content: protected void Verbs(params Http[] methods)
    parameters:
    - id: methods
      type: FastEndpoints.Http[]
    content.vb: Protected Sub Verbs(ParamArray methods As Http())
  overload: FastEndpoints.Endpoint`2.Verbs*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs(Http())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs(FastEndpoints.Http())
  name.vb: Verbs(Http())
- uid: FastEndpoints.Endpoint`2.Verbs(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Verbs(System.String[])
  id: Verbs(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Verbs(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Verbs(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs(System.String[])
  type: Method
  source:
    id: Verbs
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 391
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify one or more http method verbs this endpoint should be accepting requests for\n"
  example: []
  syntax:
    content: public sealed override void Verbs(params string[] methods)
    parameters:
    - id: methods
      type: System.String[]
    content.vb: Public NotOverridable Overrides Sub Verbs(ParamArray methods As String())
  overridden: FastEndpoints.BaseEndpoint.Verbs(System.String[])
  overload: FastEndpoints.Endpoint`2.Verbs*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs(String())
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs(System.String())
  name.vb: Verbs(String())
- uid: FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
  commentId: M:FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
  id: Version(System.Int32,System.Nullable{System.Int32})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Version(Int32, Nullable<Int32>)
  nameWithType: Endpoint<TRequest, TResponse>.Version(Int32, Nullable<Int32>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Version(System.Int32, System.Nullable<System.Int32>)
  type: Method
  source:
    id: Version
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Setup.cs
    startLine: 435
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify the version of the endpoint if versioning is enabled\n"
  example: []
  syntax:
    content: protected void Version(int version, int? deprecateAt = null)
    parameters:
    - id: version
      type: System.Int32
      description: the version of this endpoint
    - id: deprecateAt
      type: System.Nullable{System.Int32}
      description: the version group number starting at which this endpoint should not be included in swagger document
    content.vb: Protected Sub Version(version As Integer, deprecateAt As Integer? = Nothing)
  overload: FastEndpoints.Endpoint`2.Version*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Version(Int32, Nullable(Of Int32))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Version(System.Int32, System.Nullable(Of System.Int32))
  name.vb: Version(Int32, Nullable(Of Int32))
- uid: FastEndpoints.Endpoint`2.ValidationFailed
  commentId: P:FastEndpoints.Endpoint`2.ValidationFailed
  id: ValidationFailed
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailed
  type: Property
  source:
    id: ValidationFailed
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Validation.cs
    startLine: 33
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public bool ValidationFailed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ValidationFailed As Boolean
  overload: FastEndpoints.Endpoint`2.ValidationFailed*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailed
- uid: FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
  id: AddError(System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AddError(String, String, Severity)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(String, String, Severity)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(System.String, System.String, FluentValidation.Severity)
  type: Method
  source:
    id: AddError
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Validation.cs
    startLine: 36
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public void AddError(string message, string errorCode = null, Severity severity = Severity.Error)
    parameters:
    - id: message
      type: System.String
    - id: errorCode
      type: System.String
    - id: severity
      type: FluentValidation.Severity
    content.vb: Public Sub AddError(message As String, errorCode As String = Nothing, severity As Severity = Severity.Error)
  overload: FastEndpoints.Endpoint`2.AddError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(String, String, Severity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(System.String, System.String, FluentValidation.Severity)
- uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  id: AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AddError(Expression<Func<TRequest, Object>>, String, String, Severity)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(Expression<Func<TRequest, Object>>, String, String, Severity)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(System.Linq.Expressions.Expression<System.Func<TRequest, System.Object>>, System.String, System.String, FluentValidation.Severity)
  type: Method
  source:
    id: AddError
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Validation.cs
    startLine: 40
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public void AddError(Expression<Func<TRequest, object>> property, string errorMessage, string errorCode = null, Severity severity = Severity.Error)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
    - id: errorMessage
      type: System.String
    - id: errorCode
      type: System.String
    - id: severity
      type: FluentValidation.Severity
    content.vb: Public Sub AddError(property As Expression(Of Func(Of TRequest, Object)), errorMessage As String, errorCode As String = Nothing, severity As Severity = Severity.Error)
  overload: FastEndpoints.Endpoint`2.AddError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(Expression(Of Func(Of TRequest, Object)), String, String, Severity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Object)), System.String, System.String, FluentValidation.Severity)
  name.vb: AddError(Expression(Of Func(Of TRequest, Object)), String, String, Severity)
- uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.String)
  id: ThrowError(System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowError(String)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(System.String)
  type: Method
  source:
    id: ThrowError
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Validation.cs
    startLine: 44
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public void ThrowError(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub ThrowError(message As String)
  overload: FastEndpoints.Endpoint`2.ThrowError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(System.String)
- uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
  id: ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowError(Expression<Func<TRequest, Object>>, String)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(Expression<Func<TRequest, Object>>, String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(System.Linq.Expressions.Expression<System.Func<TRequest, System.Object>>, System.String)
  type: Method
  source:
    id: ThrowError
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Validation.cs
    startLine: 49
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public void ThrowError(Expression<Func<TRequest, object>> property, string errorMessage)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
    - id: errorMessage
      type: System.String
    content.vb: Public Sub ThrowError(property As Expression(Of Func(Of TRequest, Object)), errorMessage As String)
  overload: FastEndpoints.Endpoint`2.ThrowError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(Expression(Of Func(Of TRequest, Object)), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Object)), System.String)
  name.vb: ThrowError(Expression(Of Func(Of TRequest, Object)), String)
- uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  commentId: M:FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  id: ThrowIfAnyErrors
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowIfAnyErrors()
  nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors()
  type: Method
  source:
    id: ThrowIfAnyErrors
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.Validation.cs
    startLine: 54
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public void ThrowIfAnyErrors()
    content.vb: Public Sub ThrowIfAnyErrors
  overload: FastEndpoints.Endpoint`2.ThrowIfAnyErrors*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors()
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.BaseEndpoint
  commentId: T:FastEndpoints.BaseEndpoint
  parent: FastEndpoints
  name: BaseEndpoint
  nameWithType: BaseEndpoint
  fullName: FastEndpoints.BaseEndpoint
- uid: FastEndpoints.IEndpoint
  commentId: T:FastEndpoints.IEndpoint
  parent: FastEndpoints
  name: IEndpoint
  nameWithType: IEndpoint
  fullName: FastEndpoints.IEndpoint
- uid: FastEndpoints.IEventBus
  commentId: T:FastEndpoints.IEventBus
  parent: FastEndpoints
  name: IEventBus
  nameWithType: IEventBus
  fullName: FastEndpoints.IEventBus
- uid: FastEndpoints.IServiceResolverBase
  commentId: T:FastEndpoints.IServiceResolverBase
  parent: FastEndpoints
  name: IServiceResolverBase
  nameWithType: IServiceResolverBase
  fullName: FastEndpoints.IServiceResolverBase
- uid: FastEndpoints.BaseEndpoint.Definition
  commentId: P:FastEndpoints.BaseEndpoint.Definition
  parent: FastEndpoints.BaseEndpoint
  name: Definition
  nameWithType: BaseEndpoint.Definition
  fullName: FastEndpoints.BaseEndpoint.Definition
- uid: FastEndpoints.BaseEndpoint.HttpContext
  commentId: P:FastEndpoints.BaseEndpoint.HttpContext
  parent: FastEndpoints.BaseEndpoint
  name: HttpContext
  nameWithType: BaseEndpoint.HttpContext
  fullName: FastEndpoints.BaseEndpoint.HttpContext
- uid: FastEndpoints.BaseEndpoint.ValidationFailures
  commentId: P:FastEndpoints.BaseEndpoint.ValidationFailures
  parent: FastEndpoints.BaseEndpoint
  name: ValidationFailures
  nameWithType: BaseEndpoint.ValidationFailures
  fullName: FastEndpoints.BaseEndpoint.ValidationFailures
- uid: FastEndpoints.BaseEndpoint.Configure
  commentId: M:FastEndpoints.BaseEndpoint.Configure
  parent: FastEndpoints.BaseEndpoint
  name: Configure()
  nameWithType: BaseEndpoint.Configure()
  fullName: FastEndpoints.BaseEndpoint.Configure()
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.Configure
    name: Configure
    nameWithType: BaseEndpoint.Configure
    fullName: FastEndpoints.BaseEndpoint.Configure
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.Configure
    name: Configure
    nameWithType: BaseEndpoint.Configure
    fullName: FastEndpoints.BaseEndpoint.Configure
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Endpoint`2.HandleAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.HandleAsync
  name: HandleAsync
  nameWithType: Endpoint<TRequest, TResponse>.HandleAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HandleAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FastEndpoints.Endpoint`2.ExecuteAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.ExecuteAsync
  name: ExecuteAsync
  nameWithType: Endpoint<TRequest, TResponse>.ExecuteAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ExecuteAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ExecuteAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ExecuteAsync
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.TryResolve*
  commentId: Overload:FastEndpoints.Endpoint`2.TryResolve
  name: TryResolve
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve
- uid: FastEndpoints.IServiceResolverBase.TryResolve``1
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve``1
  parent: FastEndpoints.IServiceResolverBase
  name: TryResolve<TService>()
  nameWithType: IServiceResolverBase.TryResolve<TService>()
  fullName: FastEndpoints.IServiceResolverBase.TryResolve<TService>()
  nameWithType.vb: IServiceResolverBase.TryResolve(Of TService)()
  fullName.vb: FastEndpoints.IServiceResolverBase.TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1
    name: TryResolve<TService>
    nameWithType: IServiceResolverBase.TryResolve<TService>
    fullName: FastEndpoints.IServiceResolverBase.TryResolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1
    name: TryResolve(Of TService)
    nameWithType: IServiceResolverBase.TryResolve(Of TService)
    fullName: FastEndpoints.IServiceResolverBase.TryResolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  name: TryResolve(Type)
  nameWithType: IServiceResolverBase.TryResolve(Type)
  fullName: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
    name: TryResolve
    nameWithType: IServiceResolverBase.TryResolve
    fullName: FastEndpoints.IServiceResolverBase.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
    name: TryResolve
    nameWithType: IServiceResolverBase.TryResolve
    fullName: FastEndpoints.IServiceResolverBase.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: FastEndpoints.Endpoint`2.Resolve*
  commentId: Overload:FastEndpoints.Endpoint`2.Resolve
  name: Resolve
  nameWithType: Endpoint<TRequest, TResponse>.Resolve
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve
- uid: FastEndpoints.IServiceResolverBase.Resolve``1
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve``1
  parent: FastEndpoints.IServiceResolverBase
  name: Resolve<TService>()
  nameWithType: IServiceResolverBase.Resolve<TService>()
  fullName: FastEndpoints.IServiceResolverBase.Resolve<TService>()
  nameWithType.vb: IServiceResolverBase.Resolve(Of TService)()
  fullName.vb: FastEndpoints.IServiceResolverBase.Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1
    name: Resolve<TService>
    nameWithType: IServiceResolverBase.Resolve<TService>
    fullName: FastEndpoints.IServiceResolverBase.Resolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1
    name: Resolve(Of TService)
    nameWithType: IServiceResolverBase.Resolve(Of TService)
    fullName: FastEndpoints.IServiceResolverBase.Resolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  name: Resolve(Type)
  nameWithType: IServiceResolverBase.Resolve(Type)
  fullName: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
    name: Resolve
    nameWithType: IServiceResolverBase.Resolve
    fullName: FastEndpoints.IServiceResolverBase.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
    name: Resolve
    nameWithType: IServiceResolverBase.Resolve
    fullName: FastEndpoints.IServiceResolverBase.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.CreateScope*
  commentId: Overload:FastEndpoints.Endpoint`2.CreateScope
  name: CreateScope
  nameWithType: Endpoint<TRequest, TResponse>.CreateScope
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.CreateScope
  nameWithType.vb: Endpoint(Of TRequest, TResponse).CreateScope
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).CreateScope
- uid: FastEndpoints.IServiceResolverBase.CreateScope
  commentId: M:FastEndpoints.IServiceResolverBase.CreateScope
  parent: FastEndpoints.IServiceResolverBase
  name: CreateScope()
  nameWithType: IServiceResolverBase.CreateScope()
  fullName: FastEndpoints.IServiceResolverBase.CreateScope()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.CreateScope
    name: CreateScope
    nameWithType: IServiceResolverBase.CreateScope
    fullName: FastEndpoints.IServiceResolverBase.CreateScope
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.CreateScope
    name: CreateScope
    nameWithType: IServiceResolverBase.CreateScope
    fullName: FastEndpoints.IServiceResolverBase.CreateScope
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceScope
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceScope
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceScope
  nameWithType: IServiceScope
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScope
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: FastEndpoints.Endpoint`2.Route*
  commentId: Overload:FastEndpoints.Endpoint`2.Route
  name: Route
  nameWithType: Endpoint<TRequest, TResponse>.Route
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Route
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Route
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Route
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: FastEndpoints.Endpoint`2.Query*
  commentId: Overload:FastEndpoints.Endpoint`2.Query
  name: Query
  nameWithType: Endpoint<TRequest, TResponse>.Query
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Query
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Query
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Query
- uid: FastEndpoints.Endpoint`2.FormFileSectionsAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.FormFileSectionsAsync
  name: FormFileSectionsAsync
  nameWithType: Endpoint<TRequest, TResponse>.FormFileSectionsAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.FormFileSectionsAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).FormFileSectionsAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).FormFileSectionsAsync
- uid: System.Collections.Generic.IAsyncEnumerable{Microsoft.AspNetCore.WebUtilities.FileMultipartSection}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Microsoft.AspNetCore.WebUtilities.FileMultipartSection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<FileMultipartSection>
  nameWithType: IAsyncEnumerable<FileMultipartSection>
  fullName: System.Collections.Generic.IAsyncEnumerable<Microsoft.AspNetCore.WebUtilities.FileMultipartSection>
  nameWithType.vb: IAsyncEnumerable(Of FileMultipartSection)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Microsoft.AspNetCore.WebUtilities.FileMultipartSection)
  name.vb: IAsyncEnumerable(Of FileMultipartSection)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.WebUtilities.FileMultipartSection
    name: FileMultipartSection
    nameWithType: FileMultipartSection
    fullName: Microsoft.AspNetCore.WebUtilities.FileMultipartSection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.WebUtilities.FileMultipartSection
    name: FileMultipartSection
    nameWithType: FileMultipartSection
    fullName: Microsoft.AspNetCore.WebUtilities.FileMultipartSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: FastEndpoints.Endpoint`2.PublishAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.PublishAsync
  name: PublishAsync
  nameWithType: Endpoint<TRequest, TResponse>.PublishAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PublishAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync
- uid: FastEndpoints.IEventBus.PublishAsync``1({TEvent},FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  parent: FastEndpoints.IEventBus
  definition: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: IEventBus.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.IEventBus.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  nameWithType.vb: IEventBus.PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.IEventBus.PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
    name: PublishAsync<TEvent>
    nameWithType: IEventBus.PublishAsync<TEvent>
    fullName: FastEndpoints.IEventBus.PublishAsync<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
    name: PublishAsync(Of TEvent)
    nameWithType: IEventBus.PublishAsync(Of TEvent)
    fullName: FastEndpoints.IEventBus.PublishAsync(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: FastEndpoints.Mode
  commentId: T:FastEndpoints.Mode
  parent: FastEndpoints
  name: Mode
  nameWithType: Mode
  fullName: FastEndpoints.Mode
- uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  isExternal: true
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: IEventBus.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.IEventBus.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  nameWithType.vb: IEventBus.PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.IEventBus.PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
    name: PublishAsync<TEvent>
    nameWithType: IEventBus.PublishAsync<TEvent>
    fullName: FastEndpoints.IEventBus.PublishAsync<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventBus.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
    name: PublishAsync(Of TEvent)
    nameWithType: IEventBus.PublishAsync(Of TEvent)
    fullName: FastEndpoints.IEventBus.PublishAsync(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: FastEndpoints.Endpoint`2.CreateTokenWith*
  commentId: Overload:FastEndpoints.Endpoint`2.CreateTokenWith
  name: CreateTokenWith
  nameWithType: Endpoint<TRequest, TResponse>.CreateTokenWith
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.CreateTokenWith
  nameWithType.vb: Endpoint(Of TRequest, TResponse).CreateTokenWith
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).CreateTokenWith
- uid: System.Action{FastEndpoints.UserPrivileges}
  commentId: T:System.Action{FastEndpoints.UserPrivileges}
  parent: System
  definition: System.Action`1
  name: Action<UserPrivileges>
  nameWithType: Action<UserPrivileges>
  fullName: System.Action<FastEndpoints.UserPrivileges>
  nameWithType.vb: Action(Of UserPrivileges)
  fullName.vb: System.Action(Of FastEndpoints.UserPrivileges)
  name.vb: Action(Of UserPrivileges)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.UserPrivileges
    name: UserPrivileges
    nameWithType: UserPrivileges
    fullName: FastEndpoints.UserPrivileges
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.UserPrivileges
    name: UserPrivileges
    nameWithType: UserPrivileges
    fullName: FastEndpoints.UserPrivileges
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: FastEndpoints.Endpoint`2.ProcessorState*
  commentId: Overload:FastEndpoints.Endpoint`2.ProcessorState
  name: ProcessorState
  nameWithType: Endpoint<TRequest, TResponse>.ProcessorState
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ProcessorState
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ProcessorState
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ProcessorState
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: FastEndpoints.Endpoint`2.OnBeforeValidate*
  commentId: Overload:FastEndpoints.Endpoint`2.OnBeforeValidate
  name: OnBeforeValidate
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidate
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidate
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidate
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidate
- uid: FastEndpoints.Endpoint`2.OnBeforeValidateAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnBeforeValidateAsync
  name: OnBeforeValidateAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidateAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidateAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync
- uid: FastEndpoints.Endpoint`2.OnAfterValidate*
  commentId: Overload:FastEndpoints.Endpoint`2.OnAfterValidate
  name: OnAfterValidate
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidate
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidate
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidate
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidate
- uid: FastEndpoints.Endpoint`2.OnAfterValidateAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnAfterValidateAsync
  name: OnAfterValidateAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidateAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidateAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidateAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidateAsync
- uid: FastEndpoints.Endpoint`2.OnBeforeHandle*
  commentId: Overload:FastEndpoints.Endpoint`2.OnBeforeHandle
  name: OnBeforeHandle
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandle
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandle
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandle
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandle
- uid: FastEndpoints.Endpoint`2.OnBeforeHandleAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnBeforeHandleAsync
  name: OnBeforeHandleAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandleAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandleAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync
- uid: FastEndpoints.Endpoint`2.OnAfterHandle*
  commentId: Overload:FastEndpoints.Endpoint`2.OnAfterHandle
  name: OnAfterHandle
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandle
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandle
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandle
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandle
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: FastEndpoints.Endpoint`2.OnAfterHandleAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnAfterHandleAsync
  name: OnAfterHandleAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandleAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandleAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandleAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandleAsync
- uid: FastEndpoints.Endpoint`2.OnValidationFailed*
  commentId: Overload:FastEndpoints.Endpoint`2.OnValidationFailed
  name: OnValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailed
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailed
- uid: FastEndpoints.Endpoint`2.OnValidationFailedAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.OnValidationFailedAsync
  name: OnValidationFailedAsync
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailedAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailedAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailedAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailedAsync
- uid: FastEndpoints.Endpoint`2.User*
  commentId: Overload:FastEndpoints.Endpoint`2.User
  name: User
  nameWithType: Endpoint<TRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.User
  nameWithType.vb: Endpoint(Of TRequest, TResponse).User
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).User
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: true
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: FastEndpoints.Endpoint`2.Response*
  commentId: Overload:FastEndpoints.Endpoint`2.Response
  name: Response
  nameWithType: Endpoint<TRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Response
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Response
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Response
- uid: FastEndpoints.Endpoint`2.Config*
  commentId: Overload:FastEndpoints.Endpoint`2.Config
  name: Config
  nameWithType: Endpoint<TRequest, TResponse>.Config
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Config
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Config
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Config
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: FastEndpoints.Endpoint`2.Env*
  commentId: Overload:FastEndpoints.Endpoint`2.Env
  name: Env
  nameWithType: Endpoint<TRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Env
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Env
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Env
- uid: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IWebHostEnvironment
  nameWithType: IWebHostEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: FastEndpoints.Endpoint`2.Logger*
  commentId: Overload:FastEndpoints.Endpoint`2.Logger
  name: Logger
  nameWithType: Endpoint<TRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Logger
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Logger
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: FastEndpoints.Endpoint`2.BaseURL*
  commentId: Overload:FastEndpoints.Endpoint`2.BaseURL
  name: BaseURL
  nameWithType: Endpoint<TRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.BaseURL
  nameWithType.vb: Endpoint(Of TRequest, TResponse).BaseURL
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).BaseURL
- uid: FastEndpoints.Endpoint`2.HttpMethod*
  commentId: Overload:FastEndpoints.Endpoint`2.HttpMethod
  name: HttpMethod
  nameWithType: Endpoint<TRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpMethod
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpMethod
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpMethod
- uid: FastEndpoints.Http
  commentId: T:FastEndpoints.Http
  parent: FastEndpoints
  name: Http
  nameWithType: Http
  fullName: FastEndpoints.Http
- uid: FastEndpoints.Endpoint`2.Form*
  commentId: Overload:FastEndpoints.Endpoint`2.Form
  name: Form
  nameWithType: Endpoint<TRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Form
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Form
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Form
- uid: Microsoft.AspNetCore.Http.IFormCollection
  commentId: T:Microsoft.AspNetCore.Http.IFormCollection
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IFormCollection
  nameWithType: IFormCollection
  fullName: Microsoft.AspNetCore.Http.IFormCollection
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: FastEndpoints.Endpoint`2.Files*
  commentId: Overload:FastEndpoints.Endpoint`2.Files
  name: Files
  nameWithType: Endpoint<TRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Files
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Files
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Files
- uid: Microsoft.AspNetCore.Http.IFormFileCollection
  commentId: T:Microsoft.AspNetCore.Http.IFormFileCollection
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IFormFileCollection
  nameWithType: IFormFileCollection
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection
- uid: FastEndpoints.Endpoint`2.ResponseStarted*
  commentId: Overload:FastEndpoints.Endpoint`2.ResponseStarted
  name: ResponseStarted
  nameWithType: Endpoint<TRequest, TResponse>.ResponseStarted
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseStarted
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseStarted
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseStarted
- uid: FastEndpoints.Endpoint`2.SendAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendAsync
  name: SendAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FastEndpoints.Endpoint`2.SendInterceptedAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendInterceptedAsync
  name: SendInterceptedAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendInterceptedAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendInterceptedAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendInterceptedAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendInterceptedAsync
- uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendCreatedAtAsync
  name: SendCreatedAtAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync
- uid: System.Nullable{FastEndpoints.Http}
  commentId: T:System.Nullable{FastEndpoints.Http}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Http>
  nameWithType: Nullable<Http>
  fullName: System.Nullable<FastEndpoints.Http>
  nameWithType.vb: Nullable(Of Http)
  fullName.vb: System.Nullable(Of FastEndpoints.Http)
  name.vb: Nullable(Of Http)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendStringAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendStringAsync
  name: SendStringAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendStringAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStringAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStringAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStringAsync
- uid: FastEndpoints.Endpoint`2.SendOkAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendOkAsync
  name: SendOkAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync
- uid: FastEndpoints.Endpoint`2.SendErrorsAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendErrorsAsync
  name: SendErrorsAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendErrorsAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync
- uid: FastEndpoints.Endpoint`2.SendNoContentAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendNoContentAsync
  name: SendNoContentAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNoContentAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync
- uid: FastEndpoints.Endpoint`2.SendNotFoundAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendNotFoundAsync
  name: SendNotFoundAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNotFoundAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync
- uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendUnauthorizedAsync
  name: SendUnauthorizedAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
- uid: FastEndpoints.Endpoint`2.SendForbiddenAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendForbiddenAsync
  name: SendForbiddenAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendForbiddenAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync
- uid: FastEndpoints.Endpoint`2.SendRedirectAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendRedirectAsync
  name: SendRedirectAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendRedirectAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendRedirectAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendRedirectAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendRedirectAsync
- uid: FastEndpoints.Endpoint`2.SendHeadersAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendHeadersAsync
  name: SendHeadersAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendHeadersAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendHeadersAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendHeadersAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendHeadersAsync
- uid: System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary}
  commentId: T:System.Action{Microsoft.AspNetCore.Http.IHeaderDictionary}
  parent: System
  definition: System.Action`1
  name: Action<IHeaderDictionary>
  nameWithType: Action<IHeaderDictionary>
  fullName: System.Action<Microsoft.AspNetCore.Http.IHeaderDictionary>
  nameWithType.vb: Action(Of IHeaderDictionary)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Http.IHeaderDictionary)
  name.vb: Action(Of IHeaderDictionary)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendBytesAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendBytesAsync
  name: SendBytesAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendBytesAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendFileAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendFileAsync
  name: SendFileAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendFileAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: FastEndpoints.Endpoint`2.SendStreamAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendStreamAsync
  name: SendStreamAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStreamAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendEventStreamAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendEventStreamAsync
  name: SendEventStreamAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendEventStreamAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEventStreamAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEventStreamAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEventStreamAsync
- uid: System.Collections.Generic.IAsyncEnumerable{{T}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendEmptyJsonObject*
  commentId: Overload:FastEndpoints.Endpoint`2.SendEmptyJsonObject
  name: SendEmptyJsonObject
  nameWithType: Endpoint<TRequest, TResponse>.SendEmptyJsonObject
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEmptyJsonObject
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEmptyJsonObject
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEmptyJsonObject
- uid: FastEndpoints.Endpoint`2.AllowAnonymous*
  commentId: Overload:FastEndpoints.Endpoint`2.AllowAnonymous
  name: AllowAnonymous
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnonymous
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous
- uid: FastEndpoints.Http[]
  isExternal: true
  name: Http[]
  nameWithType: Http[]
  fullName: FastEndpoints.Http[]
  nameWithType.vb: Http()
  fullName.vb: FastEndpoints.Http()
  name.vb: Http()
  spec.csharp:
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FastEndpoints.Endpoint`2.AllowFileUploads*
  commentId: Overload:FastEndpoints.Endpoint`2.AllowFileUploads
  name: AllowFileUploads
  nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFileUploads
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads
- uid: FastEndpoints.Endpoint`2.AllowFormData*
  commentId: Overload:FastEndpoints.Endpoint`2.AllowFormData
  name: AllowFormData
  nameWithType: Endpoint<TRequest, TResponse>.AllowFormData
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFormData
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFormData
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFormData
- uid: FastEndpoints.Endpoint`2.AuthSchemes*
  commentId: Overload:FastEndpoints.Endpoint`2.AuthSchemes
  name: AuthSchemes
  nameWithType: Endpoint<TRequest, TResponse>.AuthSchemes
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AuthSchemes
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AuthSchemes
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AuthSchemes
- uid: FastEndpoints.Endpoint`2.Claims*
  commentId: Overload:FastEndpoints.Endpoint`2.Claims
  name: Claims
  nameWithType: Endpoint<TRequest, TResponse>.Claims
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims
- uid: FastEndpoints.Endpoint`2.ClaimsAll*
  commentId: Overload:FastEndpoints.Endpoint`2.ClaimsAll
  name: ClaimsAll
  nameWithType: Endpoint<TRequest, TResponse>.ClaimsAll
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ClaimsAll
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ClaimsAll
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ClaimsAll
- uid: FastEndpoints.Endpoint`2.Delete*
  commentId: Overload:FastEndpoints.Endpoint`2.Delete
  name: Delete
  nameWithType: Endpoint<TRequest, TResponse>.Delete
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Delete
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Delete
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Delete
- uid: System.Linq.Expressions.Expression{System.Func{{TRequest},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TRequest, Object>>
  nameWithType: Expression<Func<TRequest, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TRequest, System.Object>>
  nameWithType.vb: Expression(Of Func(Of TRequest, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Object))
  name.vb: Expression(Of Func(Of TRequest, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: FastEndpoints.Endpoint`2.Description*
  commentId: Overload:FastEndpoints.Endpoint`2.Description
  name: Description
  nameWithType: Endpoint<TRequest, TResponse>.Description
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Description
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Description
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Description
- uid: System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder}
  commentId: T:System.Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder}
  parent: System
  definition: System.Action`1
  name: Action<RouteHandlerBuilder>
  nameWithType: Action<RouteHandlerBuilder>
  fullName: System.Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>
  nameWithType.vb: Action(Of RouteHandlerBuilder)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder)
  name.vb: Action(Of RouteHandlerBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.DontAutoTag*
  commentId: Overload:FastEndpoints.Endpoint`2.DontAutoTag
  name: DontAutoTag
  nameWithType: Endpoint<TRequest, TResponse>.DontAutoTag
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontAutoTag
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontAutoTag
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontAutoTag
- uid: FastEndpoints.Endpoint`2.DontCatchExceptions*
  commentId: Overload:FastEndpoints.Endpoint`2.DontCatchExceptions
  name: DontCatchExceptions
  nameWithType: Endpoint<TRequest, TResponse>.DontCatchExceptions
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontCatchExceptions
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontCatchExceptions
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontCatchExceptions
- uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails*
  commentId: Overload:FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  name: DontThrowIfValidationFails
  nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
- uid: FastEndpoints.Endpoint`2.Get*
  commentId: Overload:FastEndpoints.Endpoint`2.Get
  name: Get
  nameWithType: Endpoint<TRequest, TResponse>.Get
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Get
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Get
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Get
- uid: FastEndpoints.Group
  commentId: T:FastEndpoints.Group
  parent: FastEndpoints
  name: Group
  nameWithType: Group
  fullName: FastEndpoints.Group
- uid: FastEndpoints.BaseEndpoint.Group``1
  commentId: M:FastEndpoints.BaseEndpoint.Group``1
  parent: FastEndpoints.BaseEndpoint
  name: Group<TEndpointGroup>()
  nameWithType: BaseEndpoint.Group<TEndpointGroup>()
  fullName: FastEndpoints.BaseEndpoint.Group<TEndpointGroup>()
  nameWithType.vb: BaseEndpoint.Group(Of TEndpointGroup)()
  fullName.vb: FastEndpoints.BaseEndpoint.Group(Of TEndpointGroup)()
  name.vb: Group(Of TEndpointGroup)()
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.Group``1
    name: Group<TEndpointGroup>
    nameWithType: BaseEndpoint.Group<TEndpointGroup>
    fullName: FastEndpoints.BaseEndpoint.Group<TEndpointGroup>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.Group``1
    name: Group(Of TEndpointGroup)
    nameWithType: BaseEndpoint.Group(Of TEndpointGroup)
    fullName: FastEndpoints.BaseEndpoint.Group(Of TEndpointGroup)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Group*
  commentId: Overload:FastEndpoints.Endpoint`2.Group
  name: Group
  nameWithType: Endpoint<TRequest, TResponse>.Group
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Group
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Group
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Group
- uid: FastEndpoints.Endpoint`2.Head*
  commentId: Overload:FastEndpoints.Endpoint`2.Head
  name: Head
  nameWithType: Endpoint<TRequest, TResponse>.Head
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Head
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Head
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Head
- uid: FastEndpoints.Endpoint`2.Options*
  commentId: Overload:FastEndpoints.Endpoint`2.Options
  name: Options
  nameWithType: Endpoint<TRequest, TResponse>.Options
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Options
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Options
- uid: FastEndpoints.Endpoint`2.Patch*
  commentId: Overload:FastEndpoints.Endpoint`2.Patch
  name: Patch
  nameWithType: Endpoint<TRequest, TResponse>.Patch
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Patch
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Patch
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Patch
- uid: FastEndpoints.Endpoint`2.Permissions*
  commentId: Overload:FastEndpoints.Endpoint`2.Permissions
  name: Permissions
  nameWithType: Endpoint<TRequest, TResponse>.Permissions
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions
- uid: FastEndpoints.Endpoint`2.PermissionsAll*
  commentId: Overload:FastEndpoints.Endpoint`2.PermissionsAll
  name: PermissionsAll
  nameWithType: Endpoint<TRequest, TResponse>.PermissionsAll
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PermissionsAll
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PermissionsAll
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PermissionsAll
- uid: FastEndpoints.Endpoint`2.Policy*
  commentId: Overload:FastEndpoints.Endpoint`2.Policy
  name: Policy
  nameWithType: Endpoint<TRequest, TResponse>.Policy
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policy
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policy
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policy
- uid: System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder}
  commentId: T:System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder}
  parent: System
  definition: System.Action`1
  name: Action<AuthorizationPolicyBuilder>
  nameWithType: Action<AuthorizationPolicyBuilder>
  fullName: System.Action<Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder>
  nameWithType.vb: Action(Of AuthorizationPolicyBuilder)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder)
  name.vb: Action(Of AuthorizationPolicyBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
    name: AuthorizationPolicyBuilder
    nameWithType: AuthorizationPolicyBuilder
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
    name: AuthorizationPolicyBuilder
    nameWithType: AuthorizationPolicyBuilder
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Policies*
  commentId: Overload:FastEndpoints.Endpoint`2.Policies
  name: Policies
  nameWithType: Endpoint<TRequest, TResponse>.Policies
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policies
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies
- uid: FastEndpoints.Endpoint`2.Post*
  commentId: Overload:FastEndpoints.Endpoint`2.Post
  name: Post
  nameWithType: Endpoint<TRequest, TResponse>.Post
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Post
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Post
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Post
- uid: FastEndpoints.Endpoint`2.PostProcessors*
  commentId: Overload:FastEndpoints.Endpoint`2.PostProcessors
  name: PostProcessors
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessors
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessors
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors
- uid: FastEndpoints.IPostProcessor{{TRequest},{TResponse}}[]
  isExternal: true
  name: IPostProcessor<TRequest, TResponse>[]
  nameWithType: IPostProcessor<TRequest, TResponse>[]
  fullName: FastEndpoints.IPostProcessor<TRequest, TResponse>[]
  nameWithType.vb: IPostProcessor(Of TRequest, TResponse)()
  fullName.vb: FastEndpoints.IPostProcessor(Of TRequest, TResponse)()
  name.vb: IPostProcessor(Of TRequest, TResponse)()
  spec.csharp:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FastEndpoints.Endpoint`2.PreProcessors*
  commentId: Overload:FastEndpoints.Endpoint`2.PreProcessors
  name: PreProcessors
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessors
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessors
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors
- uid: FastEndpoints.IPreProcessor{{TRequest}}[]
  isExternal: true
  name: IPreProcessor<TRequest>[]
  nameWithType: IPreProcessor<TRequest>[]
  fullName: FastEndpoints.IPreProcessor<TRequest>[]
  nameWithType.vb: IPreProcessor(Of TRequest)()
  fullName.vb: FastEndpoints.IPreProcessor(Of TRequest)()
  name.vb: IPreProcessor(Of TRequest)()
  spec.csharp:
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FastEndpoints.Endpoint`2.Put*
  commentId: Overload:FastEndpoints.Endpoint`2.Put
  name: Put
  nameWithType: Endpoint<TRequest, TResponse>.Put
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Put
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Put
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Put
- uid: FastEndpoints.Endpoint`2.RequestBinder*
  commentId: Overload:FastEndpoints.Endpoint`2.RequestBinder
  name: RequestBinder
  nameWithType: Endpoint<TRequest, TResponse>.RequestBinder
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RequestBinder
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RequestBinder
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RequestBinder
- uid: FastEndpoints.IRequestBinder{{TRequest}}
  commentId: T:FastEndpoints.IRequestBinder{`0}
  parent: FastEndpoints
  definition: FastEndpoints.IRequestBinder`1
  name: IRequestBinder<TRequest>
  nameWithType: IRequestBinder<TRequest>
  fullName: FastEndpoints.IRequestBinder<TRequest>
  nameWithType.vb: IRequestBinder(Of TRequest)
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest)
  name.vb: IRequestBinder(Of TRequest)
  spec.csharp:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IRequestBinder`1
  commentId: T:FastEndpoints.IRequestBinder`1
  name: IRequestBinder<TRequest>
  nameWithType: IRequestBinder<TRequest>
  fullName: FastEndpoints.IRequestBinder<TRequest>
  nameWithType.vb: IRequestBinder(Of TRequest)
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest)
  name.vb: IRequestBinder(Of TRequest)
  spec.csharp:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ResponseCache*
  commentId: Overload:FastEndpoints.Endpoint`2.ResponseCache
  name: ResponseCache
  nameWithType: Endpoint<TRequest, TResponse>.ResponseCache
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseCache
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseCache
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseCache
- uid: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
  commentId: T:Microsoft.AspNetCore.Mvc.ResponseCacheLocation
  parent: Microsoft.AspNetCore.Mvc
  isExternal: true
  name: ResponseCacheLocation
  nameWithType: ResponseCacheLocation
  fullName: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: true
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: FastEndpoints.Endpoint`2.ResponseInterceptor*
  commentId: Overload:FastEndpoints.Endpoint`2.ResponseInterceptor
  name: ResponseInterceptor
  nameWithType: Endpoint<TRequest, TResponse>.ResponseInterceptor
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseInterceptor
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseInterceptor
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseInterceptor
- uid: FastEndpoints.IResponseInterceptor
  commentId: T:FastEndpoints.IResponseInterceptor
  parent: FastEndpoints
  name: IResponseInterceptor
  nameWithType: IResponseInterceptor
  fullName: FastEndpoints.IResponseInterceptor
- uid: FastEndpoints.Endpoint`2.Roles*
  commentId: Overload:FastEndpoints.Endpoint`2.Roles
  name: Roles
  nameWithType: Endpoint<TRequest, TResponse>.Roles
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Roles
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles
- uid: FastEndpoints.Endpoint`2.RoutePrefixOverride*
  commentId: Overload:FastEndpoints.Endpoint`2.RoutePrefixOverride
  name: RoutePrefixOverride
  nameWithType: Endpoint<TRequest, TResponse>.RoutePrefixOverride
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RoutePrefixOverride
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RoutePrefixOverride
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RoutePrefixOverride
- uid: FastEndpoints.Endpoint`2.Routes*
  commentId: Overload:FastEndpoints.Endpoint`2.Routes
  name: Routes
  nameWithType: Endpoint<TRequest, TResponse>.Routes
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Routes
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes
- uid: FastEndpoints.Endpoint`2.SerializerContext*
  commentId: Overload:FastEndpoints.Endpoint`2.SerializerContext
  name: SerializerContext
  nameWithType: Endpoint<TRequest, TResponse>.SerializerContext
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SerializerContext
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SerializerContext
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SerializerContext
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: TContext
  commentId: '!:TContext'
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: FastEndpoints.Endpoint`2.Summary*
  commentId: Overload:FastEndpoints.Endpoint`2.Summary
  name: Summary
  nameWithType: Endpoint<TRequest, TResponse>.Summary
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary
- uid: System.Action{FastEndpoints.EndpointSummary}
  commentId: T:System.Action{FastEndpoints.EndpointSummary}
  parent: System
  definition: System.Action`1
  name: Action<EndpointSummary>
  nameWithType: Action<EndpointSummary>
  fullName: System.Action<FastEndpoints.EndpointSummary>
  nameWithType.vb: Action(Of EndpointSummary)
  fullName.vb: System.Action(Of FastEndpoints.EndpointSummary)
  name.vb: Action(Of EndpointSummary)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{FastEndpoints.EndpointSummary{{TRequest}}}
  commentId: T:System.Action{FastEndpoints.EndpointSummary{``0}}
  parent: System
  definition: System.Action`1
  name: Action<EndpointSummary<TRequest>>
  nameWithType: Action<EndpointSummary<TRequest>>
  fullName: System.Action<FastEndpoints.EndpointSummary<TRequest>>
  nameWithType.vb: Action(Of EndpointSummary(Of TRequest))
  fullName.vb: System.Action(Of FastEndpoints.EndpointSummary(Of TRequest))
  name.vb: Action(Of EndpointSummary(Of TRequest))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EndpointSummary`1
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EndpointSummary`1
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointSummary
  commentId: T:FastEndpoints.EndpointSummary
  parent: FastEndpoints
  name: EndpointSummary
  nameWithType: EndpointSummary
  fullName: FastEndpoints.EndpointSummary
- uid: FastEndpoints.Endpoint`2.Tags*
  commentId: Overload:FastEndpoints.Endpoint`2.Tags
  name: Tags
  nameWithType: Endpoint<TRequest, TResponse>.Tags
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Tags
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Tags
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Tags
- uid: FastEndpoints.Endpoint`2.Throttle*
  commentId: Overload:FastEndpoints.Endpoint`2.Throttle
  name: Throttle
  nameWithType: Endpoint<TRequest, TResponse>.Throttle
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Throttle
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Throttle
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Throttle
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: FastEndpoints.Endpoint`2.Validator*
  commentId: Overload:FastEndpoints.Endpoint`2.Validator
  name: Validator
  nameWithType: Endpoint<TRequest, TResponse>.Validator
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Validator
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Validator
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Validator
- uid: FastEndpoints.Endpoint`2.Verbs*
  commentId: Overload:FastEndpoints.Endpoint`2.Verbs
  name: Verbs
  nameWithType: Endpoint<TRequest, TResponse>.Verbs
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs
- uid: FastEndpoints.BaseEndpoint.Verbs(System.String[])
  commentId: M:FastEndpoints.BaseEndpoint.Verbs(System.String[])
  parent: FastEndpoints.BaseEndpoint
  isExternal: true
  name: Verbs(String[])
  nameWithType: BaseEndpoint.Verbs(String[])
  fullName: FastEndpoints.BaseEndpoint.Verbs(System.String[])
  nameWithType.vb: BaseEndpoint.Verbs(String())
  fullName.vb: FastEndpoints.BaseEndpoint.Verbs(System.String())
  name.vb: Verbs(String())
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.Verbs(System.String[])
    name: Verbs
    nameWithType: BaseEndpoint.Verbs
    fullName: FastEndpoints.BaseEndpoint.Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.Verbs(System.String[])
    name: Verbs
    nameWithType: BaseEndpoint.Verbs
    fullName: FastEndpoints.BaseEndpoint.Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Version*
  commentId: Overload:FastEndpoints.Endpoint`2.Version
  name: Version
  nameWithType: Endpoint<TRequest, TResponse>.Version
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Version
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Version
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Version
- uid: FastEndpoints.Endpoint`2.ValidationFailed*
  commentId: Overload:FastEndpoints.Endpoint`2.ValidationFailed
  name: ValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailed
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailed
- uid: FastEndpoints.Endpoint`2.AddError*
  commentId: Overload:FastEndpoints.Endpoint`2.AddError
  name: AddError
  nameWithType: Endpoint<TRequest, TResponse>.AddError
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError
- uid: FluentValidation.Severity
  commentId: T:FluentValidation.Severity
  parent: FluentValidation
  isExternal: true
  name: Severity
  nameWithType: Severity
  fullName: FluentValidation.Severity
- uid: FluentValidation
  commentId: N:FluentValidation
  isExternal: true
  name: FluentValidation
  nameWithType: FluentValidation
  fullName: FluentValidation
- uid: FastEndpoints.Endpoint`2.ThrowError*
  commentId: Overload:FastEndpoints.Endpoint`2.ThrowError
  name: ThrowError
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError
- uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors*
  commentId: Overload:FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  name: ThrowIfAnyErrors
  nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
