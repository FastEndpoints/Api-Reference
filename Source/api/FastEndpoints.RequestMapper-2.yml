### YamlMime:ManagedReference
items:
- uid: FastEndpoints.RequestMapper`2
  commentId: T:FastEndpoints.RequestMapper`2
  id: RequestMapper`2
  parent: FastEndpoints
  children:
  - FastEndpoints.RequestMapper`2.CreateScope
  - FastEndpoints.RequestMapper`2.Resolve(System.Type)
  - FastEndpoints.RequestMapper`2.Resolve(System.Type,System.String)
  - FastEndpoints.RequestMapper`2.Resolve``1
  - FastEndpoints.RequestMapper`2.Resolve``1(System.String)
  - FastEndpoints.RequestMapper`2.ToEntity(`0)
  - FastEndpoints.RequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.RequestMapper`2.TryResolve(System.Type)
  - FastEndpoints.RequestMapper`2.TryResolve(System.Type,System.String)
  - FastEndpoints.RequestMapper`2.TryResolve``1
  - FastEndpoints.RequestMapper`2.TryResolve``1(System.String)
  - FastEndpoints.RequestMapper`2.UpdateEntity(`0,`1)
  - FastEndpoints.RequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RequestMapper<TRequest, TEntity>
  nameWithType: RequestMapper<TRequest, TEntity>
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>
  type: Class
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    use this base class to define a domain entity mapper for your endpoints that only has a request dto and no response dto.

    <p>HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers.</p>
  example: []
  syntax:
    content: 'public abstract class RequestMapper<TRequest, TEntity> : IRequestMapper<TRequest, TEntity>, IRequestMapper, IMapper, IServiceResolverBase where TRequest : notnull'
    typeParameters:
    - id: TRequest
      description: the type of request dto
    - id: TEntity
      description: the type of domain entity to map to/from
    content.vb: Public MustInherit Class RequestMapper(Of TRequest, TEntity) Implements IRequestMapper(Of TRequest, TEntity), IRequestMapper, IMapper, IServiceResolverBase
  inheritance:
  - System.Object
  implements:
  - FastEndpoints.IRequestMapper{{TRequest},{TEntity}}
  - FastEndpoints.IRequestMapper
  - FastEndpoints.IMapper
  - FastEndpoints.IServiceResolverBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RequestMapper(Of TRequest, TEntity)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity)
  name.vb: RequestMapper(Of TRequest, TEntity)
- uid: FastEndpoints.RequestMapper`2.ToEntity(`0)
  commentId: M:FastEndpoints.RequestMapper`2.ToEntity(`0)
  id: ToEntity(`0)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: ToEntity(TRequest)
  nameWithType: RequestMapper<TRequest, TEntity>.ToEntity(TRequest)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.ToEntity(TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping the request dto to the desired domain entity
  example: []
  syntax:
    content: public virtual TEntity ToEntity(TRequest r)
    parameters:
    - id: r
      type: '{TRequest}'
      description: the request dto
    return:
      type: '{TEntity}'
    content.vb: Public Overridable Function ToEntity(r As TRequest) As TEntity
  overload: FastEndpoints.RequestMapper`2.ToEntity*
  implements:
  - FastEndpoints.IRequestMapper{{TRequest},{TEntity}}.ToEntity({TRequest})
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).ToEntity(TRequest)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).ToEntity(TRequest)
- uid: FastEndpoints.RequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.RequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
  id: ToEntityAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: ToEntityAsync(TRequest, CancellationToken)
  nameWithType: RequestMapper<TRequest, TEntity>.ToEntityAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.ToEntityAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping the request dto to the desired domain entity
  example: []
  syntax:
    content: public virtual Task<TEntity> ToEntityAsync(TRequest r, CancellationToken ct = default)
    parameters:
    - id: r
      type: '{TRequest}'
      description: the request dto to map from
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Public Overridable Function ToEntityAsync(r As TRequest, ct As CancellationToken = Nothing) As Task(Of TEntity)
  overload: FastEndpoints.RequestMapper`2.ToEntityAsync*
  implements:
  - FastEndpoints.IRequestMapper{{TRequest},{TEntity}}.ToEntityAsync({TRequest},System.Threading.CancellationToken)
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).ToEntityAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).ToEntityAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.RequestMapper`2.UpdateEntity(`0,`1)
  commentId: M:FastEndpoints.RequestMapper`2.UpdateEntity(`0,`1)
  id: UpdateEntity(`0,`1)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: UpdateEntity(TRequest, TEntity)
  nameWithType: RequestMapper<TRequest, TEntity>.UpdateEntity(TRequest, TEntity)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.UpdateEntity(TRequest, TEntity)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping the updated request dto to the desired domain entity
  example: []
  syntax:
    content: public virtual TEntity UpdateEntity(TRequest r, TEntity e)
    parameters:
    - id: r
      type: '{TRequest}'
      description: the request dto to update from
    - id: e
      type: '{TEntity}'
      description: the domain entity to update
    return:
      type: '{TEntity}'
    content.vb: Public Overridable Function UpdateEntity(r As TRequest, e As TEntity) As TEntity
  overload: FastEndpoints.RequestMapper`2.UpdateEntity*
  implements:
  - FastEndpoints.IRequestMapper{{TRequest},{TEntity}}.UpdateEntity({TRequest},{TEntity})
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).UpdateEntity(TRequest, TEntity)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).UpdateEntity(TRequest, TEntity)
- uid: FastEndpoints.RequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.RequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  id: UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  nameWithType: RequestMapper<TRequest, TEntity>.UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.UpdateEntityAsync(TRequest, TEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping the updated request dto to the desired domain entity
  example: []
  syntax:
    content: public virtual Task<TEntity> UpdateEntityAsync(TRequest r, TEntity e, CancellationToken ct)
    parameters:
    - id: r
      type: '{TRequest}'
      description: the request dto to update from
    - id: e
      type: '{TEntity}'
      description: the domain entity to update
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Public Overridable Function UpdateEntityAsync(r As TRequest, e As TEntity, ct As CancellationToken) As Task(Of TEntity)
  overload: FastEndpoints.RequestMapper`2.UpdateEntityAsync*
  implements:
  - FastEndpoints.IRequestMapper{{TRequest},{TEntity}}.UpdateEntityAsync({TRequest},{TEntity},System.Threading.CancellationToken)
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).UpdateEntityAsync(TRequest, TEntity, System.Threading.CancellationToken)
- uid: FastEndpoints.RequestMapper`2.TryResolve``1
  commentId: M:FastEndpoints.RequestMapper`2.TryResolve``1
  id: TryResolve``1
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: TryResolve<TService>()
  nameWithType: RequestMapper<TRequest, TEntity>.TryResolve<TService>()
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.TryResolve<TService>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.
  example: []
  syntax:
    content: 'public TService? TryResolve<TService>() where TService : class'
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Public Function TryResolve(Of TService As Class)() As TService
  overload: FastEndpoints.RequestMapper`2.TryResolve*
  implements:
  - FastEndpoints.IServiceResolverBase.TryResolve``1
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).TryResolve(Of TService)()
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
- uid: FastEndpoints.RequestMapper`2.TryResolve(System.Type)
  commentId: M:FastEndpoints.RequestMapper`2.TryResolve(System.Type)
  id: TryResolve(System.Type)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: TryResolve(Type)
  nameWithType: RequestMapper<TRequest, TEntity>.TryResolve(Type)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.TryResolve(System.Type)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.
  example: []
  syntax:
    content: public object? TryResolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: System.Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: Public Function TryResolve(typeOfService As Type) As Object
  overload: FastEndpoints.RequestMapper`2.TryResolve*
  implements:
  - FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).TryResolve(Type)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).TryResolve(System.Type)
- uid: FastEndpoints.RequestMapper`2.Resolve``1
  commentId: M:FastEndpoints.RequestMapper`2.Resolve``1
  id: Resolve``1
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: Resolve<TService>()
  nameWithType: RequestMapper<TRequest, TEntity>.Resolve<TService>()
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.Resolve<TService>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: resolve an instance for the given type from the dependency injection container. will throw if unresolvable.
  example: []
  syntax:
    content: 'public TService Resolve<TService>() where TService : class'
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Public Function Resolve(Of TService As Class)() As TService
  overload: FastEndpoints.RequestMapper`2.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if requested service cannot be resolved
  implements:
  - FastEndpoints.IServiceResolverBase.Resolve``1
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).Resolve(Of TService)()
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
- uid: FastEndpoints.RequestMapper`2.Resolve(System.Type)
  commentId: M:FastEndpoints.RequestMapper`2.Resolve(System.Type)
  id: Resolve(System.Type)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: Resolve(Type)
  nameWithType: RequestMapper<TRequest, TEntity>.Resolve(Type)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.Resolve(System.Type)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: resolve an instance for the given type from the dependency injection container. will throw if unresolvable.
  example: []
  syntax:
    content: public object Resolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: System.Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: Public Function Resolve(typeOfService As Type) As Object
  overload: FastEndpoints.RequestMapper`2.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if requested service cannot be resolved
  implements:
  - FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).Resolve(Type)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).Resolve(System.Type)
- uid: FastEndpoints.RequestMapper`2.CreateScope
  commentId: M:FastEndpoints.RequestMapper`2.CreateScope
  id: CreateScope
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: CreateScope()
  nameWithType: RequestMapper<TRequest, TEntity>.CreateScope()
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.CreateScope()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    if you'd like to resolve scoped or transient services from the MS DI container, obtain a service scope from this method and dispose the scope when

    the work is complete.

    <p>

        <pre><code class="lang-csharp">using var scope = CreateScope();
        var scopedService = scope.Resolve<MyService>();</code></pre>
    </p>
  example: []
  syntax:
    content: public IServiceScope CreateScope()
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceScope
    content.vb: Public Function CreateScope() As IServiceScope
  overload: FastEndpoints.RequestMapper`2.CreateScope*
  implements:
  - FastEndpoints.IServiceResolverBase.CreateScope
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).CreateScope()
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).CreateScope()
- uid: FastEndpoints.RequestMapper`2.TryResolve``1(System.String)
  commentId: M:FastEndpoints.RequestMapper`2.TryResolve``1(System.String)
  id: TryResolve``1(System.String)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: TryResolve<TService>(string)
  nameWithType: RequestMapper<TRequest, TEntity>.TryResolve<TService>(string)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.TryResolve<TService>(string)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.
  example: []
  syntax:
    content: 'public TService? TryResolve<TService>(string keyName) where TService : class'
    parameters:
    - id: keyName
      type: System.String
      description: the key name for resolving keyed service
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Public Function TryResolve(Of TService As Class)(keyName As String) As TService
  overload: FastEndpoints.RequestMapper`2.TryResolve*
  implements:
  - FastEndpoints.IServiceResolverBase.TryResolve``1(System.String)
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).TryResolve(Of TService)(String)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).TryResolve(Of TService)(String)
  name.vb: TryResolve(Of TService)(String)
- uid: FastEndpoints.RequestMapper`2.TryResolve(System.Type,System.String)
  commentId: M:FastEndpoints.RequestMapper`2.TryResolve(System.Type,System.String)
  id: TryResolve(System.Type,System.String)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: TryResolve(Type, string)
  nameWithType: RequestMapper<TRequest, TEntity>.TryResolve(Type, string)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.TryResolve(System.Type, string)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.
  example: []
  syntax:
    content: public object? TryResolve(Type typeOfService, string keyName)
    parameters:
    - id: typeOfService
      type: System.Type
      description: the type of the service to resolve
    - id: keyName
      type: System.String
      description: the key name for resolving keyed service
    return:
      type: System.Object
    content.vb: Public Function TryResolve(typeOfService As Type, keyName As String) As Object
  overload: FastEndpoints.RequestMapper`2.TryResolve*
  implements:
  - FastEndpoints.IServiceResolverBase.TryResolve(System.Type,System.String)
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).TryResolve(Type, String)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).TryResolve(System.Type, String)
  name.vb: TryResolve(Type, String)
- uid: FastEndpoints.RequestMapper`2.Resolve``1(System.String)
  commentId: M:FastEndpoints.RequestMapper`2.Resolve``1(System.String)
  id: Resolve``1(System.String)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: Resolve<TService>(string)
  nameWithType: RequestMapper<TRequest, TEntity>.Resolve<TService>(string)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.Resolve<TService>(string)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: resolve an instance for the given type from the dependency injection container. will throw if unresolvable.
  example: []
  syntax:
    content: 'public TService Resolve<TService>(string keyName) where TService : class'
    parameters:
    - id: keyName
      type: System.String
      description: the key name for resolving keyed service
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Public Function Resolve(Of TService As Class)(keyName As String) As TService
  overload: FastEndpoints.RequestMapper`2.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if requested service cannot be resolved
  implements:
  - FastEndpoints.IServiceResolverBase.Resolve``1(System.String)
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).Resolve(Of TService)(String)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).Resolve(Of TService)(String)
  name.vb: Resolve(Of TService)(String)
- uid: FastEndpoints.RequestMapper`2.Resolve(System.Type,System.String)
  commentId: M:FastEndpoints.RequestMapper`2.Resolve(System.Type,System.String)
  id: Resolve(System.Type,System.String)
  parent: FastEndpoints.RequestMapper`2
  langs:
  - csharp
  - vb
  name: Resolve(Type, string)
  nameWithType: RequestMapper<TRequest, TEntity>.Resolve(Type, string)
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.Resolve(System.Type, string)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: resolve an instance for the given type from the dependency injection container. will throw if unresolvable.
  example: []
  syntax:
    content: public object Resolve(Type typeOfService, string keyName)
    parameters:
    - id: typeOfService
      type: System.Type
      description: the type of the service to resolve
    - id: keyName
      type: System.String
      description: the key name for resolving keyed service
    return:
      type: System.Object
    content.vb: Public Function Resolve(typeOfService As Type, keyName As String) As Object
  overload: FastEndpoints.RequestMapper`2.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if requested service cannot be resolved
  implements:
  - FastEndpoints.IServiceResolverBase.Resolve(System.Type,System.String)
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).Resolve(Type, String)
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).Resolve(System.Type, String)
  name.vb: Resolve(Type, String)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FastEndpoints.IRequestMapper{{TRequest},{TEntity}}
  commentId: T:FastEndpoints.IRequestMapper{`0,`2}
  parent: FastEndpoints
  definition: FastEndpoints.IRequestMapper`2
  href: FastEndpoints.IRequestMapper-2.html
  name: IRequestMapper<TRequest, TEntity>
  nameWithType: IRequestMapper<TRequest, TEntity>
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity)
  name.vb: IRequestMapper(Of TRequest, TEntity)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper`2
    name: IRequestMapper
    href: FastEndpoints.IRequestMapper-2.html
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.IRequestMapper`2
    name: IRequestMapper
    href: FastEndpoints.IRequestMapper-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
- uid: FastEndpoints.IRequestMapper
  commentId: T:FastEndpoints.IRequestMapper
  parent: FastEndpoints
  href: FastEndpoints.IRequestMapper.html
  name: IRequestMapper
  nameWithType: IRequestMapper
  fullName: FastEndpoints.IRequestMapper
- uid: FastEndpoints.IMapper
  commentId: T:FastEndpoints.IMapper
  parent: FastEndpoints
  href: FastEndpoints.IMapper.html
  name: IMapper
  nameWithType: IMapper
  fullName: FastEndpoints.IMapper
- uid: FastEndpoints.IServiceResolverBase
  commentId: T:FastEndpoints.IServiceResolverBase
  parent: FastEndpoints
  href: FastEndpoints.IServiceResolverBase.html
  name: IServiceResolverBase
  nameWithType: IServiceResolverBase
  fullName: FastEndpoints.IServiceResolverBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.IRequestMapper`2
  commentId: T:FastEndpoints.IRequestMapper`2
  href: FastEndpoints.IRequestMapper-2.html
  name: IRequestMapper<TRequest, TEntity>
  nameWithType: IRequestMapper<TRequest, TEntity>
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity)
  name.vb: IRequestMapper(Of TRequest, TEntity)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper`2
    name: IRequestMapper
    href: FastEndpoints.IRequestMapper-2.html
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.IRequestMapper`2
    name: IRequestMapper
    href: FastEndpoints.IRequestMapper-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
- uid: FastEndpoints.RequestMapper`2.ToEntity*
  commentId: Overload:FastEndpoints.RequestMapper`2.ToEntity
  href: FastEndpoints.RequestMapper-2.html#FastEndpoints_RequestMapper_2_ToEntity__0_
  name: ToEntity
  nameWithType: RequestMapper<TRequest, TEntity>.ToEntity
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.ToEntity
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).ToEntity
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).ToEntity
- uid: FastEndpoints.IRequestMapper{{TRequest},{TEntity}}.ToEntity({TRequest})
  commentId: M:FastEndpoints.IRequestMapper{`0,`2}.ToEntity(`0)
  parent: FastEndpoints.IRequestMapper{{TRequest},{TEntity}}
  definition: FastEndpoints.IRequestMapper`2.ToEntity(`0)
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntity__0_
  name: ToEntity(TRequest)
  nameWithType: IRequestMapper<TRequest, TEntity>.ToEntity(TRequest)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.ToEntity(TRequest)
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).ToEntity(TRequest)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).ToEntity(TRequest)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper{`0,`2}.ToEntity(`0)
    name: ToEntity
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntity__0_
  - name: (
  - name: TRequest
  - name: )
  spec.vb:
  - uid: FastEndpoints.IRequestMapper{`0,`2}.ToEntity(`0)
    name: ToEntity
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntity__0_
  - name: (
  - name: TRequest
  - name: )
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: FastEndpoints.IRequestMapper`2.ToEntity(`0)
  commentId: M:FastEndpoints.IRequestMapper`2.ToEntity(`0)
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntity__0_
  name: ToEntity(TRequest)
  nameWithType: IRequestMapper<TRequest, TEntity>.ToEntity(TRequest)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.ToEntity(TRequest)
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).ToEntity(TRequest)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).ToEntity(TRequest)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper`2.ToEntity(`0)
    name: ToEntity
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntity__0_
  - name: (
  - name: TRequest
  - name: )
  spec.vb:
  - uid: FastEndpoints.IRequestMapper`2.ToEntity(`0)
    name: ToEntity
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntity__0_
  - name: (
  - name: TRequest
  - name: )
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: FastEndpoints.RequestMapper`2.ToEntityAsync*
  commentId: Overload:FastEndpoints.RequestMapper`2.ToEntityAsync
  href: FastEndpoints.RequestMapper-2.html#FastEndpoints_RequestMapper_2_ToEntityAsync__0_System_Threading_CancellationToken_
  name: ToEntityAsync
  nameWithType: RequestMapper<TRequest, TEntity>.ToEntityAsync
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.ToEntityAsync
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).ToEntityAsync
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).ToEntityAsync
- uid: FastEndpoints.IRequestMapper{{TRequest},{TEntity}}.ToEntityAsync({TRequest},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IRequestMapper{`0,`2}.ToEntityAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.IRequestMapper{{TRequest},{TEntity}}
  definition: FastEndpoints.IRequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntityAsync__0_System_Threading_CancellationToken_
  name: ToEntityAsync(TRequest, CancellationToken)
  nameWithType: IRequestMapper<TRequest, TEntity>.ToEntityAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.ToEntityAsync(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).ToEntityAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).ToEntityAsync(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper{`0,`2}.ToEntityAsync(`0,System.Threading.CancellationToken)
    name: ToEntityAsync
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntityAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FastEndpoints.IRequestMapper{`0,`2}.ToEntityAsync(`0,System.Threading.CancellationToken)
    name: ToEntityAsync
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntityAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TEntity}}
  commentId: T:System.Threading.Tasks.Task{`2}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TEntity>
  nameWithType: Task<TEntity>
  fullName: System.Threading.Tasks.Task<TEntity>
  nameWithType.vb: Task(Of TEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TEntity)
  name.vb: Task(Of TEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: FastEndpoints.IRequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IRequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntityAsync__0_System_Threading_CancellationToken_
  name: ToEntityAsync(TRequest, CancellationToken)
  nameWithType: IRequestMapper<TRequest, TEntity>.ToEntityAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.ToEntityAsync(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).ToEntityAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).ToEntityAsync(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
    name: ToEntityAsync
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntityAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FastEndpoints.IRequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
    name: ToEntityAsync
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntityAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FastEndpoints.RequestMapper`2.UpdateEntity*
  commentId: Overload:FastEndpoints.RequestMapper`2.UpdateEntity
  href: FastEndpoints.RequestMapper-2.html#FastEndpoints_RequestMapper_2_UpdateEntity__0__1_
  name: UpdateEntity
  nameWithType: RequestMapper<TRequest, TEntity>.UpdateEntity
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.UpdateEntity
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).UpdateEntity
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).UpdateEntity
- uid: FastEndpoints.IRequestMapper{{TRequest},{TEntity}}.UpdateEntity({TRequest},{TEntity})
  commentId: M:FastEndpoints.IRequestMapper{`0,`2}.UpdateEntity(`0,`2)
  parent: FastEndpoints.IRequestMapper{{TRequest},{TEntity}}
  definition: FastEndpoints.IRequestMapper`2.UpdateEntity(`0,`1)
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntity__0__1_
  name: UpdateEntity(TRequest, TEntity)
  nameWithType: IRequestMapper<TRequest, TEntity>.UpdateEntity(TRequest, TEntity)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.UpdateEntity(TRequest, TEntity)
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).UpdateEntity(TRequest, TEntity)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).UpdateEntity(TRequest, TEntity)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper{`0,`2}.UpdateEntity(`0,`2)
    name: UpdateEntity
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntity__0__1_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
  spec.vb:
  - uid: FastEndpoints.IRequestMapper{`0,`2}.UpdateEntity(`0,`2)
    name: UpdateEntity
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntity__0__1_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
- uid: FastEndpoints.IRequestMapper`2.UpdateEntity(`0,`1)
  commentId: M:FastEndpoints.IRequestMapper`2.UpdateEntity(`0,`1)
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntity__0__1_
  name: UpdateEntity(TRequest, TEntity)
  nameWithType: IRequestMapper<TRequest, TEntity>.UpdateEntity(TRequest, TEntity)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.UpdateEntity(TRequest, TEntity)
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).UpdateEntity(TRequest, TEntity)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).UpdateEntity(TRequest, TEntity)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper`2.UpdateEntity(`0,`1)
    name: UpdateEntity
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntity__0__1_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
  spec.vb:
  - uid: FastEndpoints.IRequestMapper`2.UpdateEntity(`0,`1)
    name: UpdateEntity
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntity__0__1_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
- uid: FastEndpoints.RequestMapper`2.UpdateEntityAsync*
  commentId: Overload:FastEndpoints.RequestMapper`2.UpdateEntityAsync
  href: FastEndpoints.RequestMapper-2.html#FastEndpoints_RequestMapper_2_UpdateEntityAsync__0__1_System_Threading_CancellationToken_
  name: UpdateEntityAsync
  nameWithType: RequestMapper<TRequest, TEntity>.UpdateEntityAsync
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.UpdateEntityAsync
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).UpdateEntityAsync
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).UpdateEntityAsync
- uid: FastEndpoints.IRequestMapper{{TRequest},{TEntity}}.UpdateEntityAsync({TRequest},{TEntity},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IRequestMapper{`0,`2}.UpdateEntityAsync(`0,`2,System.Threading.CancellationToken)
  parent: FastEndpoints.IRequestMapper{{TRequest},{TEntity}}
  definition: FastEndpoints.IRequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntityAsync__0__1_System_Threading_CancellationToken_
  name: UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  nameWithType: IRequestMapper<TRequest, TEntity>.UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.UpdateEntityAsync(TRequest, TEntity, System.Threading.CancellationToken)
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).UpdateEntityAsync(TRequest, TEntity, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper{`0,`2}.UpdateEntityAsync(`0,`2,System.Threading.CancellationToken)
    name: UpdateEntityAsync
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntityAsync__0__1_System_Threading_CancellationToken_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FastEndpoints.IRequestMapper{`0,`2}.UpdateEntityAsync(`0,`2,System.Threading.CancellationToken)
    name: UpdateEntityAsync
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntityAsync__0__1_System_Threading_CancellationToken_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FastEndpoints.IRequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IRequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  isExternal: true
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntityAsync__0__1_System_Threading_CancellationToken_
  name: UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  nameWithType: IRequestMapper<TRequest, TEntity>.UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.UpdateEntityAsync(TRequest, TEntity, System.Threading.CancellationToken)
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).UpdateEntityAsync(TRequest, TEntity, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IRequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
    name: UpdateEntityAsync
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntityAsync__0__1_System_Threading_CancellationToken_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FastEndpoints.IRequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
    name: UpdateEntityAsync
    href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntityAsync__0__1_System_Threading_CancellationToken_
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FastEndpoints.RequestMapper`2.TryResolve*
  commentId: Overload:FastEndpoints.RequestMapper`2.TryResolve
  href: FastEndpoints.RequestMapper-2.html#FastEndpoints_RequestMapper_2_TryResolve__1
  name: TryResolve
  nameWithType: RequestMapper<TRequest, TEntity>.TryResolve
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.TryResolve
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).TryResolve
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).TryResolve
- uid: FastEndpoints.IServiceResolverBase.TryResolve``1
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve``1
  parent: FastEndpoints.IServiceResolverBase
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve__1
  name: TryResolve<TService>()
  nameWithType: IServiceResolverBase.TryResolve<TService>()
  fullName: FastEndpoints.IServiceResolverBase.TryResolve<TService>()
  nameWithType.vb: IServiceResolverBase.TryResolve(Of TService)()
  fullName.vb: FastEndpoints.IServiceResolverBase.TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve__1
  - name: <
  - name: TService
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve__1
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
  - name: (
  - name: )
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve_System_Type_
  name: TryResolve(Type)
  nameWithType: IServiceResolverBase.TryResolve(Type)
  fullName: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type)
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: FastEndpoints.RequestMapper`2.Resolve*
  commentId: Overload:FastEndpoints.RequestMapper`2.Resolve
  href: FastEndpoints.RequestMapper-2.html#FastEndpoints_RequestMapper_2_Resolve__1
  name: Resolve
  nameWithType: RequestMapper<TRequest, TEntity>.Resolve
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.Resolve
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).Resolve
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).Resolve
- uid: FastEndpoints.IServiceResolverBase.Resolve``1
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve``1
  parent: FastEndpoints.IServiceResolverBase
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve__1
  name: Resolve<TService>()
  nameWithType: IServiceResolverBase.Resolve<TService>()
  fullName: FastEndpoints.IServiceResolverBase.Resolve<TService>()
  nameWithType.vb: IServiceResolverBase.Resolve(Of TService)()
  fullName.vb: FastEndpoints.IServiceResolverBase.Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve__1
  - name: <
  - name: TService
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve__1
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
  - name: (
  - name: )
- uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve_System_Type_
  name: Resolve(Type)
  nameWithType: IServiceResolverBase.Resolve(Type)
  fullName: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type)
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: FastEndpoints.RequestMapper`2.CreateScope*
  commentId: Overload:FastEndpoints.RequestMapper`2.CreateScope
  href: FastEndpoints.RequestMapper-2.html#FastEndpoints_RequestMapper_2_CreateScope
  name: CreateScope
  nameWithType: RequestMapper<TRequest, TEntity>.CreateScope
  fullName: FastEndpoints.RequestMapper<TRequest, TEntity>.CreateScope
  nameWithType.vb: RequestMapper(Of TRequest, TEntity).CreateScope
  fullName.vb: FastEndpoints.RequestMapper(Of TRequest, TEntity).CreateScope
- uid: FastEndpoints.IServiceResolverBase.CreateScope
  commentId: M:FastEndpoints.IServiceResolverBase.CreateScope
  parent: FastEndpoints.IServiceResolverBase
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_CreateScope
  name: CreateScope()
  nameWithType: IServiceResolverBase.CreateScope()
  fullName: FastEndpoints.IServiceResolverBase.CreateScope()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.CreateScope
    name: CreateScope
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_CreateScope
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.CreateScope
    name: CreateScope
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_CreateScope
  - name: (
  - name: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceScope
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceScope
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicescope
  name: IServiceScope
  nameWithType: IServiceScope
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScope
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: FastEndpoints.IServiceResolverBase.TryResolve``1(System.String)
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve``1(System.String)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve__1_System_String_
  name: TryResolve<TService>(string)
  nameWithType: IServiceResolverBase.TryResolve<TService>(string)
  fullName: FastEndpoints.IServiceResolverBase.TryResolve<TService>(string)
  nameWithType.vb: IServiceResolverBase.TryResolve(Of TService)(String)
  fullName.vb: FastEndpoints.IServiceResolverBase.TryResolve(Of TService)(String)
  name.vb: TryResolve(Of TService)(String)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1(System.String)
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve__1_System_String_
  - name: <
  - name: TService
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1(System.String)
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type,System.String)
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve(System.Type,System.String)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve_System_Type_System_String_
  name: TryResolve(Type, string)
  nameWithType: IServiceResolverBase.TryResolve(Type, string)
  fullName: FastEndpoints.IServiceResolverBase.TryResolve(System.Type, string)
  nameWithType.vb: IServiceResolverBase.TryResolve(Type, String)
  fullName.vb: FastEndpoints.IServiceResolverBase.TryResolve(System.Type, String)
  name.vb: TryResolve(Type, String)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type,System.String)
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve_System_Type_System_String_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(System.Type,System.String)
    name: TryResolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_TryResolve_System_Type_System_String_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: FastEndpoints.IServiceResolverBase.Resolve``1(System.String)
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve``1(System.String)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve__1_System_String_
  name: Resolve<TService>(string)
  nameWithType: IServiceResolverBase.Resolve<TService>(string)
  fullName: FastEndpoints.IServiceResolverBase.Resolve<TService>(string)
  nameWithType.vb: IServiceResolverBase.Resolve(Of TService)(String)
  fullName.vb: FastEndpoints.IServiceResolverBase.Resolve(Of TService)(String)
  name.vb: Resolve(Of TService)(String)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1(System.String)
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve__1_System_String_
  - name: <
  - name: TService
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1(System.String)
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type,System.String)
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve(System.Type,System.String)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve_System_Type_System_String_
  name: Resolve(Type, string)
  nameWithType: IServiceResolverBase.Resolve(Type, string)
  fullName: FastEndpoints.IServiceResolverBase.Resolve(System.Type, string)
  nameWithType.vb: IServiceResolverBase.Resolve(Type, String)
  fullName.vb: FastEndpoints.IServiceResolverBase.Resolve(System.Type, String)
  name.vb: Resolve(Type, String)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type,System.String)
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve_System_Type_System_String_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(System.Type,System.String)
    name: Resolve
    href: FastEndpoints.IServiceResolverBase.html#FastEndpoints_IServiceResolverBase_Resolve_System_Type_System_String_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
