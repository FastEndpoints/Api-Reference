### YamlMime:ManagedReference
items:
- uid: FastEndpoints.ClientGen.Extensions
  commentId: T:FastEndpoints.ClientGen.Extensions
  id: Extensions
  parent: FastEndpoints.ClientGen
  children:
  - FastEndpoints.ClientGen.Extensions.GenerateClientsAndExitAsync(Microsoft.AspNetCore.Builder.WebApplication,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}},System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}})
  - FastEndpoints.ClientGen.Extensions.GenerateCSharpClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings,Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings},System.String,NSwag.CodeGeneration.ClientGeneratorOutputType)
  - FastEndpoints.ClientGen.Extensions.GenerateTypeScriptClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings,Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings},System.String,NSwag.CodeGeneration.ClientGeneratorOutputType)
  - FastEndpoints.ClientGen.Extensions.MapCSharpClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}})
  - FastEndpoints.ClientGen.Extensions.MapTypeScriptClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}})
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: FastEndpoints.ClientGen.Extensions
  type: Class
  source:
    id: Extensions
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\ClientGen\Extensions.cs
    startLine: 14
  assemblies:
  - FastEndpoints.ClientGen
  namespace: FastEndpoints.ClientGen
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FastEndpoints.ClientGen.Extensions.GenerateCSharpClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings,Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings},System.String,NSwag.CodeGeneration.ClientGeneratorOutputType)
  commentId: M:FastEndpoints.ClientGen.Extensions.GenerateCSharpClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings,Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings},System.String,NSwag.CodeGeneration.ClientGeneratorOutputType)
  id: GenerateCSharpClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings,Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings},System.String,NSwag.CodeGeneration.ClientGeneratorOutputType)
  isExtensionMethod: true
  parent: FastEndpoints.ClientGen.Extensions
  langs:
  - csharp
  - vb
  name: GenerateCSharpClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action<CSharpClientGeneratorSettings>, String, ClientGeneratorOutputType)
  nameWithType: Extensions.GenerateCSharpClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action<CSharpClientGeneratorSettings>, String, ClientGeneratorOutputType)
  fullName: FastEndpoints.ClientGen.Extensions.GenerateCSharpClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings, Action<NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings>, System.String, NSwag.CodeGeneration.ClientGeneratorOutputType)
  type: Method
  source:
    id: GenerateCSharpClient
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\ClientGen\Extensions.cs
    startLine: 22
  assemblies:
  - FastEndpoints.ClientGen
  namespace: FastEndpoints.ClientGen
  summary: "\ngenerates a c# api client and saves it to disk at the specified location.\n"
  example: []
  syntax:
    content: public static void GenerateCSharpClient(this AspNetCoreOpenApiDocumentGeneratorSettings gen, Action<CSharpClientGeneratorSettings> settings, string destination, ClientGeneratorOutputType outputType = ClientGeneratorOutputType.Full)
    parameters:
    - id: gen
      type: NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings
    - id: settings
      type: Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}
      description: client generator settings
    - id: destination
      type: System.String
      description: the output file path including file name
    - id: outputType
      type: NSwag.CodeGeneration.ClientGeneratorOutputType
      description: the type of the generated client file
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub GenerateCSharpClient(gen As AspNetCoreOpenApiDocumentGeneratorSettings, settings As Action(Of CSharpClientGeneratorSettings), destination As String, outputType As ClientGeneratorOutputType = ClientGeneratorOutputType.Full)
  overload: FastEndpoints.ClientGen.Extensions.GenerateCSharpClient*
  nameWithType.vb: Extensions.GenerateCSharpClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action(Of CSharpClientGeneratorSettings), String, ClientGeneratorOutputType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.ClientGen.Extensions.GenerateCSharpClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings, Action(Of NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings), System.String, NSwag.CodeGeneration.ClientGeneratorOutputType)
  name.vb: GenerateCSharpClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action(Of CSharpClientGeneratorSettings), String, ClientGeneratorOutputType)
- uid: FastEndpoints.ClientGen.Extensions.MapCSharpClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}})
  commentId: M:FastEndpoints.ClientGen.Extensions.MapCSharpClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}})
  id: MapCSharpClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}})
  isExtensionMethod: true
  parent: FastEndpoints.ClientGen.Extensions
  langs:
  - csharp
  - vb
  name: MapCSharpClientEndpoint(IEndpointRouteBuilder, String, String, Nullable<Action<CSharpClientGeneratorSettings>>)
  nameWithType: Extensions.MapCSharpClientEndpoint(IEndpointRouteBuilder, String, String, Nullable<Action<CSharpClientGeneratorSettings>>)
  fullName: FastEndpoints.ClientGen.Extensions.MapCSharpClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder, System.String, System.String, System.Nullable<Action<NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings>>)
  type: Method
  source:
    id: MapCSharpClientEndpoint
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\ClientGen\Extensions.cs
    startLine: 31
  assemblies:
  - FastEndpoints.ClientGen
  namespace: FastEndpoints.ClientGen
  summary: "\nregisters an endpoint that provides a download of the c# api client file for a given swagger document.\n"
  example: []
  syntax:
    content: public static IEndpointRouteBuilder MapCSharpClientEndpoint(this IEndpointRouteBuilder builder, string route, string documentName, Action<CSharpClientGeneratorSettings>? settings = null)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
    - id: route
      type: System.String
      description: the route to register
    - id: documentName
      type: System.String
      description: the name of the document to generate the client for
    - id: settings
      type: System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}}
      description: c# client generator settings
    return:
      type: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapCSharpClientEndpoint(builder As IEndpointRouteBuilder, route As String, documentName As String, settings As Action(Of CSharpClientGeneratorSettings)? = Nothing) As IEndpointRouteBuilder
  overload: FastEndpoints.ClientGen.Extensions.MapCSharpClientEndpoint*
  nameWithType.vb: Extensions.MapCSharpClientEndpoint(IEndpointRouteBuilder, String, String, Nullable(Of Action(Of CSharpClientGeneratorSettings)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.ClientGen.Extensions.MapCSharpClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder, System.String, System.String, System.Nullable(Of Action(Of NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings)))
  name.vb: MapCSharpClientEndpoint(IEndpointRouteBuilder, String, String, Nullable(Of Action(Of CSharpClientGeneratorSettings)))
- uid: FastEndpoints.ClientGen.Extensions.GenerateTypeScriptClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings,Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings},System.String,NSwag.CodeGeneration.ClientGeneratorOutputType)
  commentId: M:FastEndpoints.ClientGen.Extensions.GenerateTypeScriptClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings,Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings},System.String,NSwag.CodeGeneration.ClientGeneratorOutputType)
  id: GenerateTypeScriptClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings,Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings},System.String,NSwag.CodeGeneration.ClientGeneratorOutputType)
  isExtensionMethod: true
  parent: FastEndpoints.ClientGen.Extensions
  langs:
  - csharp
  - vb
  name: GenerateTypeScriptClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action<TypeScriptClientGeneratorSettings>, String, ClientGeneratorOutputType)
  nameWithType: Extensions.GenerateTypeScriptClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action<TypeScriptClientGeneratorSettings>, String, ClientGeneratorOutputType)
  fullName: FastEndpoints.ClientGen.Extensions.GenerateTypeScriptClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings, Action<NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings>, System.String, NSwag.CodeGeneration.ClientGeneratorOutputType)
  type: Method
  source:
    id: GenerateTypeScriptClient
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\ClientGen\Extensions.cs
    startLine: 60
  assemblies:
  - FastEndpoints.ClientGen
  namespace: FastEndpoints.ClientGen
  summary: "\ngenerates a typescript api client and saves it to disk at the specified location.\n"
  example: []
  syntax:
    content: public static void GenerateTypeScriptClient(this AspNetCoreOpenApiDocumentGeneratorSettings gen, Action<TypeScriptClientGeneratorSettings> settings, string destination, ClientGeneratorOutputType outputType = ClientGeneratorOutputType.Full)
    parameters:
    - id: gen
      type: NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings
    - id: settings
      type: Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}
      description: client generator settings
    - id: destination
      type: System.String
      description: the output file path including file name
    - id: outputType
      type: NSwag.CodeGeneration.ClientGeneratorOutputType
      description: the type of the generated client file
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub GenerateTypeScriptClient(gen As AspNetCoreOpenApiDocumentGeneratorSettings, settings As Action(Of TypeScriptClientGeneratorSettings), destination As String, outputType As ClientGeneratorOutputType = ClientGeneratorOutputType.Full)
  overload: FastEndpoints.ClientGen.Extensions.GenerateTypeScriptClient*
  nameWithType.vb: Extensions.GenerateTypeScriptClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action(Of TypeScriptClientGeneratorSettings), String, ClientGeneratorOutputType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.ClientGen.Extensions.GenerateTypeScriptClient(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings, Action(Of NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings), System.String, NSwag.CodeGeneration.ClientGeneratorOutputType)
  name.vb: GenerateTypeScriptClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action(Of TypeScriptClientGeneratorSettings), String, ClientGeneratorOutputType)
- uid: FastEndpoints.ClientGen.Extensions.MapTypeScriptClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}})
  commentId: M:FastEndpoints.ClientGen.Extensions.MapTypeScriptClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}})
  id: MapTypeScriptClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}})
  isExtensionMethod: true
  parent: FastEndpoints.ClientGen.Extensions
  langs:
  - csharp
  - vb
  name: MapTypeScriptClientEndpoint(IEndpointRouteBuilder, String, String, Nullable<Action<TypeScriptClientGeneratorSettings>>)
  nameWithType: Extensions.MapTypeScriptClientEndpoint(IEndpointRouteBuilder, String, String, Nullable<Action<TypeScriptClientGeneratorSettings>>)
  fullName: FastEndpoints.ClientGen.Extensions.MapTypeScriptClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder, System.String, System.String, System.Nullable<Action<NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings>>)
  type: Method
  source:
    id: MapTypeScriptClientEndpoint
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\ClientGen\Extensions.cs
    startLine: 69
  assemblies:
  - FastEndpoints.ClientGen
  namespace: FastEndpoints.ClientGen
  summary: "\nregisters an endpoint that provides a download of the typescript api client file for a given swagger document.\n"
  example: []
  syntax:
    content: public static IEndpointRouteBuilder MapTypeScriptClientEndpoint(this IEndpointRouteBuilder builder, string route, string documentName, Action<TypeScriptClientGeneratorSettings>? settings = null)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
    - id: route
      type: System.String
      description: the route to register
    - id: documentName
      type: System.String
      description: the name of the document to generate the client for
    - id: settings
      type: System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}}
      description: typescript client generator settings
    return:
      type: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapTypeScriptClientEndpoint(builder As IEndpointRouteBuilder, route As String, documentName As String, settings As Action(Of TypeScriptClientGeneratorSettings)? = Nothing) As IEndpointRouteBuilder
  overload: FastEndpoints.ClientGen.Extensions.MapTypeScriptClientEndpoint*
  nameWithType.vb: Extensions.MapTypeScriptClientEndpoint(IEndpointRouteBuilder, String, String, Nullable(Of Action(Of TypeScriptClientGeneratorSettings)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.ClientGen.Extensions.MapTypeScriptClientEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder, System.String, System.String, System.Nullable(Of Action(Of NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings)))
  name.vb: MapTypeScriptClientEndpoint(IEndpointRouteBuilder, String, String, Nullable(Of Action(Of TypeScriptClientGeneratorSettings)))
- uid: FastEndpoints.ClientGen.Extensions.GenerateClientsAndExitAsync(Microsoft.AspNetCore.Builder.WebApplication,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}},System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}})
  commentId: M:FastEndpoints.ClientGen.Extensions.GenerateClientsAndExitAsync(Microsoft.AspNetCore.Builder.WebApplication,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}},System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}})
  id: GenerateClientsAndExitAsync(Microsoft.AspNetCore.Builder.WebApplication,System.String,System.String,System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}},System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}})
  isExtensionMethod: true
  parent: FastEndpoints.ClientGen.Extensions
  langs:
  - csharp
  - vb
  name: GenerateClientsAndExitAsync(WebApplication, String, String, Nullable<Action<CSharpClientGeneratorSettings>>, Nullable<Action<TypeScriptClientGeneratorSettings>>)
  nameWithType: Extensions.GenerateClientsAndExitAsync(WebApplication, String, String, Nullable<Action<CSharpClientGeneratorSettings>>, Nullable<Action<TypeScriptClientGeneratorSettings>>)
  fullName: FastEndpoints.ClientGen.Extensions.GenerateClientsAndExitAsync(Microsoft.AspNetCore.Builder.WebApplication, System.String, System.String, System.Nullable<Action<NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings>>, System.Nullable<Action<NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings>>)
  type: Method
  source:
    id: GenerateClientsAndExitAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\ClientGen\Extensions.cs
    startLine: 101
  assemblies:
  - FastEndpoints.ClientGen
  namespace: FastEndpoints.ClientGen
  summary: "\ngenerates c# and/or typescript clients and saves them to disk if the application is run with the commandline argument <code>--generateclients true</code>\nand exits the program with a zero exit code.\n<p>HINT: make sure to place the call straight after <code>app.UseFastEndpoints()</code></p>\n"
  example: []
  syntax:
    content: public static async Task GenerateClientsAndExitAsync(this WebApplication app, string documentName, string destinationPath, Action<CSharpClientGeneratorSettings>? csSettings, Action<TypeScriptClientGeneratorSettings>? tsSettings)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.WebApplication
    - id: documentName
      type: System.String
      description: the name of the swagger document to generate the clients for
    - id: destinationPath
      type: System.String
      description: the folder path (without file name) where the client files will be save to
    - id: csSettings
      type: System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}}
      description: client generator settings for c#
    - id: tsSettings
      type: System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}}
      description: client generator settings for typescript
    return:
      type: Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GenerateClientsAndExitAsync(app As WebApplication, documentName As String, destinationPath As String, csSettings As Action(Of CSharpClientGeneratorSettings)?, tsSettings As Action(Of TypeScriptClientGeneratorSettings)?) As Task
  overload: FastEndpoints.ClientGen.Extensions.GenerateClientsAndExitAsync*
  nameWithType.vb: Extensions.GenerateClientsAndExitAsync(WebApplication, String, String, Nullable(Of Action(Of CSharpClientGeneratorSettings)), Nullable(Of Action(Of TypeScriptClientGeneratorSettings)))
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.ClientGen.Extensions.GenerateClientsAndExitAsync(Microsoft.AspNetCore.Builder.WebApplication, System.String, System.String, System.Nullable(Of Action(Of NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings)), System.Nullable(Of Action(Of NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings)))
  name.vb: GenerateClientsAndExitAsync(WebApplication, String, String, Nullable(Of Action(Of CSharpClientGeneratorSettings)), Nullable(Of Action(Of TypeScriptClientGeneratorSettings)))
references:
- uid: FastEndpoints.ClientGen
  commentId: N:FastEndpoints.ClientGen
  name: FastEndpoints.ClientGen
  nameWithType: FastEndpoints.ClientGen
  fullName: FastEndpoints.ClientGen
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.ClientGen.Extensions.GenerateCSharpClient*
  commentId: Overload:FastEndpoints.ClientGen.Extensions.GenerateCSharpClient
  name: GenerateCSharpClient
  nameWithType: Extensions.GenerateCSharpClient
  fullName: FastEndpoints.ClientGen.Extensions.GenerateCSharpClient
- uid: NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings
  commentId: T:NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings
  parent: NSwag.Generation.AspNetCore
  isExternal: true
  name: AspNetCoreOpenApiDocumentGeneratorSettings
  nameWithType: AspNetCoreOpenApiDocumentGeneratorSettings
  fullName: NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings
- uid: Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}
  commentId: '!:Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}'
  definition: Action`1
  name: Action<CSharpClientGeneratorSettings>
  nameWithType: Action<CSharpClientGeneratorSettings>
  fullName: Action<NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings>
  nameWithType.vb: Action(Of CSharpClientGeneratorSettings)
  fullName.vb: Action(Of NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings)
  name.vb: Action(Of CSharpClientGeneratorSettings)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings
    name: CSharpClientGeneratorSettings
    nameWithType: CSharpClientGeneratorSettings
    fullName: NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings
    name: CSharpClientGeneratorSettings
    nameWithType: CSharpClientGeneratorSettings
    fullName: NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NSwag.CodeGeneration.ClientGeneratorOutputType
  commentId: T:NSwag.CodeGeneration.ClientGeneratorOutputType
  parent: NSwag.CodeGeneration
  isExternal: true
  name: ClientGeneratorOutputType
  nameWithType: ClientGeneratorOutputType
  fullName: NSwag.CodeGeneration.ClientGeneratorOutputType
- uid: NSwag.Generation.AspNetCore
  commentId: N:NSwag.Generation.AspNetCore
  isExternal: true
  name: NSwag.Generation.AspNetCore
  nameWithType: NSwag.Generation.AspNetCore
  fullName: NSwag.Generation.AspNetCore
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NSwag.CodeGeneration
  commentId: N:NSwag.CodeGeneration
  isExternal: true
  name: NSwag.CodeGeneration
  nameWithType: NSwag.CodeGeneration
  fullName: NSwag.CodeGeneration
- uid: FastEndpoints.ClientGen.Extensions.MapCSharpClientEndpoint*
  commentId: Overload:FastEndpoints.ClientGen.Extensions.MapCSharpClientEndpoint
  name: MapCSharpClientEndpoint
  nameWithType: Extensions.MapCSharpClientEndpoint
  fullName: FastEndpoints.ClientGen.Extensions.MapCSharpClientEndpoint
- uid: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
  commentId: T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
  parent: Microsoft.AspNetCore.Routing
  isExternal: true
  name: IEndpointRouteBuilder
  nameWithType: IEndpointRouteBuilder
  fullName: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
- uid: System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}}
  commentId: T:System.Nullable{Action{NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings}}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Action<CSharpClientGeneratorSettings>>
  nameWithType: Nullable<Action<CSharpClientGeneratorSettings>>
  fullName: System.Nullable<Action<NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings>>
  nameWithType.vb: Nullable(Of Action(Of CSharpClientGeneratorSettings))
  fullName.vb: System.Nullable(Of Action(Of NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings))
  name.vb: Nullable(Of Action(Of CSharpClientGeneratorSettings))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings
    name: CSharpClientGeneratorSettings
    nameWithType: CSharpClientGeneratorSettings
    fullName: NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings
    name: CSharpClientGeneratorSettings
    nameWithType: CSharpClientGeneratorSettings
    fullName: NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: true
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ClientGen.Extensions.GenerateTypeScriptClient*
  commentId: Overload:FastEndpoints.ClientGen.Extensions.GenerateTypeScriptClient
  name: GenerateTypeScriptClient
  nameWithType: Extensions.GenerateTypeScriptClient
  fullName: FastEndpoints.ClientGen.Extensions.GenerateTypeScriptClient
- uid: Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}
  commentId: '!:Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}'
  definition: Action`1
  name: Action<TypeScriptClientGeneratorSettings>
  nameWithType: Action<TypeScriptClientGeneratorSettings>
  fullName: Action<NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings>
  nameWithType.vb: Action(Of TypeScriptClientGeneratorSettings)
  fullName.vb: Action(Of NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings)
  name.vb: Action(Of TypeScriptClientGeneratorSettings)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings
    name: TypeScriptClientGeneratorSettings
    nameWithType: TypeScriptClientGeneratorSettings
    fullName: NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings
    name: TypeScriptClientGeneratorSettings
    nameWithType: TypeScriptClientGeneratorSettings
    fullName: NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ClientGen.Extensions.MapTypeScriptClientEndpoint*
  commentId: Overload:FastEndpoints.ClientGen.Extensions.MapTypeScriptClientEndpoint
  name: MapTypeScriptClientEndpoint
  nameWithType: Extensions.MapTypeScriptClientEndpoint
  fullName: FastEndpoints.ClientGen.Extensions.MapTypeScriptClientEndpoint
- uid: System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}}
  commentId: T:System.Nullable{Action{NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings}}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Action<TypeScriptClientGeneratorSettings>>
  nameWithType: Nullable<Action<TypeScriptClientGeneratorSettings>>
  fullName: System.Nullable<Action<NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings>>
  nameWithType.vb: Nullable(Of Action(Of TypeScriptClientGeneratorSettings))
  fullName.vb: System.Nullable(Of Action(Of NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings))
  name.vb: Nullable(Of Action(Of TypeScriptClientGeneratorSettings))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings
    name: TypeScriptClientGeneratorSettings
    nameWithType: TypeScriptClientGeneratorSettings
    fullName: NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings
    name: TypeScriptClientGeneratorSettings
    nameWithType: TypeScriptClientGeneratorSettings
    fullName: NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ClientGen.Extensions.GenerateClientsAndExitAsync*
  commentId: Overload:FastEndpoints.ClientGen.Extensions.GenerateClientsAndExitAsync
  name: GenerateClientsAndExitAsync
  nameWithType: Extensions.GenerateClientsAndExitAsync
  fullName: FastEndpoints.ClientGen.Extensions.GenerateClientsAndExitAsync
- uid: Microsoft.AspNetCore.Builder.WebApplication
  commentId: T:Microsoft.AspNetCore.Builder.WebApplication
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: WebApplication
  nameWithType: WebApplication
  fullName: Microsoft.AspNetCore.Builder.WebApplication
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: true
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
