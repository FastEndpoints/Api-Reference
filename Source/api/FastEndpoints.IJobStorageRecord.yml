### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IJobStorageRecord
  commentId: T:FastEndpoints.IJobStorageRecord
  id: IJobStorageRecord
  parent: FastEndpoints
  children:
  - FastEndpoints.IJobStorageRecord.Command
  - FastEndpoints.IJobStorageRecord.ExecuteAfter
  - FastEndpoints.IJobStorageRecord.ExpireOn
  - FastEndpoints.IJobStorageRecord.IsComplete
  - FastEndpoints.IJobStorageRecord.QueueID
  langs:
  - csharp
  - vb
  name: IJobStorageRecord
  nameWithType: IJobStorageRecord
  fullName: FastEndpoints.IJobStorageRecord
  type: Interface
  source:
    id: IJobStorageRecord
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\IJobStorageRecord.cs
    startLine: 2
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public interface IJobStorageRecord
    content.vb: Public Interface IJobStorageRecord
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: FastEndpoints.IJobStorageRecord.QueueID
  commentId: P:FastEndpoints.IJobStorageRecord.QueueID
  id: QueueID
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: QueueID
  nameWithType: IJobStorageRecord.QueueID
  fullName: FastEndpoints.IJobStorageRecord.QueueID
  type: Property
  source:
    id: QueueID
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\IJobStorageRecord.cs
    startLine: 7
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\na unique id for the job queue. each command type has it&apos;s own queue.\n"
  example: []
  syntax:
    content: string QueueID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property QueueID As String
  overload: FastEndpoints.IJobStorageRecord.QueueID*
  modifiers.csharp:
  - get
  - set
- uid: FastEndpoints.IJobStorageRecord.Command
  commentId: P:FastEndpoints.IJobStorageRecord.Command
  id: Command
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: IJobStorageRecord.Command
  fullName: FastEndpoints.IJobStorageRecord.Command
  type: Property
  source:
    id: Command
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\IJobStorageRecord.cs
    startLine: 13
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe actual command object that will be embedded in the storage record.\nif your database doesn&apos;t support embedding objects, you may have to serialize the object and store it in this property.\n"
  example: []
  syntax:
    content: object Command { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Property Command As Object
  overload: FastEndpoints.IJobStorageRecord.Command*
  modifiers.csharp:
  - get
  - set
- uid: FastEndpoints.IJobStorageRecord.ExecuteAfter
  commentId: P:FastEndpoints.IJobStorageRecord.ExecuteAfter
  id: ExecuteAfter
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: ExecuteAfter
  nameWithType: IJobStorageRecord.ExecuteAfter
  fullName: FastEndpoints.IJobStorageRecord.ExecuteAfter
  type: Property
  source:
    id: ExecuteAfter
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\IJobStorageRecord.cs
    startLine: 19
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe job will not be executed before this date/time. by default it will automatically be set to the time of creation allowing jobs to be\nexecuted as soon as they&apos;re created.\n"
  example: []
  syntax:
    content: DateTime ExecuteAfter { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Property ExecuteAfter As Date
  overload: FastEndpoints.IJobStorageRecord.ExecuteAfter*
  modifiers.csharp:
  - get
  - set
- uid: FastEndpoints.IJobStorageRecord.ExpireOn
  commentId: P:FastEndpoints.IJobStorageRecord.ExpireOn
  id: ExpireOn
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: ExpireOn
  nameWithType: IJobStorageRecord.ExpireOn
  fullName: FastEndpoints.IJobStorageRecord.ExpireOn
  type: Property
  source:
    id: ExpireOn
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\IJobStorageRecord.cs
    startLine: 24
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe expiration date/time of job. if the job remains in an incomplete state past this time, the record is considered stale.\n"
  example: []
  syntax:
    content: DateTime ExpireOn { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Property ExpireOn As Date
  overload: FastEndpoints.IJobStorageRecord.ExpireOn*
  modifiers.csharp:
  - get
  - set
- uid: FastEndpoints.IJobStorageRecord.IsComplete
  commentId: P:FastEndpoints.IJobStorageRecord.IsComplete
  id: IsComplete
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: IsComplete
  nameWithType: IJobStorageRecord.IsComplete
  fullName: FastEndpoints.IJobStorageRecord.IsComplete
  type: Property
  source:
    id: IsComplete
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\IJobStorageRecord.cs
    startLine: 29
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nindicates whether the job has successfully completed or not.\n"
  example: []
  syntax:
    content: bool IsComplete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsComplete As Boolean
  overload: FastEndpoints.IJobStorageRecord.IsComplete*
  modifiers.csharp:
  - get
  - set
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IJobStorageRecord.QueueID*
  commentId: Overload:FastEndpoints.IJobStorageRecord.QueueID
  name: QueueID
  nameWithType: IJobStorageRecord.QueueID
  fullName: FastEndpoints.IJobStorageRecord.QueueID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.IJobStorageRecord.Command*
  commentId: Overload:FastEndpoints.IJobStorageRecord.Command
  name: Command
  nameWithType: IJobStorageRecord.Command
  fullName: FastEndpoints.IJobStorageRecord.Command
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.IJobStorageRecord.ExecuteAfter*
  commentId: Overload:FastEndpoints.IJobStorageRecord.ExecuteAfter
  name: ExecuteAfter
  nameWithType: IJobStorageRecord.ExecuteAfter
  fullName: FastEndpoints.IJobStorageRecord.ExecuteAfter
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: FastEndpoints.IJobStorageRecord.ExpireOn*
  commentId: Overload:FastEndpoints.IJobStorageRecord.ExpireOn
  name: ExpireOn
  nameWithType: IJobStorageRecord.ExpireOn
  fullName: FastEndpoints.IJobStorageRecord.ExpireOn
- uid: FastEndpoints.IJobStorageRecord.IsComplete*
  commentId: Overload:FastEndpoints.IJobStorageRecord.IsComplete
  name: IsComplete
  nameWithType: IJobStorageRecord.IsComplete
  fullName: FastEndpoints.IJobStorageRecord.IsComplete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
