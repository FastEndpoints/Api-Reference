### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IResponseMapper`2
  commentId: T:FastEndpoints.IResponseMapper`2
  id: IResponseMapper`2
  parent: FastEndpoints
  children:
  - FastEndpoints.IResponseMapper`2.FromEntity(`1)
  - FastEndpoints.IResponseMapper`2.FromEntityAsync(`1,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IResponseMapper<TResponse, TEntity>
  nameWithType: IResponseMapper<TResponse, TEntity>
  fullName: FastEndpoints.IResponseMapper<TResponse, TEntity>
  type: Interface
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    use this interface to implement a domain entity mapper for your endpoints that only has a response dto and no request dto.

    <p>HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers.</p>
  example: []
  syntax:
    content: 'public interface IResponseMapper<TResponse, in TEntity> : IResponseMapper, IMapper'
    typeParameters:
    - id: TResponse
      description: the type of response dto
    - id: TEntity
      description: the type of domain entity to map to/from
    content.vb: Public Interface IResponseMapper(Of TResponse, In TEntity) Inherits IResponseMapper, IMapper
  nameWithType.vb: IResponseMapper(Of TResponse, TEntity)
  fullName.vb: FastEndpoints.IResponseMapper(Of TResponse, TEntity)
  name.vb: IResponseMapper(Of TResponse, TEntity)
- uid: FastEndpoints.IResponseMapper`2.FromEntity(`1)
  commentId: M:FastEndpoints.IResponseMapper`2.FromEntity(`1)
  id: FromEntity(`1)
  parent: FastEndpoints.IResponseMapper`2
  langs:
  - csharp
  - vb
  name: FromEntity(TEntity)
  nameWithType: IResponseMapper<TResponse, TEntity>.FromEntity(TEntity)
  fullName: FastEndpoints.IResponseMapper<TResponse, TEntity>.FromEntity(TEntity)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping a domain entity to a response dto
  example: []
  syntax:
    content: TResponse FromEntity(TEntity e)
    parameters:
    - id: e
      type: '{TEntity}'
      description: the domain entity to map from
    return:
      type: '{TResponse}'
    content.vb: Function FromEntity(e As TEntity) As TResponse
  overload: FastEndpoints.IResponseMapper`2.FromEntity*
  nameWithType.vb: IResponseMapper(Of TResponse, TEntity).FromEntity(TEntity)
  fullName.vb: FastEndpoints.IResponseMapper(Of TResponse, TEntity).FromEntity(TEntity)
- uid: FastEndpoints.IResponseMapper`2.FromEntityAsync(`1,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IResponseMapper`2.FromEntityAsync(`1,System.Threading.CancellationToken)
  id: FromEntityAsync(`1,System.Threading.CancellationToken)
  parent: FastEndpoints.IResponseMapper`2
  langs:
  - csharp
  - vb
  name: FromEntityAsync(TEntity, CancellationToken)
  nameWithType: IResponseMapper<TResponse, TEntity>.FromEntityAsync(TEntity, CancellationToken)
  fullName: FastEndpoints.IResponseMapper<TResponse, TEntity>.FromEntityAsync(TEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping a domain entity to a response dto
  example: []
  syntax:
    content: Task<TResponse> FromEntityAsync(TEntity e, CancellationToken ct)
    parameters:
    - id: e
      type: '{TEntity}'
      description: the domain entity to map from
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Function FromEntityAsync(e As TEntity, ct As CancellationToken) As Task(Of TResponse)
  overload: FastEndpoints.IResponseMapper`2.FromEntityAsync*
  nameWithType.vb: IResponseMapper(Of TResponse, TEntity).FromEntityAsync(TEntity, CancellationToken)
  fullName.vb: FastEndpoints.IResponseMapper(Of TResponse, TEntity).FromEntityAsync(TEntity, System.Threading.CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IResponseMapper`2.FromEntity*
  commentId: Overload:FastEndpoints.IResponseMapper`2.FromEntity
  href: FastEndpoints.IResponseMapper-2.html#FastEndpoints_IResponseMapper_2_FromEntity__1_
  name: FromEntity
  nameWithType: IResponseMapper<TResponse, TEntity>.FromEntity
  fullName: FastEndpoints.IResponseMapper<TResponse, TEntity>.FromEntity
  nameWithType.vb: IResponseMapper(Of TResponse, TEntity).FromEntity
  fullName.vb: FastEndpoints.IResponseMapper(Of TResponse, TEntity).FromEntity
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: FastEndpoints.IResponseMapper`2.FromEntityAsync*
  commentId: Overload:FastEndpoints.IResponseMapper`2.FromEntityAsync
  href: FastEndpoints.IResponseMapper-2.html#FastEndpoints_IResponseMapper_2_FromEntityAsync__1_System_Threading_CancellationToken_
  name: FromEntityAsync
  nameWithType: IResponseMapper<TResponse, TEntity>.FromEntityAsync
  fullName: FastEndpoints.IResponseMapper<TResponse, TEntity>.FromEntityAsync
  nameWithType.vb: IResponseMapper(Of TResponse, TEntity).FromEntityAsync
  fullName.vb: FastEndpoints.IResponseMapper(Of TResponse, TEntity).FromEntityAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
