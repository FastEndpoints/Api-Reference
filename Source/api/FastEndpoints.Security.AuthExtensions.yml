### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Security.AuthExtensions
  commentId: T:FastEndpoints.Security.AuthExtensions
  id: AuthExtensions
  parent: FastEndpoints.Security
  children:
  - FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters})
  - FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String,System.String,FastEndpoints.Security.JWTBearer.TokenSigningStyle,System.Nullable{Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}})
  - FastEndpoints.Security.AuthExtensions.ClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  - FastEndpoints.Security.AuthExtensions.HasClaimType(System.Security.Claims.ClaimsPrincipal,System.String)
  - FastEndpoints.Security.AuthExtensions.HasPermission(System.Security.Claims.ClaimsPrincipal,System.String)
  langs:
  - csharp
  - vb
  name: AuthExtensions
  nameWithType: AuthExtensions
  fullName: FastEndpoints.Security.AuthExtensions
  type: Class
  source:
    id: AuthExtensions
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 13
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\na set of auth related extensions\n"
  example: []
  syntax:
    content: public static class AuthExtensions
    content.vb: Public Module AuthExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String,System.String,FastEndpoints.Security.JWTBearer.TokenSigningStyle,System.Nullable{Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}})
  commentId: M:FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String,System.String,FastEndpoints.Security.JWTBearer.TokenSigningStyle,System.Nullable{Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}})
  id: AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String,System.String,FastEndpoints.Security.JWTBearer.TokenSigningStyle,System.Nullable{Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}})
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: AddAuthenticationJWTBearer(IServiceCollection, String, String, String, JWTBearer.TokenSigningStyle, Nullable<Action<TokenValidationParameters>>)
  nameWithType: AuthExtensions.AddAuthenticationJWTBearer(IServiceCollection, String, String, String, JWTBearer.TokenSigningStyle, Nullable<Action<TokenValidationParameters>>)
  fullName: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.String, System.String, FastEndpoints.Security.JWTBearer.TokenSigningStyle, System.Nullable<Action<Microsoft.IdentityModel.Tokens.TokenValidationParameters>>)
  type: Method
  source:
    id: AddAuthenticationJWTBearer
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 23
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nconfigure and enable jwt bearer authentication\n"
  example: []
  syntax:
    content: public static IServiceCollection AddAuthenticationJWTBearer(this IServiceCollection services, string tokenSigningKey, string issuer = null, string audience = null, JWTBearer.TokenSigningStyle tokenSigningStyle = JWTBearer.TokenSigningStyle.Symmetric, Action<TokenValidationParameters>? tokenValidationConfiguration = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: tokenSigningKey
      type: System.String
      description: the secret key to use for verifying the jwt tokens
    - id: issuer
      type: System.String
      description: validates issuer if set
    - id: audience
      type: System.String
      description: validates audience if set
    - id: tokenSigningStyle
      type: FastEndpoints.Security.JWTBearer.TokenSigningStyle
      description: specify the token signing style
    - id: tokenValidationConfiguration
      type: System.Nullable{Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}}
      description: configuration action to specify additional token validation parameters
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAuthenticationJWTBearer(services As IServiceCollection, tokenSigningKey As String, issuer As String = Nothing, audience As String = Nothing, tokenSigningStyle As JWTBearer.TokenSigningStyle = JWTBearer.TokenSigningStyle.Symmetric, tokenValidationConfiguration As Action(Of TokenValidationParameters)? = Nothing) As IServiceCollection
  overload: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer*
  nameWithType.vb: AuthExtensions.AddAuthenticationJWTBearer(IServiceCollection, String, String, String, JWTBearer.TokenSigningStyle, Nullable(Of Action(Of TokenValidationParameters)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.String, System.String, FastEndpoints.Security.JWTBearer.TokenSigningStyle, System.Nullable(Of Action(Of Microsoft.IdentityModel.Tokens.TokenValidationParameters)))
  name.vb: AddAuthenticationJWTBearer(IServiceCollection, String, String, String, JWTBearer.TokenSigningStyle, Nullable(Of Action(Of TokenValidationParameters)))
- uid: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters})
  commentId: M:FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters})
  id: AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters})
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: AddAuthenticationJWTBearer(IServiceCollection, String, Action<TokenValidationParameters>)
  nameWithType: AuthExtensions.AddAuthenticationJWTBearer(IServiceCollection, String, Action<TokenValidationParameters>)
  fullName: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, Action<Microsoft.IdentityModel.Tokens.TokenValidationParameters>)
  type: Method
  source:
    id: AddAuthenticationJWTBearer
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 69
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nconfigure and enable jwt bearer authentication\n"
  example: []
  syntax:
    content: public static IServiceCollection AddAuthenticationJWTBearer(this IServiceCollection services, string tokenSigningKey, Action<TokenValidationParameters> tokenValidationConfiguration)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: tokenSigningKey
      type: System.String
      description: the secret key to use for verifying the jwt tokens
    - id: tokenValidationConfiguration
      type: Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}
      description: configuration action to specify additional token validation parameters
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAuthenticationJWTBearer(services As IServiceCollection, tokenSigningKey As String, tokenValidationConfiguration As Action(Of TokenValidationParameters)) As IServiceCollection
  overload: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer*
  nameWithType.vb: AuthExtensions.AddAuthenticationJWTBearer(IServiceCollection, String, Action(Of TokenValidationParameters))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, Action(Of Microsoft.IdentityModel.Tokens.TokenValidationParameters))
  name.vb: AddAuthenticationJWTBearer(IServiceCollection, String, Action(Of TokenValidationParameters))
- uid: FastEndpoints.Security.AuthExtensions.HasPermission(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:FastEndpoints.Security.AuthExtensions.HasPermission(System.Security.Claims.ClaimsPrincipal,System.String)
  id: HasPermission(System.Security.Claims.ClaimsPrincipal,System.String)
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: HasPermission(ClaimsPrincipal, String)
  nameWithType: AuthExtensions.HasPermission(ClaimsPrincipal, String)
  fullName: FastEndpoints.Security.AuthExtensions.HasPermission(System.Security.Claims.ClaimsPrincipal, System.String)
  type: Method
  source:
    id: HasPermission
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 86
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nreturns true of the current user principal has a given permission code.\n"
  example: []
  syntax:
    content: public static bool HasPermission(this ClaimsPrincipal principal, string permissionCode)
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
    - id: permissionCode
      type: System.String
      description: the permission code to check for
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasPermission(principal As ClaimsPrincipal, permissionCode As String) As Boolean
  overload: FastEndpoints.Security.AuthExtensions.HasPermission*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FastEndpoints.Security.AuthExtensions.HasClaimType(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:FastEndpoints.Security.AuthExtensions.HasClaimType(System.Security.Claims.ClaimsPrincipal,System.String)
  id: HasClaimType(System.Security.Claims.ClaimsPrincipal,System.String)
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: HasClaimType(ClaimsPrincipal, String)
  nameWithType: AuthExtensions.HasClaimType(ClaimsPrincipal, String)
  fullName: FastEndpoints.Security.AuthExtensions.HasClaimType(System.Security.Claims.ClaimsPrincipal, System.String)
  type: Method
  source:
    id: HasClaimType
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 93
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\ndetermines if the current user principal has the given claim type\n"
  example: []
  syntax:
    content: public static bool HasClaimType(this ClaimsPrincipal principal, string claimType)
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
    - id: claimType
      type: System.String
      description: the claim type to check for
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasClaimType(principal As ClaimsPrincipal, claimType As String) As Boolean
  overload: FastEndpoints.Security.AuthExtensions.HasClaimType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FastEndpoints.Security.AuthExtensions.ClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:FastEndpoints.Security.AuthExtensions.ClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  id: ClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: ClaimValue(ClaimsPrincipal, String)
  nameWithType: AuthExtensions.ClaimValue(ClaimsPrincipal, String)
  fullName: FastEndpoints.Security.AuthExtensions.ClaimValue(System.Security.Claims.ClaimsPrincipal, System.String)
  type: Method
  source:
    id: ClaimValue
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 100
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nget the claim value for a given claim type of the current user principal. if the user doesn&apos;t have the requested claim type, a null will be returned.\n"
  example: []
  syntax:
    content: public static string ClaimValue(this ClaimsPrincipal principal, string claimType)
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
    - id: claimType
      type: System.String
      description: the claim type to look for
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ClaimValue(principal As ClaimsPrincipal, claimType As String) As String
  overload: FastEndpoints.Security.AuthExtensions.ClaimValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: FastEndpoints.Security
  commentId: N:FastEndpoints.Security
  name: FastEndpoints.Security
  nameWithType: FastEndpoints.Security
  fullName: FastEndpoints.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer
  name: AddAuthenticationJWTBearer
  nameWithType: AuthExtensions.AddAuthenticationJWTBearer
  fullName: FastEndpoints.Security.AuthExtensions.AddAuthenticationJWTBearer
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FastEndpoints.Security.JWTBearer.TokenSigningStyle
  commentId: T:FastEndpoints.Security.JWTBearer.TokenSigningStyle
  parent: FastEndpoints.Security
  name: JWTBearer.TokenSigningStyle
  nameWithType: JWTBearer.TokenSigningStyle
  fullName: FastEndpoints.Security.JWTBearer.TokenSigningStyle
- uid: System.Nullable{Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}}
  commentId: T:System.Nullable{Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Action<TokenValidationParameters>>
  nameWithType: Nullable<Action<TokenValidationParameters>>
  fullName: System.Nullable<Action<Microsoft.IdentityModel.Tokens.TokenValidationParameters>>
  nameWithType.vb: Nullable(Of Action(Of TokenValidationParameters))
  fullName.vb: System.Nullable(Of Action(Of Microsoft.IdentityModel.Tokens.TokenValidationParameters))
  name.vb: Nullable(Of Action(Of TokenValidationParameters))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    name: TokenValidationParameters
    nameWithType: TokenValidationParameters
    fullName: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    name: TokenValidationParameters
    nameWithType: TokenValidationParameters
    fullName: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}
  commentId: '!:Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}'
  definition: Action`1
  name: Action<TokenValidationParameters>
  nameWithType: Action<TokenValidationParameters>
  fullName: Action<Microsoft.IdentityModel.Tokens.TokenValidationParameters>
  nameWithType.vb: Action(Of TokenValidationParameters)
  fullName.vb: Action(Of Microsoft.IdentityModel.Tokens.TokenValidationParameters)
  name.vb: Action(Of TokenValidationParameters)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    name: TokenValidationParameters
    nameWithType: TokenValidationParameters
    fullName: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    name: TokenValidationParameters
    nameWithType: TokenValidationParameters
    fullName: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Security.AuthExtensions.HasPermission*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.HasPermission
  name: HasPermission
  nameWithType: AuthExtensions.HasPermission
  fullName: FastEndpoints.Security.AuthExtensions.HasPermission
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: true
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: FastEndpoints.Security.AuthExtensions.HasClaimType*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.HasClaimType
  name: HasClaimType
  nameWithType: AuthExtensions.HasClaimType
  fullName: FastEndpoints.Security.AuthExtensions.HasClaimType
- uid: FastEndpoints.Security.AuthExtensions.ClaimValue*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.ClaimValue
  name: ClaimValue
  nameWithType: AuthExtensions.ClaimValue
  fullName: FastEndpoints.Security.AuthExtensions.ClaimValue
