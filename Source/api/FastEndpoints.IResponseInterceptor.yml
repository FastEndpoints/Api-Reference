### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IResponseInterceptor
  commentId: T:FastEndpoints.IResponseInterceptor
  id: IResponseInterceptor
  parent: FastEndpoints
  children:
  - FastEndpoints.IResponseInterceptor.InterceptResponseAsync(System.Object,System.Int32,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IResponseInterceptor
  nameWithType: IResponseInterceptor
  fullName: FastEndpoints.IResponseInterceptor
  type: Interface
  source:
    id: IResponseInterceptor
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Processor\IResponseInterceptor.cs
    startLine: 8
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ninterface for defining a response interceptor to be executed before the main endpoint handler executes\n"
  example: []
  syntax:
    content: public interface IResponseInterceptor
    content.vb: Public Interface IResponseInterceptor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: FastEndpoints.IResponseInterceptor.InterceptResponseAsync(System.Object,System.Int32,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IResponseInterceptor.InterceptResponseAsync(System.Object,System.Int32,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  id: InterceptResponseAsync(System.Object,System.Int32,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  parent: FastEndpoints.IResponseInterceptor
  langs:
  - csharp
  - vb
  name: InterceptResponseAsync(Object, Int32, HttpContext, IReadOnlyCollection<ValidationFailure>, CancellationToken)
  nameWithType: IResponseInterceptor.InterceptResponseAsync(Object, Int32, HttpContext, IReadOnlyCollection<ValidationFailure>, CancellationToken)
  fullName: FastEndpoints.IResponseInterceptor.InterceptResponseAsync(System.Object, System.Int32, Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IReadOnlyCollection<FluentValidation.Results.ValidationFailure>, System.Threading.CancellationToken)
  type: Method
  source:
    id: InterceptResponseAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Processor\IResponseInterceptor.cs
    startLine: 18
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nimplement this method to intercept the http response with the use of SendInterceptedAsync() method.\n"
  example: []
  syntax:
    content: Task InterceptResponseAsync(object response, int statusCode, HttpContext ctx, IReadOnlyCollection<ValidationFailure> failures, CancellationToken ct)
    parameters:
    - id: response
      type: System.Object
      description: the response object
    - id: statusCode
      type: System.Int32
      description: ''
    - id: ctx
      type: Microsoft.AspNetCore.Http.HttpContext
      description: the http context of the current request
    - id: failures
      type: System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure}
      description: the collection of validation failures for the endpoint
    - id: ct
      type: System.Threading.CancellationToken
      description: cancellation token
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function InterceptResponseAsync(response As Object, statusCode As Integer, ctx As HttpContext, failures As IReadOnlyCollection(Of ValidationFailure), ct As CancellationToken) As Task
  overload: FastEndpoints.IResponseInterceptor.InterceptResponseAsync*
  nameWithType.vb: IResponseInterceptor.InterceptResponseAsync(Object, Int32, HttpContext, IReadOnlyCollection(Of ValidationFailure), CancellationToken)
  fullName.vb: FastEndpoints.IResponseInterceptor.InterceptResponseAsync(System.Object, System.Int32, Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IReadOnlyCollection(Of FluentValidation.Results.ValidationFailure), System.Threading.CancellationToken)
  name.vb: InterceptResponseAsync(Object, Int32, HttpContext, IReadOnlyCollection(Of ValidationFailure), CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IResponseInterceptor.InterceptResponseAsync*
  commentId: Overload:FastEndpoints.IResponseInterceptor.InterceptResponseAsync
  name: InterceptResponseAsync
  nameWithType: IResponseInterceptor.InterceptResponseAsync
  fullName: FastEndpoints.IResponseInterceptor.InterceptResponseAsync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<ValidationFailure>
  nameWithType: IReadOnlyCollection<ValidationFailure>
  fullName: System.Collections.Generic.IReadOnlyCollection<FluentValidation.Results.ValidationFailure>
  nameWithType.vb: IReadOnlyCollection(Of ValidationFailure)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of FluentValidation.Results.ValidationFailure)
  name.vb: IReadOnlyCollection(Of ValidationFailure)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
