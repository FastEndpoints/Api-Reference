### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IEventHubStorageProvider`1
  commentId: T:FastEndpoints.IEventHubStorageProvider`1
  id: IEventHubStorageProvider`1
  parent: FastEndpoints
  children:
  - FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
  - FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
  - FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
  - FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IEventHubStorageProvider<TStorageRecord>
  nameWithType: IEventHubStorageProvider<TStorageRecord>
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>
  type: Interface
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: interface for implementing a storage provider for event hub app (gRPC server)
  example: []
  syntax:
    content: 'public interface IEventHubStorageProvider<TStorageRecord> where TStorageRecord : IEventStorageRecord'
    typeParameters:
    - id: TStorageRecord
      description: the type of the storage record
    content.vb: Public Interface IEventHubStorageProvider(Of TStorageRecord As IEventStorageRecord)
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord)
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord)
  name.vb: IEventHubStorageProvider(Of TStorageRecord)
- uid: FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
  id: RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
  parent: FastEndpoints.IEventHubStorageProvider`1
  langs:
  - csharp
  - vb
  name: RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<TStorageRecord>)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<TStorageRecord>)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams<TStorageRecord>)
  type: Method
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: >-
    this method will only be called once (for each event type) on app startup. if there are any pending records on storage from a previous app run,

    simply return a collection of unique subscriber IDs.
  example: []
  syntax:
    content: ValueTask<IEnumerable<string>> RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<TStorageRecord> parameters)
    parameters:
    - id: parameters
      type: FastEndpoints.SubscriberIDRestorationParams{{TStorageRecord}}
      description: use these supplied search parameters to find relevant event records from your database
    return:
      type: System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{System.String}}
    content.vb: Function RestoreSubscriberIDsForEventTypeAsync(parameters As SubscriberIDRestorationParams(Of TStorageRecord)) As ValueTask(Of IEnumerable(Of String))
  overload: FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync*
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams(Of TStorageRecord))
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams(Of TStorageRecord))
  name.vb: RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams(Of TStorageRecord))
- uid: FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
  id: StoreEventAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.IEventHubStorageProvider`1
  langs:
  - csharp
  - vb
  name: StoreEventAsync(TStorageRecord, CancellationToken)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.StoreEventAsync(TStorageRecord, CancellationToken)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.StoreEventAsync(TStorageRecord, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: store the event storage record however you please. ideally on a nosql database.
  example: []
  syntax:
    content: ValueTask StoreEventAsync(TStorageRecord r, CancellationToken ct)
    parameters:
    - id: r
      type: '{TStorageRecord}'
      description: the event storage record which contains the actual event object as well as some metadata
    - id: ct
      type: System.Threading.CancellationToken
      description: cancellation token
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Function StoreEventAsync(r As TStorageRecord, ct As CancellationToken) As ValueTask
  overload: FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync*
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).StoreEventAsync(TStorageRecord, CancellationToken)
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).StoreEventAsync(TStorageRecord, System.Threading.CancellationToken)
- uid: FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
  id: GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
  parent: FastEndpoints.IEventHubStorageProvider`1
  langs:
  - csharp
  - vb
  name: GetNextBatchAsync(PendingRecordSearchParams<TStorageRecord>)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.GetNextBatchAsync(PendingRecordSearchParams<TStorageRecord>)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams<TStorageRecord>)
  type: Method
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: fetch the next batch of pending event storage records that need to be processed.
  example: []
  syntax:
    content: ValueTask<IEnumerable<TStorageRecord>> GetNextBatchAsync(PendingRecordSearchParams<TStorageRecord> parameters)
    parameters:
    - id: parameters
      type: FastEndpoints.PendingRecordSearchParams{{TStorageRecord}}
      description: use these supplied search parameters to find the next batch of event records from your database
    return:
      type: System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{{TStorageRecord}}}
    content.vb: Function GetNextBatchAsync(parameters As PendingRecordSearchParams(Of TStorageRecord)) As ValueTask(Of IEnumerable(Of TStorageRecord))
  overload: FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync*
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).GetNextBatchAsync(PendingRecordSearchParams(Of TStorageRecord))
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams(Of TStorageRecord))
  name.vb: GetNextBatchAsync(PendingRecordSearchParams(Of TStorageRecord))
- uid: FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
  id: MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.IEventHubStorageProvider`1
  langs:
  - csharp
  - vb
  name: MarkEventAsCompleteAsync(TStorageRecord, CancellationToken)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.MarkEventAsCompleteAsync(TStorageRecord, CancellationToken)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.MarkEventAsCompleteAsync(TStorageRecord, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: >-
    mark the event storage record as complete by either replacing the entity on storage with the supplied instance or

    simply update the <xref href="FastEndpoints.IEventStorageRecord.IsComplete" data-throw-if-not-resolved="false"></xref> field to true with a partial update operation.
  example: []
  syntax:
    content: ValueTask MarkEventAsCompleteAsync(TStorageRecord r, CancellationToken ct)
    parameters:
    - id: r
      type: '{TStorageRecord}'
      description: ''
    - id: ct
      type: System.Threading.CancellationToken
      description: cancellation token
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Function MarkEventAsCompleteAsync(r As TStorageRecord, ct As CancellationToken) As ValueTask
  overload: FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync*
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).MarkEventAsCompleteAsync(TStorageRecord, CancellationToken)
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).MarkEventAsCompleteAsync(TStorageRecord, System.Threading.CancellationToken)
- uid: FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
  id: PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
  parent: FastEndpoints.IEventHubStorageProvider`1
  langs:
  - csharp
  - vb
  name: PurgeStaleRecordsAsync(StaleRecordSearchParams<TStorageRecord>)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.PurgeStaleRecordsAsync(StaleRecordSearchParams<TStorageRecord>)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams<TStorageRecord>)
  type: Method
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: >-
    this method will be called hourly. implement this method to remove stale records (completed or expired) from storage.

    or instead of removing them, you can move them to some other location (dead-letter-queue maybe) or for inspection by a human.

    or if you'd like to retry expired events, update the <xref href="FastEndpoints.IEventStorageRecord.ExpireOn" data-throw-if-not-resolved="false"></xref> field to a future date/time.

    <p>

    NOTE: the default match criteria is:

    <pre><code class="lang-csharp">r =&gt; r.IsComplete || DateTime.UtcNow &gt;= r.ExpireOn</code></pre></p>
  example: []
  syntax:
    content: ValueTask PurgeStaleRecordsAsync(StaleRecordSearchParams<TStorageRecord> parameters)
    parameters:
    - id: parameters
      type: FastEndpoints.StaleRecordSearchParams{{TStorageRecord}}
      description: use these supplied search parameters to find relevant event records from your database
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Function PurgeStaleRecordsAsync(parameters As StaleRecordSearchParams(Of TStorageRecord)) As ValueTask
  overload: FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync*
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).PurgeStaleRecordsAsync(StaleRecordSearchParams(Of TStorageRecord))
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams(Of TStorageRecord))
  name.vb: PurgeStaleRecordsAsync(StaleRecordSearchParams(Of TStorageRecord))
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync*
  commentId: Overload:FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync
  href: FastEndpoints.IEventHubStorageProvider-1.html#FastEndpoints_IEventHubStorageProvider_1_RestoreSubscriberIDsForEventTypeAsync_FastEndpoints_SubscriberIDRestorationParams__0__
  name: RestoreSubscriberIDsForEventTypeAsync
  nameWithType: IEventHubStorageProvider<TStorageRecord>.RestoreSubscriberIDsForEventTypeAsync
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.RestoreSubscriberIDsForEventTypeAsync
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).RestoreSubscriberIDsForEventTypeAsync
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).RestoreSubscriberIDsForEventTypeAsync
- uid: FastEndpoints.SubscriberIDRestorationParams{{TStorageRecord}}
  commentId: T:FastEndpoints.SubscriberIDRestorationParams{`0}
  parent: FastEndpoints
  definition: FastEndpoints.SubscriberIDRestorationParams`1
  href: FastEndpoints.SubscriberIDRestorationParams-1.html
  name: SubscriberIDRestorationParams<TStorageRecord>
  nameWithType: SubscriberIDRestorationParams<TStorageRecord>
  fullName: FastEndpoints.SubscriberIDRestorationParams<TStorageRecord>
  nameWithType.vb: SubscriberIDRestorationParams(Of TStorageRecord)
  fullName.vb: FastEndpoints.SubscriberIDRestorationParams(Of TStorageRecord)
  name.vb: SubscriberIDRestorationParams(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    href: FastEndpoints.SubscriberIDRestorationParams-1.html
  - name: <
  - name: TStorageRecord
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    href: FastEndpoints.SubscriberIDRestorationParams-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TStorageRecord
  - name: )
- uid: System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{System.String}}
  commentId: T:System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<IEnumerable<string>>
  nameWithType: ValueTask<IEnumerable<string>>
  fullName: System.Threading.Tasks.ValueTask<System.Collections.Generic.IEnumerable<string>>
  nameWithType.vb: ValueTask(Of IEnumerable(Of String))
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Collections.Generic.IEnumerable(Of String))
  name.vb: ValueTask(Of IEnumerable(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: FastEndpoints.SubscriberIDRestorationParams`1
  commentId: T:FastEndpoints.SubscriberIDRestorationParams`1
  href: FastEndpoints.SubscriberIDRestorationParams-1.html
  name: SubscriberIDRestorationParams<TStorageRecord>
  nameWithType: SubscriberIDRestorationParams<TStorageRecord>
  fullName: FastEndpoints.SubscriberIDRestorationParams<TStorageRecord>
  nameWithType.vb: SubscriberIDRestorationParams(Of TStorageRecord)
  fullName.vb: FastEndpoints.SubscriberIDRestorationParams(Of TStorageRecord)
  name.vb: SubscriberIDRestorationParams(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    href: FastEndpoints.SubscriberIDRestorationParams-1.html
  - name: <
  - name: TStorageRecord
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    href: FastEndpoints.SubscriberIDRestorationParams-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TStorageRecord
  - name: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync*
  commentId: Overload:FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync
  href: FastEndpoints.IEventHubStorageProvider-1.html#FastEndpoints_IEventHubStorageProvider_1_StoreEventAsync__0_System_Threading_CancellationToken_
  name: StoreEventAsync
  nameWithType: IEventHubStorageProvider<TStorageRecord>.StoreEventAsync
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.StoreEventAsync
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).StoreEventAsync
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).StoreEventAsync
- uid: '{TStorageRecord}'
  commentId: '!:TStorageRecord'
  definition: TStorageRecord
  name: TStorageRecord
  nameWithType: TStorageRecord
  fullName: TStorageRecord
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
- uid: TStorageRecord
  name: TStorageRecord
  nameWithType: TStorageRecord
  fullName: TStorageRecord
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync*
  commentId: Overload:FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync
  href: FastEndpoints.IEventHubStorageProvider-1.html#FastEndpoints_IEventHubStorageProvider_1_GetNextBatchAsync_FastEndpoints_PendingRecordSearchParams__0__
  name: GetNextBatchAsync
  nameWithType: IEventHubStorageProvider<TStorageRecord>.GetNextBatchAsync
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.GetNextBatchAsync
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).GetNextBatchAsync
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).GetNextBatchAsync
- uid: FastEndpoints.PendingRecordSearchParams{{TStorageRecord}}
  commentId: T:FastEndpoints.PendingRecordSearchParams{`0}
  parent: FastEndpoints
  definition: FastEndpoints.PendingRecordSearchParams`1
  href: FastEndpoints.PendingRecordSearchParams-1.html
  name: PendingRecordSearchParams<TStorageRecord>
  nameWithType: PendingRecordSearchParams<TStorageRecord>
  fullName: FastEndpoints.PendingRecordSearchParams<TStorageRecord>
  nameWithType.vb: PendingRecordSearchParams(Of TStorageRecord)
  fullName.vb: FastEndpoints.PendingRecordSearchParams(Of TStorageRecord)
  name.vb: PendingRecordSearchParams(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    href: FastEndpoints.PendingRecordSearchParams-1.html
  - name: <
  - name: TStorageRecord
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    href: FastEndpoints.PendingRecordSearchParams-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TStorageRecord
  - name: )
- uid: System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{{TStorageRecord}}}
  commentId: T:System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<IEnumerable<TStorageRecord>>
  nameWithType: ValueTask<IEnumerable<TStorageRecord>>
  fullName: System.Threading.Tasks.ValueTask<System.Collections.Generic.IEnumerable<TStorageRecord>>
  nameWithType.vb: ValueTask(Of IEnumerable(Of TStorageRecord))
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Collections.Generic.IEnumerable(Of TStorageRecord))
  name.vb: ValueTask(Of IEnumerable(Of TStorageRecord))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TStorageRecord
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TStorageRecord
  - name: )
  - name: )
- uid: FastEndpoints.PendingRecordSearchParams`1
  commentId: T:FastEndpoints.PendingRecordSearchParams`1
  href: FastEndpoints.PendingRecordSearchParams-1.html
  name: PendingRecordSearchParams<TStorageRecord>
  nameWithType: PendingRecordSearchParams<TStorageRecord>
  fullName: FastEndpoints.PendingRecordSearchParams<TStorageRecord>
  nameWithType.vb: PendingRecordSearchParams(Of TStorageRecord)
  fullName.vb: FastEndpoints.PendingRecordSearchParams(Of TStorageRecord)
  name.vb: PendingRecordSearchParams(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    href: FastEndpoints.PendingRecordSearchParams-1.html
  - name: <
  - name: TStorageRecord
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    href: FastEndpoints.PendingRecordSearchParams-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TStorageRecord
  - name: )
- uid: FastEndpoints.IEventStorageRecord.IsComplete
  commentId: P:FastEndpoints.IEventStorageRecord.IsComplete
  parent: FastEndpoints.IEventStorageRecord
  href: FastEndpoints.IEventStorageRecord.html#FastEndpoints_IEventStorageRecord_IsComplete
  name: IsComplete
  nameWithType: IEventStorageRecord.IsComplete
  fullName: FastEndpoints.IEventStorageRecord.IsComplete
- uid: FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync*
  commentId: Overload:FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync
  href: FastEndpoints.IEventHubStorageProvider-1.html#FastEndpoints_IEventHubStorageProvider_1_MarkEventAsCompleteAsync__0_System_Threading_CancellationToken_
  name: MarkEventAsCompleteAsync
  nameWithType: IEventHubStorageProvider<TStorageRecord>.MarkEventAsCompleteAsync
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.MarkEventAsCompleteAsync
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).MarkEventAsCompleteAsync
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).MarkEventAsCompleteAsync
- uid: FastEndpoints.IEventStorageRecord
  commentId: T:FastEndpoints.IEventStorageRecord
  parent: FastEndpoints
  href: FastEndpoints.IEventStorageRecord.html
  name: IEventStorageRecord
  nameWithType: IEventStorageRecord
  fullName: FastEndpoints.IEventStorageRecord
- uid: FastEndpoints.IEventStorageRecord.ExpireOn
  commentId: P:FastEndpoints.IEventStorageRecord.ExpireOn
  parent: FastEndpoints.IEventStorageRecord
  href: FastEndpoints.IEventStorageRecord.html#FastEndpoints_IEventStorageRecord_ExpireOn
  name: ExpireOn
  nameWithType: IEventStorageRecord.ExpireOn
  fullName: FastEndpoints.IEventStorageRecord.ExpireOn
- uid: FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync*
  commentId: Overload:FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync
  href: FastEndpoints.IEventHubStorageProvider-1.html#FastEndpoints_IEventHubStorageProvider_1_PurgeStaleRecordsAsync_FastEndpoints_StaleRecordSearchParams__0__
  name: PurgeStaleRecordsAsync
  nameWithType: IEventHubStorageProvider<TStorageRecord>.PurgeStaleRecordsAsync
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.PurgeStaleRecordsAsync
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).PurgeStaleRecordsAsync
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).PurgeStaleRecordsAsync
- uid: FastEndpoints.StaleRecordSearchParams{{TStorageRecord}}
  commentId: T:FastEndpoints.StaleRecordSearchParams{`0}
  parent: FastEndpoints
  definition: FastEndpoints.StaleRecordSearchParams`1
  href: FastEndpoints.StaleRecordSearchParams-1.html
  name: StaleRecordSearchParams<TStorageRecord>
  nameWithType: StaleRecordSearchParams<TStorageRecord>
  fullName: FastEndpoints.StaleRecordSearchParams<TStorageRecord>
  nameWithType.vb: StaleRecordSearchParams(Of TStorageRecord)
  fullName.vb: FastEndpoints.StaleRecordSearchParams(Of TStorageRecord)
  name.vb: StaleRecordSearchParams(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    href: FastEndpoints.StaleRecordSearchParams-1.html
  - name: <
  - name: TStorageRecord
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    href: FastEndpoints.StaleRecordSearchParams-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TStorageRecord
  - name: )
- uid: FastEndpoints.StaleRecordSearchParams`1
  commentId: T:FastEndpoints.StaleRecordSearchParams`1
  href: FastEndpoints.StaleRecordSearchParams-1.html
  name: StaleRecordSearchParams<TStorageRecord>
  nameWithType: StaleRecordSearchParams<TStorageRecord>
  fullName: FastEndpoints.StaleRecordSearchParams<TStorageRecord>
  nameWithType.vb: StaleRecordSearchParams(Of TStorageRecord)
  fullName.vb: FastEndpoints.StaleRecordSearchParams(Of TStorageRecord)
  name.vb: StaleRecordSearchParams(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    href: FastEndpoints.StaleRecordSearchParams-1.html
  - name: <
  - name: TStorageRecord
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    href: FastEndpoints.StaleRecordSearchParams-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TStorageRecord
  - name: )
