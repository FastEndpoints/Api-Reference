### YamlMime:ManagedReference
items:
- uid: FastEndpoints.HttpClientExtensions
  commentId: T:FastEndpoints.HttpClientExtensions
  id: HttpClientExtensions
  parent: FastEndpoints
  children:
  - FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,``1)
  - FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,System.String,``0)
  - FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient)
  - FastEndpoints.HttpClientExtensions.DELETEAsync``3(System.Net.Http.HttpClient,``1)
  - FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,``1)
  - FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,System.String,``0)
  - FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient)
  - FastEndpoints.HttpClientExtensions.GETAsync``3(System.Net.Http.HttpClient,``1)
  - FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient)
  - FastEndpoints.HttpClientExtensions.POSTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient)
  - FastEndpoints.HttpClientExtensions.PUTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.Send``2(System.Net.Http.HttpClient,System.Net.Http.HttpMethod,System.String,``0,System.Nullable{System.Boolean})
  langs:
  - csharp
  - vb
  name: HttpClientExtensions
  nameWithType: HttpClientExtensions
  fullName: FastEndpoints.HttpClientExtensions
  type: Class
  source:
    id: HttpClientExtensions
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 12
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\na set of extensions to the httpclient in order to facilitate route-less integration testing\n"
  example: []
  syntax:
    content: public static class HttpClientExtensions
    content.vb: Public Module HttpClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  id: POSTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: POSTAsync<TRequest, TResponse>(HttpClient, String, TRequest, Nullable<Boolean>)
  nameWithType: HttpClientExtensions.POSTAsync<TRequest, TResponse>(HttpClient, String, TRequest, Nullable<Boolean>)
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync<TRequest, TResponse>(System.Net.Http.HttpClient, System.String, TRequest, System.Nullable<System.Boolean>)
  type: Method
  source:
    id: POSTAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 22
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a POST request using a request dto and get back a response dto.\n"
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> POSTAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request, bool? sendAsFormData = null)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: requestUri
      type: System.String
      description: the route url to post to
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TRequest
      description: type of the requet dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function POSTAsync(Of TRequest, TResponse)(client As HttpClient, requestUri As String, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.POSTAsync*
  nameWithType.vb: HttpClientExtensions.POSTAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.POSTAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, System.String, TRequest, System.Nullable(Of System.Boolean))
  name.vb: POSTAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Nullable(Of Boolean))
- uid: FastEndpoints.HttpClientExtensions.POSTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.POSTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: POSTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: POSTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, Nullable<Boolean>)
  nameWithType: HttpClientExtensions.POSTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, Nullable<Boolean>)
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync<TEndpoint, TRequest, TResponse>(System.Net.Http.HttpClient, TRequest, System.Nullable<System.Boolean>)
  type: Method
  source:
    id: POSTAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 36
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a POST request to an endpoint using auto route discovery using a request dto and get back a response dto.\n"
  example: []
  syntax:
    content: >-
      public static Task<TestResult<TResponse>> POSTAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request, bool? sendAsFormData = null)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function POSTAsync(Of TEndpoint As IEndpoint, TRequest, TResponse)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.POSTAsync*
  nameWithType.vb: HttpClientExtensions.POSTAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.POSTAsync(Of TEndpoint, TRequest, TResponse)(System.Net.Http.HttpClient, TRequest, System.Nullable(Of System.Boolean))
  name.vb: POSTAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Nullable(Of Boolean))
- uid: FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: POSTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: POSTAsync<TEndpoint, TRequest>(HttpClient, TRequest, Nullable<Boolean>)
  nameWithType: HttpClientExtensions.POSTAsync<TEndpoint, TRequest>(HttpClient, TRequest, Nullable<Boolean>)
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync<TEndpoint, TRequest>(System.Net.Http.HttpClient, TRequest, System.Nullable<System.Boolean>)
  type: Method
  source:
    id: POSTAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 48
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a POST request to an endpoint using auto route discovery using a request dto that does not send back a response dto.\n"
  example: []
  syntax:
    content: >-
      public static async Task<HttpResponseMessage> POSTAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request, bool? sendAsFormData = null)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function POSTAsync(Of TEndpoint As IEndpoint, TRequest)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of HttpResponseMessage)
  overload: FastEndpoints.HttpClientExtensions.POSTAsync*
  nameWithType.vb: HttpClientExtensions.POSTAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.POSTAsync(Of TEndpoint, TRequest)(System.Net.Http.HttpClient, TRequest, System.Nullable(Of System.Boolean))
  name.vb: POSTAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Nullable(Of Boolean))
- uid: FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient)
  commentId: M:FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient)
  id: POSTAsync``2(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: POSTAsync<TEndpoint, TResponse>(HttpClient)
  nameWithType: HttpClientExtensions.POSTAsync<TEndpoint, TResponse>(HttpClient)
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync<TEndpoint, TResponse>(System.Net.Http.HttpClient)
  type: Method
  source:
    id: POSTAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 61
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a POST request to an endpoint using auto route discovery without a request dto and get back a typed response dto.\n"
  example: []
  syntax:
    content: >-
      public static Task<TestResult<TResponse>> POSTAsync<TEndpoint, TResponse>(this HttpClient client)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function POSTAsync(Of TEndpoint As IEndpoint, TResponse)(client As HttpClient) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.POSTAsync*
  nameWithType.vb: HttpClientExtensions.POSTAsync(Of TEndpoint, TResponse)(HttpClient)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.POSTAsync(Of TEndpoint, TResponse)(System.Net.Http.HttpClient)
  name.vb: POSTAsync(Of TEndpoint, TResponse)(HttpClient)
- uid: FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  id: PUTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PUTAsync<TRequest, TResponse>(HttpClient, String, TRequest, Nullable<Boolean>)
  nameWithType: HttpClientExtensions.PUTAsync<TRequest, TResponse>(HttpClient, String, TRequest, Nullable<Boolean>)
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync<TRequest, TResponse>(System.Net.Http.HttpClient, System.String, TRequest, System.Nullable<System.Boolean>)
  type: Method
  source:
    id: PUTAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 72
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a PUT request using a request dto and get back a response dto.\n"
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> PUTAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request, bool? sendAsFormData = null)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: requestUri
      type: System.String
      description: the route url to post to
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TRequest
      description: type of the requet dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PUTAsync(Of TRequest, TResponse)(client As HttpClient, requestUri As String, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.PUTAsync*
  nameWithType.vb: HttpClientExtensions.PUTAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.PUTAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, System.String, TRequest, System.Nullable(Of System.Boolean))
  name.vb: PUTAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Nullable(Of Boolean))
- uid: FastEndpoints.HttpClientExtensions.PUTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.PUTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: PUTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PUTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, Nullable<Boolean>)
  nameWithType: HttpClientExtensions.PUTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, Nullable<Boolean>)
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync<TEndpoint, TRequest, TResponse>(System.Net.Http.HttpClient, TRequest, System.Nullable<System.Boolean>)
  type: Method
  source:
    id: PUTAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 86
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a PUT request to an endpoint using auto route discovery using a request dto and get back a response dto.\n"
  example: []
  syntax:
    content: >-
      public static Task<TestResult<TResponse>> PUTAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request, bool? sendAsFormData = null)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PUTAsync(Of TEndpoint As IEndpoint, TRequest, TResponse)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.PUTAsync*
  nameWithType.vb: HttpClientExtensions.PUTAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.PUTAsync(Of TEndpoint, TRequest, TResponse)(System.Net.Http.HttpClient, TRequest, System.Nullable(Of System.Boolean))
  name.vb: PUTAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Nullable(Of Boolean))
- uid: FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: PUTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PUTAsync<TEndpoint, TRequest>(HttpClient, TRequest, Nullable<Boolean>)
  nameWithType: HttpClientExtensions.PUTAsync<TEndpoint, TRequest>(HttpClient, TRequest, Nullable<Boolean>)
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync<TEndpoint, TRequest>(System.Net.Http.HttpClient, TRequest, System.Nullable<System.Boolean>)
  type: Method
  source:
    id: PUTAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 98
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a PUT request to an endpoint using auto route discovery using a request dto that does not send back a response dto.\n"
  example: []
  syntax:
    content: >-
      public static async Task<HttpResponseMessage> PUTAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request, bool? sendAsFormData = null)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PUTAsync(Of TEndpoint As IEndpoint, TRequest)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of HttpResponseMessage)
  overload: FastEndpoints.HttpClientExtensions.PUTAsync*
  nameWithType.vb: HttpClientExtensions.PUTAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.PUTAsync(Of TEndpoint, TRequest)(System.Net.Http.HttpClient, TRequest, System.Nullable(Of System.Boolean))
  name.vb: PUTAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Nullable(Of Boolean))
- uid: FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient)
  commentId: M:FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient)
  id: PUTAsync``2(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PUTAsync<TEndpoint, TResponse>(HttpClient)
  nameWithType: HttpClientExtensions.PUTAsync<TEndpoint, TResponse>(HttpClient)
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync<TEndpoint, TResponse>(System.Net.Http.HttpClient)
  type: Method
  source:
    id: PUTAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 111
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a PUT request to an endpoint using auto route discovery without a request dto and get back a typed response dto.\n"
  example: []
  syntax:
    content: >-
      public static Task<TestResult<TResponse>> PUTAsync<TEndpoint, TResponse>(this HttpClient client)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PUTAsync(Of TEndpoint As IEndpoint, TResponse)(client As HttpClient) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.PUTAsync*
  nameWithType.vb: HttpClientExtensions.PUTAsync(Of TEndpoint, TResponse)(HttpClient)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.PUTAsync(Of TEndpoint, TResponse)(System.Net.Http.HttpClient)
  name.vb: PUTAsync(Of TEndpoint, TResponse)(HttpClient)
- uid: FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,System.String,``0)
  commentId: M:FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,System.String,``0)
  id: GETAsync``2(System.Net.Http.HttpClient,System.String,``0)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: GETAsync<TRequest, TResponse>(HttpClient, String, TRequest)
  nameWithType: HttpClientExtensions.GETAsync<TRequest, TResponse>(HttpClient, String, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.GETAsync<TRequest, TResponse>(System.Net.Http.HttpClient, System.String, TRequest)
  type: Method
  source:
    id: GETAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 121
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a GET request using a request dto and get back a response dto.\n"
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> GETAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: requestUri
      type: System.String
      description: the route url to post to
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TRequest
      description: type of the requet dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GETAsync(Of TRequest, TResponse)(client As HttpClient, requestUri As String, request As TRequest) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.GETAsync*
  nameWithType.vb: HttpClientExtensions.GETAsync(Of TRequest, TResponse)(HttpClient, String, TRequest)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.GETAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, System.String, TRequest)
  name.vb: GETAsync(Of TRequest, TResponse)(HttpClient, String, TRequest)
- uid: FastEndpoints.HttpClientExtensions.GETAsync``3(System.Net.Http.HttpClient,``1)
  commentId: M:FastEndpoints.HttpClientExtensions.GETAsync``3(System.Net.Http.HttpClient,``1)
  id: GETAsync``3(System.Net.Http.HttpClient,``1)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: GETAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest)
  nameWithType: HttpClientExtensions.GETAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.GETAsync<TEndpoint, TRequest, TResponse>(System.Net.Http.HttpClient, TRequest)
  type: Method
  source:
    id: GETAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 133
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a GET request to an endpoint using auto route discovery using a request dto and get back a response dto.\n"
  example: []
  syntax:
    content: >-
      public static Task<TestResult<TResponse>> GETAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GETAsync(Of TEndpoint As IEndpoint, TRequest, TResponse)(client As HttpClient, request As TRequest) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.GETAsync*
  nameWithType.vb: HttpClientExtensions.GETAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.GETAsync(Of TEndpoint, TRequest, TResponse)(System.Net.Http.HttpClient, TRequest)
  name.vb: GETAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest)
- uid: FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,``1)
  commentId: M:FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,``1)
  id: GETAsync``2(System.Net.Http.HttpClient,``1)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: GETAsync<TEndpoint, TRequest>(HttpClient, TRequest)
  nameWithType: HttpClientExtensions.GETAsync<TEndpoint, TRequest>(HttpClient, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.GETAsync<TEndpoint, TRequest>(System.Net.Http.HttpClient, TRequest)
  type: Method
  source:
    id: GETAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 143
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a GET request to an endpoint using auto route discovery using a request dto that does not send back a response dto.\n"
  example: []
  syntax:
    content: >-
      public static async Task<HttpResponseMessage> GETAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GETAsync(Of TEndpoint As IEndpoint, TRequest)(client As HttpClient, request As TRequest) As Task(Of HttpResponseMessage)
  overload: FastEndpoints.HttpClientExtensions.GETAsync*
  nameWithType.vb: HttpClientExtensions.GETAsync(Of TEndpoint, TRequest)(HttpClient, TRequest)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.GETAsync(Of TEndpoint, TRequest)(System.Net.Http.HttpClient, TRequest)
  name.vb: GETAsync(Of TEndpoint, TRequest)(HttpClient, TRequest)
- uid: FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient)
  commentId: M:FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient)
  id: GETAsync``2(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: GETAsync<TEndpoint, TResponse>(HttpClient)
  nameWithType: HttpClientExtensions.GETAsync<TEndpoint, TResponse>(HttpClient)
  fullName: FastEndpoints.HttpClientExtensions.GETAsync<TEndpoint, TResponse>(System.Net.Http.HttpClient)
  type: Method
  source:
    id: GETAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 155
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a GET request to an endpoint using auto route discovery without a request dto and get back a typed response dto.\n"
  example: []
  syntax:
    content: >-
      public static Task<TestResult<TResponse>> GETAsync<TEndpoint, TResponse>(this HttpClient client)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GETAsync(Of TEndpoint As IEndpoint, TResponse)(client As HttpClient) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.GETAsync*
  nameWithType.vb: HttpClientExtensions.GETAsync(Of TEndpoint, TResponse)(HttpClient)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.GETAsync(Of TEndpoint, TResponse)(System.Net.Http.HttpClient)
  name.vb: GETAsync(Of TEndpoint, TResponse)(HttpClient)
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,System.String,``0)
  commentId: M:FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,System.String,``0)
  id: DELETEAsync``2(System.Net.Http.HttpClient,System.String,``0)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DELETEAsync<TRequest, TResponse>(HttpClient, String, TRequest)
  nameWithType: HttpClientExtensions.DELETEAsync<TRequest, TResponse>(HttpClient, String, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync<TRequest, TResponse>(System.Net.Http.HttpClient, System.String, TRequest)
  type: Method
  source:
    id: DELETEAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 165
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a DELETE request using a request dto and get back a response dto.\n"
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> DELETEAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: requestUri
      type: System.String
      description: the route url to post to
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TRequest
      description: type of the requet dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DELETEAsync(Of TRequest, TResponse)(client As HttpClient, requestUri As String, request As TRequest) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.DELETEAsync*
  nameWithType.vb: HttpClientExtensions.DELETEAsync(Of TRequest, TResponse)(HttpClient, String, TRequest)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.DELETEAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, System.String, TRequest)
  name.vb: DELETEAsync(Of TRequest, TResponse)(HttpClient, String, TRequest)
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync``3(System.Net.Http.HttpClient,``1)
  commentId: M:FastEndpoints.HttpClientExtensions.DELETEAsync``3(System.Net.Http.HttpClient,``1)
  id: DELETEAsync``3(System.Net.Http.HttpClient,``1)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DELETEAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest)
  nameWithType: HttpClientExtensions.DELETEAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync<TEndpoint, TRequest, TResponse>(System.Net.Http.HttpClient, TRequest)
  type: Method
  source:
    id: DELETEAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 177
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a DELETE request to an endpoint using auto route discovery using a request dto and get back a response dto.\n"
  example: []
  syntax:
    content: >-
      public static Task<TestResult<TResponse>> DELETEAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DELETEAsync(Of TEndpoint As IEndpoint, TRequest, TResponse)(client As HttpClient, request As TRequest) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.DELETEAsync*
  nameWithType.vb: HttpClientExtensions.DELETEAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.DELETEAsync(Of TEndpoint, TRequest, TResponse)(System.Net.Http.HttpClient, TRequest)
  name.vb: DELETEAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest)
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,``1)
  commentId: M:FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,``1)
  id: DELETEAsync``2(System.Net.Http.HttpClient,``1)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DELETEAsync<TEndpoint, TRequest>(HttpClient, TRequest)
  nameWithType: HttpClientExtensions.DELETEAsync<TEndpoint, TRequest>(HttpClient, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync<TEndpoint, TRequest>(System.Net.Http.HttpClient, TRequest)
  type: Method
  source:
    id: DELETEAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 187
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a DELETE request to an endpoint using auto route discovery using a request dto that does not send back a response dto.\n"
  example: []
  syntax:
    content: >-
      public static async Task<HttpResponseMessage> DELETEAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DELETEAsync(Of TEndpoint As IEndpoint, TRequest)(client As HttpClient, request As TRequest) As Task(Of HttpResponseMessage)
  overload: FastEndpoints.HttpClientExtensions.DELETEAsync*
  nameWithType.vb: HttpClientExtensions.DELETEAsync(Of TEndpoint, TRequest)(HttpClient, TRequest)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.DELETEAsync(Of TEndpoint, TRequest)(System.Net.Http.HttpClient, TRequest)
  name.vb: DELETEAsync(Of TEndpoint, TRequest)(HttpClient, TRequest)
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient)
  commentId: M:FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient)
  id: DELETEAsync``2(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DELETEAsync<TEndpoint, TResponse>(HttpClient)
  nameWithType: HttpClientExtensions.DELETEAsync<TEndpoint, TResponse>(HttpClient)
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync<TEndpoint, TResponse>(System.Net.Http.HttpClient)
  type: Method
  source:
    id: DELETEAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 199
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmake a DELETE request to an endpoint using auto route discovery without a request dto and get back a typed response dto.\n"
  example: []
  syntax:
    content: >-
      public static Task<TestResult<TResponse>> DELETEAsync<TEndpoint, TResponse>(this HttpClient client)

          where TEndpoint : IEndpoint
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DELETEAsync(Of TEndpoint As IEndpoint, TResponse)(client As HttpClient) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.DELETEAsync*
  nameWithType.vb: HttpClientExtensions.DELETEAsync(Of TEndpoint, TResponse)(HttpClient)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.DELETEAsync(Of TEndpoint, TResponse)(System.Net.Http.HttpClient)
  name.vb: DELETEAsync(Of TEndpoint, TResponse)(HttpClient)
- uid: FastEndpoints.HttpClientExtensions.Send``2(System.Net.Http.HttpClient,System.Net.Http.HttpMethod,System.String,``0,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.Send``2(System.Net.Http.HttpClient,System.Net.Http.HttpMethod,System.String,``0,System.Nullable{System.Boolean})
  id: Send``2(System.Net.Http.HttpClient,System.Net.Http.HttpMethod,System.String,``0,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: Send<TRequest, TResponse>(HttpClient, HttpMethod, String, TRequest, Nullable<Boolean>)
  nameWithType: HttpClientExtensions.Send<TRequest, TResponse>(HttpClient, HttpMethod, String, TRequest, Nullable<Boolean>)
  fullName: FastEndpoints.HttpClientExtensions.Send<TRequest, TResponse>(System.Net.Http.HttpClient, System.Net.Http.HttpMethod, System.String, TRequest, System.Nullable<System.Boolean>)
  type: Method
  source:
    id: Send
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\HttpClientExtensions.cs
    startLine: 202
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public static async Task<TestResult<TResponse>> Send<TRequest, TResponse>(this HttpClient client, HttpMethod method, string requestUri, TRequest request, bool? isFormContent = null)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: method
      type: System.Net.Http.HttpMethod
    - id: requestUri
      type: System.String
    - id: request
      type: '{TRequest}'
    - id: isFormContent
      type: System.Nullable{System.Boolean}
    typeParameters:
    - id: TRequest
    - id: TResponse
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Send(Of TRequest, TResponse)(client As HttpClient, method As HttpMethod, requestUri As String, request As TRequest, isFormContent As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.Send*
  nameWithType.vb: HttpClientExtensions.Send(Of TRequest, TResponse)(HttpClient, HttpMethod, String, TRequest, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpClientExtensions.Send(Of TRequest, TResponse)(System.Net.Http.HttpClient, System.Net.Http.HttpMethod, System.String, TRequest, System.Nullable(Of System.Boolean))
  name.vb: Send(Of TRequest, TResponse)(HttpClient, HttpMethod, String, TRequest, Nullable(Of Boolean))
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Http.MultipartFormDataContent
  commentId: T:System.Net.Http.MultipartFormDataContent
  isExternal: true
- uid: FastEndpoints.HttpClientExtensions.POSTAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.POSTAsync
  name: POSTAsync
  nameWithType: HttpClientExtensions.POSTAsync
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
  commentId: T:System.Threading.Tasks.Task{FastEndpoints.TestResult{``1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TestResult<TResponse>>
  nameWithType: Task<TestResult<TResponse>>
  fullName: System.Threading.Tasks.Task<FastEndpoints.TestResult<TResponse>>
  nameWithType.vb: Task(Of TestResult(Of TResponse))
  fullName.vb: System.Threading.Tasks.Task(Of FastEndpoints.TestResult(Of TResponse))
  name.vb: Task(Of TestResult(Of TResponse))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.TestResult`1
    name: TestResult
    nameWithType: TestResult
    fullName: FastEndpoints.TestResult
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.TestResult`1
    name: TestResult
    nameWithType: TestResult
    fullName: FastEndpoints.TestResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.HttpClientExtensions.PUTAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.PUTAsync
  name: PUTAsync
  nameWithType: HttpClientExtensions.PUTAsync
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync
- uid: FastEndpoints.HttpClientExtensions.GETAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.GETAsync
  name: GETAsync
  nameWithType: HttpClientExtensions.GETAsync
  fullName: FastEndpoints.HttpClientExtensions.GETAsync
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.DELETEAsync
  name: DELETEAsync
  nameWithType: HttpClientExtensions.DELETEAsync
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync
- uid: FastEndpoints.HttpClientExtensions.Send*
  commentId: Overload:FastEndpoints.HttpClientExtensions.Send
  name: Send
  nameWithType: HttpClientExtensions.Send
  fullName: FastEndpoints.HttpClientExtensions.Send
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
