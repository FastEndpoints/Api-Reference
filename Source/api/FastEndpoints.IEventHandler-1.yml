### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IEventHandler`1
  commentId: T:FastEndpoints.IEventHandler`1
  id: IEventHandler`1
  parent: FastEndpoints
  children:
  - FastEndpoints.IEventHandler`1.HandleAsync(`0,CancellationToken)
  langs:
  - csharp
  - vb
  name: IEventHandler<TEvent>
  nameWithType: IEventHandler<TEvent>
  fullName: FastEndpoints.IEventHandler<TEvent>
  type: Interface
  source:
    id: IEventHandler
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Events\IEventHandler.cs
    startLine: 11
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ninterface to be implemented by event handlers\n"
  example: []
  syntax:
    content: 'public interface IEventHandler<TEvent> : IEventHandler'
    typeParameters:
    - id: TEvent
      description: the type of the event model to be handled by this event handler
    content.vb: >-
      Public Interface IEventHandler(Of TEvent)
          Inherits IEventHandler
  nameWithType.vb: IEventHandler(Of TEvent)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: FastEndpoints.IEventHandler(Of TEvent)
  name.vb: IEventHandler(Of TEvent)
- uid: FastEndpoints.IEventHandler`1.HandleAsync(`0,CancellationToken)
  commentId: M:FastEndpoints.IEventHandler`1.HandleAsync(`0,CancellationToken)
  id: HandleAsync(`0,CancellationToken)
  parent: FastEndpoints.IEventHandler`1
  langs:
  - csharp
  - vb
  name: HandleAsync(TEvent, CancellationToken)
  nameWithType: IEventHandler<TEvent>.HandleAsync(TEvent, CancellationToken)
  fullName: FastEndpoints.IEventHandler<TEvent>.HandleAsync(TEvent, CancellationToken)
  type: Method
  source:
    id: HandleAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Events\IEventHandler.cs
    startLine: 18
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe handler logic for the event handler\n"
  example: []
  syntax:
    content: Task HandleAsync(TEvent eventModel, CancellationToken ct = null)
    parameters:
    - id: eventModel
      type: '{TEvent}'
      description: the input event model
    - id: ct
      type: CancellationToken
      description: optional cancellation token
    return:
      type: Task
    content.vb: Function HandleAsync(eventModel As TEvent, ct As CancellationToken = Nothing) As Task
  overload: FastEndpoints.IEventHandler`1.HandleAsync*
  nameWithType.vb: IEventHandler(Of TEvent).HandleAsync(TEvent, CancellationToken)
  fullName.vb: FastEndpoints.IEventHandler(Of TEvent).HandleAsync(TEvent, CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IEventHandler`1.HandleAsync*
  commentId: Overload:FastEndpoints.IEventHandler`1.HandleAsync
  name: HandleAsync
  nameWithType: IEventHandler<TEvent>.HandleAsync
  fullName: FastEndpoints.IEventHandler<TEvent>.HandleAsync
  nameWithType.vb: IEventHandler(Of TEvent).HandleAsync
  fullName.vb: FastEndpoints.IEventHandler(Of TEvent).HandleAsync
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
