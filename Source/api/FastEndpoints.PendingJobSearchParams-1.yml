### YamlMime:ManagedReference
items:
- uid: FastEndpoints.PendingJobSearchParams`1
  commentId: T:FastEndpoints.PendingJobSearchParams`1
  id: PendingJobSearchParams`1
  parent: FastEndpoints
  children:
  - FastEndpoints.PendingJobSearchParams`1.CancellationToken
  - FastEndpoints.PendingJobSearchParams`1.Limit
  - FastEndpoints.PendingJobSearchParams`1.Match
  - FastEndpoints.PendingJobSearchParams`1.QueueID
  langs:
  - csharp
  - vb
  name: PendingJobSearchParams<TStorageRecord>
  nameWithType: PendingJobSearchParams<TStorageRecord>
  fullName: FastEndpoints.PendingJobSearchParams<TStorageRecord>
  type: Struct
  source:
    id: PendingJobSearchParams
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\PendingJobSearchParams.cs
    startLine: 8
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\na dto representing search parameters for pending job storage record retrieval\n"
  example: []
  syntax:
    content: >-
      public struct PendingJobSearchParams<TStorageRecord>

          where TStorageRecord : IJobStorageRecord
    typeParameters:
    - id: TStorageRecord
      description: the type of storage record
    content.vb: Public Structure PendingJobSearchParams(Of TStorageRecord As IJobStorageRecord)
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: PendingJobSearchParams(Of TStorageRecord)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: FastEndpoints.PendingJobSearchParams(Of TStorageRecord)
  name.vb: PendingJobSearchParams(Of TStorageRecord)
- uid: FastEndpoints.PendingJobSearchParams`1.QueueID
  commentId: P:FastEndpoints.PendingJobSearchParams`1.QueueID
  id: QueueID
  parent: FastEndpoints.PendingJobSearchParams`1
  langs:
  - csharp
  - vb
  name: QueueID
  nameWithType: PendingJobSearchParams<TStorageRecord>.QueueID
  fullName: FastEndpoints.PendingJobSearchParams<TStorageRecord>.QueueID
  type: Property
  source:
    id: QueueID
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\PendingJobSearchParams.cs
    startLine: 13
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe ID of the job queue for fetching the next batch of records for.\n"
  example: []
  syntax:
    content: public string QueueID { readonly get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property QueueID As String
  overload: FastEndpoints.PendingJobSearchParams`1.QueueID*
  nameWithType.vb: PendingJobSearchParams(Of TStorageRecord).QueueID
  modifiers.csharp:
  - public
  - readonly get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.PendingJobSearchParams(Of TStorageRecord).QueueID
- uid: FastEndpoints.PendingJobSearchParams`1.Match
  commentId: P:FastEndpoints.PendingJobSearchParams`1.Match
  id: Match
  parent: FastEndpoints.PendingJobSearchParams`1
  langs:
  - csharp
  - vb
  name: Match
  nameWithType: PendingJobSearchParams<TStorageRecord>.Match
  fullName: FastEndpoints.PendingJobSearchParams<TStorageRecord>.Match
  type: Property
  source:
    id: Match
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\PendingJobSearchParams.cs
    startLine: 24
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\na boolean lambda expression to match the next batch of records\n<pre><code>	r => r.QueueID == &quot;xxx&quot; &amp;&amp;\n	     !r.IsComplete &amp;&amp;\n	     DateTime.UtcNow >= r.ExecuteAfter &amp;&amp;\n	     DateTime.UtcNow &lt;= r.ExpireOn</code></pre>\n"
  example: []
  syntax:
    content: public Expression<Func<TStorageRecord, bool>> Match { readonly get; }
    parameters: []
    return:
      type: System.Linq.Expressions.Expression{System.Func{{TStorageRecord},System.Boolean}}
    content.vb: Public ReadOnly Property Match As Expression(Of Func(Of TStorageRecord, Boolean))
  overload: FastEndpoints.PendingJobSearchParams`1.Match*
  nameWithType.vb: PendingJobSearchParams(Of TStorageRecord).Match
  modifiers.csharp:
  - public
  - readonly get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.PendingJobSearchParams(Of TStorageRecord).Match
- uid: FastEndpoints.PendingJobSearchParams`1.Limit
  commentId: P:FastEndpoints.PendingJobSearchParams`1.Limit
  id: Limit
  parent: FastEndpoints.PendingJobSearchParams`1
  langs:
  - csharp
  - vb
  name: Limit
  nameWithType: PendingJobSearchParams<TStorageRecord>.Limit
  fullName: FastEndpoints.PendingJobSearchParams<TStorageRecord>.Limit
  type: Property
  source:
    id: Limit
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\PendingJobSearchParams.cs
    startLine: 29
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe number of pending records to fetch\n"
  example: []
  syntax:
    content: public int Limit { readonly get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Limit As Integer
  overload: FastEndpoints.PendingJobSearchParams`1.Limit*
  nameWithType.vb: PendingJobSearchParams(Of TStorageRecord).Limit
  modifiers.csharp:
  - public
  - readonly get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.PendingJobSearchParams(Of TStorageRecord).Limit
- uid: FastEndpoints.PendingJobSearchParams`1.CancellationToken
  commentId: P:FastEndpoints.PendingJobSearchParams`1.CancellationToken
  id: CancellationToken
  parent: FastEndpoints.PendingJobSearchParams`1
  langs:
  - csharp
  - vb
  name: CancellationToken
  nameWithType: PendingJobSearchParams<TStorageRecord>.CancellationToken
  fullName: FastEndpoints.PendingJobSearchParams<TStorageRecord>.CancellationToken
  type: Property
  source:
    id: CancellationToken
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Jobs\PendingJobSearchParams.cs
    startLine: 34
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ncancellation token\n"
  example: []
  syntax:
    content: public CancellationToken CancellationToken { readonly get; }
    parameters: []
    return:
      type: System.Threading.CancellationToken
    content.vb: Public ReadOnly Property CancellationToken As CancellationToken
  overload: FastEndpoints.PendingJobSearchParams`1.CancellationToken*
  nameWithType.vb: PendingJobSearchParams(Of TStorageRecord).CancellationToken
  modifiers.csharp:
  - public
  - readonly get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.PendingJobSearchParams(Of TStorageRecord).CancellationToken
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.PendingJobSearchParams`1.QueueID*
  commentId: Overload:FastEndpoints.PendingJobSearchParams`1.QueueID
  name: QueueID
  nameWithType: PendingJobSearchParams<TStorageRecord>.QueueID
  fullName: FastEndpoints.PendingJobSearchParams<TStorageRecord>.QueueID
  nameWithType.vb: PendingJobSearchParams(Of TStorageRecord).QueueID
  fullName.vb: FastEndpoints.PendingJobSearchParams(Of TStorageRecord).QueueID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FastEndpoints.PendingJobSearchParams`1.Match*
  commentId: Overload:FastEndpoints.PendingJobSearchParams`1.Match
  name: Match
  nameWithType: PendingJobSearchParams<TStorageRecord>.Match
  fullName: FastEndpoints.PendingJobSearchParams<TStorageRecord>.Match
  nameWithType.vb: PendingJobSearchParams(Of TStorageRecord).Match
  fullName.vb: FastEndpoints.PendingJobSearchParams(Of TStorageRecord).Match
- uid: System.Linq.Expressions.Expression{System.Func{{TStorageRecord},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TStorageRecord, Boolean>>
  nameWithType: Expression<Func<TStorageRecord, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<TStorageRecord, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of TStorageRecord, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TStorageRecord, System.Boolean))
  name.vb: Expression(Of Func(Of TStorageRecord, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: FastEndpoints.PendingJobSearchParams`1.Limit*
  commentId: Overload:FastEndpoints.PendingJobSearchParams`1.Limit
  name: Limit
  nameWithType: PendingJobSearchParams<TStorageRecord>.Limit
  fullName: FastEndpoints.PendingJobSearchParams<TStorageRecord>.Limit
  nameWithType.vb: PendingJobSearchParams(Of TStorageRecord).Limit
  fullName.vb: FastEndpoints.PendingJobSearchParams(Of TStorageRecord).Limit
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FastEndpoints.PendingJobSearchParams`1.CancellationToken*
  commentId: Overload:FastEndpoints.PendingJobSearchParams`1.CancellationToken
  name: CancellationToken
  nameWithType: PendingJobSearchParams<TStorageRecord>.CancellationToken
  fullName: FastEndpoints.PendingJobSearchParams<TStorageRecord>.CancellationToken
  nameWithType.vb: PendingJobSearchParams(Of TStorageRecord).CancellationToken
  fullName.vb: FastEndpoints.PendingJobSearchParams(Of TStorageRecord).CancellationToken
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
