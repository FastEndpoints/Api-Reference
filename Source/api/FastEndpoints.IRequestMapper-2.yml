### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IRequestMapper`2
  commentId: T:FastEndpoints.IRequestMapper`2
  id: IRequestMapper`2
  parent: FastEndpoints
  children:
  - FastEndpoints.IRequestMapper`2.ToEntity(`0)
  - FastEndpoints.IRequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
  - FastEndpoints.IRequestMapper`2.UpdateEntity(`0,`1)
  - FastEndpoints.IRequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IRequestMapper<TRequest, TEntity>
  nameWithType: IRequestMapper<TRequest, TEntity>
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>
  type: Interface
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    use this interface to implement a domain entity mapper for your endpoints that only has a request dto and no response dto.

    <p>HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers.</p>
  example: []
  syntax:
    content: 'public interface IRequestMapper<in TRequest, TEntity> : IRequestMapper, IMapper'
    typeParameters:
    - id: TRequest
      description: the type of request dto
    - id: TEntity
      description: the type of domain entity to map to/from
    content.vb: Public Interface IRequestMapper(Of In TRequest, TEntity) Inherits IRequestMapper, IMapper
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity)
  name.vb: IRequestMapper(Of TRequest, TEntity)
- uid: FastEndpoints.IRequestMapper`2.ToEntity(`0)
  commentId: M:FastEndpoints.IRequestMapper`2.ToEntity(`0)
  id: ToEntity(`0)
  parent: FastEndpoints.IRequestMapper`2
  langs:
  - csharp
  - vb
  name: ToEntity(TRequest)
  nameWithType: IRequestMapper<TRequest, TEntity>.ToEntity(TRequest)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.ToEntity(TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping the request dto to the desired domain entity
  example: []
  syntax:
    content: TEntity ToEntity(TRequest r)
    parameters:
    - id: r
      type: '{TRequest}'
      description: the request dto
    return:
      type: '{TEntity}'
    content.vb: Function ToEntity(r As TRequest) As TEntity
  overload: FastEndpoints.IRequestMapper`2.ToEntity*
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).ToEntity(TRequest)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).ToEntity(TRequest)
- uid: FastEndpoints.IRequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IRequestMapper`2.ToEntityAsync(`0,System.Threading.CancellationToken)
  id: ToEntityAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.IRequestMapper`2
  langs:
  - csharp
  - vb
  name: ToEntityAsync(TRequest, CancellationToken)
  nameWithType: IRequestMapper<TRequest, TEntity>.ToEntityAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.ToEntityAsync(TRequest, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping the request dto to the desired domain entity
  example: []
  syntax:
    content: Task<TEntity> ToEntityAsync(TRequest r, CancellationToken ct)
    parameters:
    - id: r
      type: '{TRequest}'
      description: the request dto to map from
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Function ToEntityAsync(r As TRequest, ct As CancellationToken) As Task(Of TEntity)
  overload: FastEndpoints.IRequestMapper`2.ToEntityAsync*
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).ToEntityAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).ToEntityAsync(TRequest, System.Threading.CancellationToken)
- uid: FastEndpoints.IRequestMapper`2.UpdateEntity(`0,`1)
  commentId: M:FastEndpoints.IRequestMapper`2.UpdateEntity(`0,`1)
  id: UpdateEntity(`0,`1)
  parent: FastEndpoints.IRequestMapper`2
  langs:
  - csharp
  - vb
  name: UpdateEntity(TRequest, TEntity)
  nameWithType: IRequestMapper<TRequest, TEntity>.UpdateEntity(TRequest, TEntity)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.UpdateEntity(TRequest, TEntity)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping the updated request dto to the desired domain entity
  example: []
  syntax:
    content: TEntity UpdateEntity(TRequest r, TEntity e)
    parameters:
    - id: r
      type: '{TRequest}'
      description: the request dto to update from
    - id: e
      type: '{TEntity}'
      description: the domain entity to update
    return:
      type: '{TEntity}'
    content.vb: Function UpdateEntity(r As TRequest, e As TEntity) As TEntity
  overload: FastEndpoints.IRequestMapper`2.UpdateEntity*
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).UpdateEntity(TRequest, TEntity)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).UpdateEntity(TRequest, TEntity)
- uid: FastEndpoints.IRequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IRequestMapper`2.UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  id: UpdateEntityAsync(`0,`1,System.Threading.CancellationToken)
  parent: FastEndpoints.IRequestMapper`2
  langs:
  - csharp
  - vb
  name: UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  nameWithType: IRequestMapper<TRequest, TEntity>.UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.UpdateEntityAsync(TRequest, TEntity, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method and place the logic for mapping the updated request dto to the desired domain entity
  example: []
  syntax:
    content: Task<TEntity> UpdateEntityAsync(TRequest r, TEntity e, CancellationToken ct)
    parameters:
    - id: r
      type: '{TRequest}'
      description: the request dto to update from
    - id: e
      type: '{TEntity}'
      description: the domain entity to update
    - id: ct
      type: System.Threading.CancellationToken
      description: a cancellation token
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Function UpdateEntityAsync(r As TRequest, e As TEntity, ct As CancellationToken) As Task(Of TEntity)
  overload: FastEndpoints.IRequestMapper`2.UpdateEntityAsync*
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).UpdateEntityAsync(TRequest, TEntity, CancellationToken)
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).UpdateEntityAsync(TRequest, TEntity, System.Threading.CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IRequestMapper`2.ToEntity*
  commentId: Overload:FastEndpoints.IRequestMapper`2.ToEntity
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntity__0_
  name: ToEntity
  nameWithType: IRequestMapper<TRequest, TEntity>.ToEntity
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.ToEntity
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).ToEntity
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).ToEntity
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: FastEndpoints.IRequestMapper`2.ToEntityAsync*
  commentId: Overload:FastEndpoints.IRequestMapper`2.ToEntityAsync
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_ToEntityAsync__0_System_Threading_CancellationToken_
  name: ToEntityAsync
  nameWithType: IRequestMapper<TRequest, TEntity>.ToEntityAsync
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.ToEntityAsync
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).ToEntityAsync
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).ToEntityAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TEntity}}
  commentId: T:System.Threading.Tasks.Task{`2}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TEntity>
  nameWithType: Task<TEntity>
  fullName: System.Threading.Tasks.Task<TEntity>
  nameWithType.vb: Task(Of TEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TEntity)
  name.vb: Task(Of TEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FastEndpoints.IRequestMapper`2.UpdateEntity*
  commentId: Overload:FastEndpoints.IRequestMapper`2.UpdateEntity
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntity__0__1_
  name: UpdateEntity
  nameWithType: IRequestMapper<TRequest, TEntity>.UpdateEntity
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.UpdateEntity
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).UpdateEntity
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).UpdateEntity
- uid: FastEndpoints.IRequestMapper`2.UpdateEntityAsync*
  commentId: Overload:FastEndpoints.IRequestMapper`2.UpdateEntityAsync
  href: FastEndpoints.IRequestMapper-2.html#FastEndpoints_IRequestMapper_2_UpdateEntityAsync__0__1_System_Threading_CancellationToken_
  name: UpdateEntityAsync
  nameWithType: IRequestMapper<TRequest, TEntity>.UpdateEntityAsync
  fullName: FastEndpoints.IRequestMapper<TRequest, TEntity>.UpdateEntityAsync
  nameWithType.vb: IRequestMapper(Of TRequest, TEntity).UpdateEntityAsync
  fullName.vb: FastEndpoints.IRequestMapper(Of TRequest, TEntity).UpdateEntityAsync
