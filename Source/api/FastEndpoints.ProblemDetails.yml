### YamlMime:ManagedReference
items:
- uid: FastEndpoints.ProblemDetails
  commentId: T:FastEndpoints.ProblemDetails
  id: ProblemDetails
  parent: FastEndpoints
  children:
  - FastEndpoints.ProblemDetails.#ctor(System.Collections.Generic.List{FluentValidation.Results.ValidationFailure},System.String,System.String,System.Int32)
  - FastEndpoints.ProblemDetails.AllowDuplicates
  - FastEndpoints.ProblemDetails.Errors
  - FastEndpoints.ProblemDetails.Instance
  - FastEndpoints.ProblemDetails.ResponseBuilder
  - FastEndpoints.ProblemDetails.Status
  - FastEndpoints.ProblemDetails.Title
  - FastEndpoints.ProblemDetails.TitleValue
  - FastEndpoints.ProblemDetails.TraceId
  - FastEndpoints.ProblemDetails.Type
  - FastEndpoints.ProblemDetails.TypeValue
  langs:
  - csharp
  - vb
  name: ProblemDetails
  nameWithType: ProblemDetails
  fullName: FastEndpoints.ProblemDetails
  type: Class
  source:
    id: ProblemDetails
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 13
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nRFC7807 compatible problem details/ error response class. this can be used by configuring startup like so:\n<p>\n<code>app.UseFastEndpoints(x => x.Errors.ResponseBuilder = ProblemDetails.ResponseBuilder);</code>\n</p>\n"
  example: []
  syntax:
    content: public sealed class ProblemDetails
    content.vb: Public NotInheritable Class ProblemDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: FastEndpoints.ProblemDetails.ResponseBuilder
  commentId: P:FastEndpoints.ProblemDetails.ResponseBuilder
  id: ResponseBuilder
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: ResponseBuilder
  nameWithType: ProblemDetails.ResponseBuilder
  fullName: FastEndpoints.ProblemDetails.ResponseBuilder
  type: Property
  source:
    id: ResponseBuilder
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 18
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe built-in function for transforming validation errors to a RFC7807 compatible problem details error response dto.\n"
  example: []
  syntax:
    content: public static Func<List<ValidationFailure>, HttpContext, int, object> ResponseBuilder { get; }
    parameters: []
    return:
      type: System.Func{System.Collections.Generic.List{FluentValidation.Results.ValidationFailure},Microsoft.AspNetCore.Http.HttpContext,System.Int32,System.Object}
    content.vb: Public Shared ReadOnly Property ResponseBuilder As Func(Of List(Of ValidationFailure), HttpContext, Integer, Object)
  overload: FastEndpoints.ProblemDetails.ResponseBuilder*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: FastEndpoints.ProblemDetails.AllowDuplicates
  commentId: P:FastEndpoints.ProblemDetails.AllowDuplicates
  id: AllowDuplicates
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: AllowDuplicates
  nameWithType: ProblemDetails.AllowDuplicates
  fullName: FastEndpoints.ProblemDetails.AllowDuplicates
  type: Property
  source:
    id: AllowDuplicates
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 24
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ncontrols whether duplicate errors with the same name should be allowed.\n"
  example: []
  syntax:
    content: public static bool AllowDuplicates { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared WriteOnly Property AllowDuplicates As Boolean
  overload: FastEndpoints.ProblemDetails.AllowDuplicates*
  modifiers.csharp:
  - public
  - static
  - set
  modifiers.vb:
  - Public
  - Shared
  - WriteOnly
- uid: FastEndpoints.ProblemDetails.TypeValue
  commentId: P:FastEndpoints.ProblemDetails.TypeValue
  id: TypeValue
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: TypeValue
  nameWithType: ProblemDetails.TypeValue
  fullName: FastEndpoints.ProblemDetails.TypeValue
  type: Property
  source:
    id: TypeValue
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 29
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nglobally sets the &apos;Type&apos; value of the problem details dto.\n"
  example: []
  syntax:
    content: public static string TypeValue { set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared WriteOnly Property TypeValue As String
  overload: FastEndpoints.ProblemDetails.TypeValue*
  modifiers.csharp:
  - public
  - static
  - set
  modifiers.vb:
  - Public
  - Shared
  - WriteOnly
- uid: FastEndpoints.ProblemDetails.TitleValue
  commentId: P:FastEndpoints.ProblemDetails.TitleValue
  id: TitleValue
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: TitleValue
  nameWithType: ProblemDetails.TitleValue
  fullName: FastEndpoints.ProblemDetails.TitleValue
  type: Property
  source:
    id: TitleValue
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 34
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nglobally sets the &apos;Title&apos; value of the problem details dto.\n"
  example: []
  syntax:
    content: public static string TitleValue { set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared WriteOnly Property TitleValue As String
  overload: FastEndpoints.ProblemDetails.TitleValue*
  modifiers.csharp:
  - public
  - static
  - set
  modifiers.vb:
  - Public
  - Shared
  - WriteOnly
- uid: FastEndpoints.ProblemDetails.Type
  commentId: P:FastEndpoints.ProblemDetails.Type
  id: Type
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ProblemDetails.Type
  fullName: FastEndpoints.ProblemDetails.Type
  type: Property
  source:
    id: Type
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 37
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Type As String
  overload: FastEndpoints.ProblemDetails.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: FastEndpoints.ProblemDetails.Title
  commentId: P:FastEndpoints.ProblemDetails.Title
  id: Title
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ProblemDetails.Title
  fullName: FastEndpoints.ProblemDetails.Title
  type: Property
  source:
    id: Title
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 38
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Title As String
  overload: FastEndpoints.ProblemDetails.Title*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: FastEndpoints.ProblemDetails.Status
  commentId: P:FastEndpoints.ProblemDetails.Status
  id: Status
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ProblemDetails.Status
  fullName: FastEndpoints.ProblemDetails.Status
  type: Property
  source:
    id: Status
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 40
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public int Status { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Status As Integer
  overload: FastEndpoints.ProblemDetails.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.ProblemDetails.Instance
  commentId: P:FastEndpoints.ProblemDetails.Instance
  id: Instance
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ProblemDetails.Instance
  fullName: FastEndpoints.ProblemDetails.Instance
  type: Property
  source:
    id: Instance
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 41
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public string Instance { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Instance As String
  overload: FastEndpoints.ProblemDetails.Instance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.ProblemDetails.TraceId
  commentId: P:FastEndpoints.ProblemDetails.TraceId
  id: TraceId
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: TraceId
  nameWithType: ProblemDetails.TraceId
  fullName: FastEndpoints.ProblemDetails.TraceId
  type: Property
  source:
    id: TraceId
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 42
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public string TraceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TraceId As String
  overload: FastEndpoints.ProblemDetails.TraceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.ProblemDetails.Errors
  commentId: P:FastEndpoints.ProblemDetails.Errors
  id: Errors
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: ProblemDetails.Errors
  fullName: FastEndpoints.ProblemDetails.Errors
  type: Property
  source:
    id: Errors
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 43
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public IEnumerable<ProblemDetails.Error> Errors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{FastEndpoints.ProblemDetails.Error}
    content.vb: Public Property Errors As IEnumerable(Of ProblemDetails.Error)
  overload: FastEndpoints.ProblemDetails.Errors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.ProblemDetails.#ctor(System.Collections.Generic.List{FluentValidation.Results.ValidationFailure},System.String,System.String,System.Int32)
  commentId: M:FastEndpoints.ProblemDetails.#ctor(System.Collections.Generic.List{FluentValidation.Results.ValidationFailure},System.String,System.String,System.Int32)
  id: '#ctor(System.Collections.Generic.List{FluentValidation.Results.ValidationFailure},System.String,System.String,System.Int32)'
  parent: FastEndpoints.ProblemDetails
  langs:
  - csharp
  - vb
  name: ProblemDetails(List<ValidationFailure>, String, String, Int32)
  nameWithType: ProblemDetails.ProblemDetails(List<ValidationFailure>, String, String, Int32)
  fullName: FastEndpoints.ProblemDetails.ProblemDetails(System.Collections.Generic.List<FluentValidation.Results.ValidationFailure>, System.String, System.String, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\DTOs\ProblemDetails.cs
    startLine: 45
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public ProblemDetails(List<ValidationFailure> failures, string instance, string traceId, int statusCode)
    parameters:
    - id: failures
      type: System.Collections.Generic.List{FluentValidation.Results.ValidationFailure}
    - id: instance
      type: System.String
    - id: traceId
      type: System.String
    - id: statusCode
      type: System.Int32
    content.vb: Public Sub New(failures As List(Of ValidationFailure), instance As String, traceId As String, statusCode As Integer)
  overload: FastEndpoints.ProblemDetails.#ctor*
  nameWithType.vb: ProblemDetails.ProblemDetails(List(Of ValidationFailure), String, String, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.ProblemDetails.ProblemDetails(System.Collections.Generic.List(Of FluentValidation.Results.ValidationFailure), System.String, System.String, System.Int32)
  name.vb: ProblemDetails(List(Of ValidationFailure), String, String, Int32)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.ProblemDetails.ResponseBuilder*
  commentId: Overload:FastEndpoints.ProblemDetails.ResponseBuilder
  name: ResponseBuilder
  nameWithType: ProblemDetails.ResponseBuilder
  fullName: FastEndpoints.ProblemDetails.ResponseBuilder
- uid: System.Func{System.Collections.Generic.List{FluentValidation.Results.ValidationFailure},Microsoft.AspNetCore.Http.HttpContext,System.Int32,System.Object}
  commentId: T:System.Func{System.Collections.Generic.List{FluentValidation.Results.ValidationFailure},Microsoft.AspNetCore.Http.HttpContext,System.Int32,System.Object}
  parent: System
  definition: System.Func`4
  name: Func<List<ValidationFailure>, HttpContext, Int32, Object>
  nameWithType: Func<List<ValidationFailure>, HttpContext, Int32, Object>
  fullName: System.Func<System.Collections.Generic.List<FluentValidation.Results.ValidationFailure>, Microsoft.AspNetCore.Http.HttpContext, System.Int32, System.Object>
  nameWithType.vb: Func(Of List(Of ValidationFailure), HttpContext, Int32, Object)
  fullName.vb: System.Func(Of System.Collections.Generic.List(Of FluentValidation.Results.ValidationFailure), Microsoft.AspNetCore.Http.HttpContext, System.Int32, System.Object)
  name.vb: Func(Of List(Of ValidationFailure), HttpContext, Int32, Object)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ProblemDetails.AllowDuplicates*
  commentId: Overload:FastEndpoints.ProblemDetails.AllowDuplicates
  name: AllowDuplicates
  nameWithType: ProblemDetails.AllowDuplicates
  fullName: FastEndpoints.ProblemDetails.AllowDuplicates
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: FastEndpoints.ProblemDetails.TypeValue*
  commentId: Overload:FastEndpoints.ProblemDetails.TypeValue
  name: TypeValue
  nameWithType: ProblemDetails.TypeValue
  fullName: FastEndpoints.ProblemDetails.TypeValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FastEndpoints.ProblemDetails.TitleValue*
  commentId: Overload:FastEndpoints.ProblemDetails.TitleValue
  name: TitleValue
  nameWithType: ProblemDetails.TitleValue
  fullName: FastEndpoints.ProblemDetails.TitleValue
- uid: FastEndpoints.ProblemDetails.Type*
  commentId: Overload:FastEndpoints.ProblemDetails.Type
  name: Type
  nameWithType: ProblemDetails.Type
  fullName: FastEndpoints.ProblemDetails.Type
- uid: FastEndpoints.ProblemDetails.Title*
  commentId: Overload:FastEndpoints.ProblemDetails.Title
  name: Title
  nameWithType: ProblemDetails.Title
  fullName: FastEndpoints.ProblemDetails.Title
- uid: FastEndpoints.ProblemDetails.Status*
  commentId: Overload:FastEndpoints.ProblemDetails.Status
  name: Status
  nameWithType: ProblemDetails.Status
  fullName: FastEndpoints.ProblemDetails.Status
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FastEndpoints.ProblemDetails.Instance*
  commentId: Overload:FastEndpoints.ProblemDetails.Instance
  name: Instance
  nameWithType: ProblemDetails.Instance
  fullName: FastEndpoints.ProblemDetails.Instance
- uid: FastEndpoints.ProblemDetails.TraceId*
  commentId: Overload:FastEndpoints.ProblemDetails.TraceId
  name: TraceId
  nameWithType: ProblemDetails.TraceId
  fullName: FastEndpoints.ProblemDetails.TraceId
- uid: FastEndpoints.ProblemDetails.Errors*
  commentId: Overload:FastEndpoints.ProblemDetails.Errors
  name: Errors
  nameWithType: ProblemDetails.Errors
  fullName: FastEndpoints.ProblemDetails.Errors
- uid: System.Collections.Generic.IEnumerable{FastEndpoints.ProblemDetails.Error}
  commentId: T:System.Collections.Generic.IEnumerable{FastEndpoints.ProblemDetails.Error}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ProblemDetails.Error>
  nameWithType: IEnumerable<ProblemDetails.Error>
  fullName: System.Collections.Generic.IEnumerable<FastEndpoints.ProblemDetails.Error>
  nameWithType.vb: IEnumerable(Of ProblemDetails.Error)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FastEndpoints.ProblemDetails.Error)
  name.vb: IEnumerable(Of ProblemDetails.Error)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.ProblemDetails.Error
    name: ProblemDetails.Error
    nameWithType: ProblemDetails.Error
    fullName: FastEndpoints.ProblemDetails.Error
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.ProblemDetails.Error
    name: ProblemDetails.Error
    nameWithType: ProblemDetails.Error
    fullName: FastEndpoints.ProblemDetails.Error
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: FastEndpoints.ProblemDetails.#ctor*
  commentId: Overload:FastEndpoints.ProblemDetails.#ctor
  name: ProblemDetails
  nameWithType: ProblemDetails.ProblemDetails
  fullName: FastEndpoints.ProblemDetails.ProblemDetails
- uid: System.Collections.Generic.List{FluentValidation.Results.ValidationFailure}
  commentId: T:System.Collections.Generic.List{FluentValidation.Results.ValidationFailure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ValidationFailure>
  nameWithType: List<ValidationFailure>
  fullName: System.Collections.Generic.List<FluentValidation.Results.ValidationFailure>
  nameWithType.vb: List(Of ValidationFailure)
  fullName.vb: System.Collections.Generic.List(Of FluentValidation.Results.ValidationFailure)
  name.vb: List(Of ValidationFailure)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
