### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Security.TokenResponse
  commentId: T:FastEndpoints.Security.TokenResponse
  id: TokenResponse
  parent: FastEndpoints.Security
  children:
  - FastEndpoints.Security.TokenResponse.AccessExpiry
  - FastEndpoints.Security.TokenResponse.AccessToken
  - FastEndpoints.Security.TokenResponse.RefreshExpiry
  langs:
  - csharp
  - vb
  name: TokenResponse
  nameWithType: TokenResponse
  fullName: FastEndpoints.Security.TokenResponse
  type: Class
  source:
    id: TokenResponse
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\RefreshTokens\TokenResponse.cs
    startLine: 7
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nbase dto for access/refresh token responses\n"
  example: []
  syntax:
    content: 'public class TokenResponse : TokenRequest'
    content.vb: >-
      Public Class TokenResponse

          Inherits TokenRequest
  inheritance:
  - System.Object
  - FastEndpoints.Security.TokenRequest
  inheritedMembers:
  - FastEndpoints.Security.TokenRequest.UserId
  - FastEndpoints.Security.TokenRequest.RefreshToken
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FastEndpoints.Security.TokenResponse.AccessToken
  commentId: P:FastEndpoints.Security.TokenResponse.AccessToken
  id: AccessToken
  parent: FastEndpoints.Security.TokenResponse
  langs:
  - csharp
  - vb
  name: AccessToken
  nameWithType: TokenResponse.AccessToken
  fullName: FastEndpoints.Security.TokenResponse.AccessToken
  type: Property
  source:
    id: AccessToken
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\RefreshTokens\TokenResponse.cs
    startLine: 12
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nthe jwt access token which will be valid for the duration specified by <xref href=\"FastEndpoints.Security.TokenResponse.AccessExpiry\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public string AccessToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AccessToken As String
  overload: FastEndpoints.Security.TokenResponse.AccessToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.Security.TokenResponse.AccessExpiry
  commentId: P:FastEndpoints.Security.TokenResponse.AccessExpiry
  id: AccessExpiry
  parent: FastEndpoints.Security.TokenResponse
  langs:
  - csharp
  - vb
  name: AccessExpiry
  nameWithType: TokenResponse.AccessExpiry
  fullName: FastEndpoints.Security.TokenResponse.AccessExpiry
  type: Property
  source:
    id: AccessExpiry
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\RefreshTokens\TokenResponse.cs
    startLine: 17
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nthe expiry date-time of the access token\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public DateTime AccessExpiry { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property AccessExpiry As Date
  overload: FastEndpoints.Security.TokenResponse.AccessExpiry*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: FastEndpoints.Security.TokenResponse.RefreshExpiry
  commentId: P:FastEndpoints.Security.TokenResponse.RefreshExpiry
  id: RefreshExpiry
  parent: FastEndpoints.Security.TokenResponse
  langs:
  - csharp
  - vb
  name: RefreshExpiry
  nameWithType: TokenResponse.RefreshExpiry
  fullName: FastEndpoints.Security.TokenResponse.RefreshExpiry
  type: Property
  source:
    id: RefreshExpiry
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\RefreshTokens\TokenResponse.cs
    startLine: 22
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nthe expiry date-time of the refresh token\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public DateTime RefreshExpiry { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property RefreshExpiry As Date
  overload: FastEndpoints.Security.TokenResponse.RefreshExpiry*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: FastEndpoints.Security
  commentId: N:FastEndpoints.Security
  name: FastEndpoints.Security
  nameWithType: FastEndpoints.Security
  fullName: FastEndpoints.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.Security.TokenRequest
  commentId: T:FastEndpoints.Security.TokenRequest
  parent: FastEndpoints.Security
  name: TokenRequest
  nameWithType: TokenRequest
  fullName: FastEndpoints.Security.TokenRequest
- uid: FastEndpoints.Security.TokenRequest.UserId
  commentId: P:FastEndpoints.Security.TokenRequest.UserId
  parent: FastEndpoints.Security.TokenRequest
  name: UserId
  nameWithType: TokenRequest.UserId
  fullName: FastEndpoints.Security.TokenRequest.UserId
- uid: FastEndpoints.Security.TokenRequest.RefreshToken
  commentId: P:FastEndpoints.Security.TokenRequest.RefreshToken
  parent: FastEndpoints.Security.TokenRequest
  name: RefreshToken
  nameWithType: TokenRequest.RefreshToken
  fullName: FastEndpoints.Security.TokenRequest.RefreshToken
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Security.TokenResponse.AccessExpiry
  commentId: P:FastEndpoints.Security.TokenResponse.AccessExpiry
  isExternal: true
- uid: FastEndpoints.Security.TokenResponse.AccessToken*
  commentId: Overload:FastEndpoints.Security.TokenResponse.AccessToken
  name: AccessToken
  nameWithType: TokenResponse.AccessToken
  fullName: FastEndpoints.Security.TokenResponse.AccessToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FastEndpoints.Security.TokenResponse.AccessExpiry*
  commentId: Overload:FastEndpoints.Security.TokenResponse.AccessExpiry
  name: AccessExpiry
  nameWithType: TokenResponse.AccessExpiry
  fullName: FastEndpoints.Security.TokenResponse.AccessExpiry
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: FastEndpoints.Security.TokenResponse.RefreshExpiry*
  commentId: Overload:FastEndpoints.Security.TokenResponse.RefreshExpiry
  name: RefreshExpiry
  nameWithType: TokenResponse.RefreshExpiry
  fullName: FastEndpoints.Security.TokenResponse.RefreshExpiry
