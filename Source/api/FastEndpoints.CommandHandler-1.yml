### YamlMime:ManagedReference
items:
- uid: FastEndpoints.CommandHandler`1
  commentId: T:FastEndpoints.CommandHandler`1
  id: CommandHandler`1
  parent: FastEndpoints
  children:
  - FastEndpoints.CommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: CommandHandler<TCommand>
  nameWithType: CommandHandler<TCommand>
  fullName: FastEndpoints.CommandHandler<TCommand>
  type: Class
  source:
    id: CommandHandler
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Commands\CommandHandler.cs
    startLine: 50
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ninherit this base class if you&apos;d like to manipulate validation state of the calling endpoint from within the command handler.\n"
  example: []
  syntax:
    content: 'public abstract class CommandHandler<TCommand> : CommandHandlerBase<TCommand>, ICommandHandler<TCommand>, ICommandHandler where TCommand : ICommand'
    typeParameters:
    - id: TCommand
      description: the type of the command that will be handled by this command handler
    content.vb: >-
      Public MustInherit Class CommandHandler(Of TCommand As ICommand)

          Inherits CommandHandlerBase(Of TCommand)

          Implements ICommandHandler(Of TCommand), ICommandHandler
  inheritance:
  - System.Object
  - FastEndpoints.CommandHandlerBase{{TCommand}}
  implements:
  - FastEndpoints.ICommandHandler{{TCommand}}
  - FastEndpoints.ICommandHandler
  inheritedMembers:
  - FastEndpoints.CommandHandlerBase{{TCommand}}.ValidationFailures
  - FastEndpoints.CommandHandlerBase{{TCommand}}.ValidationFailed
  - FastEndpoints.CommandHandlerBase{{TCommand}}.AddError(System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.CommandHandlerBase{{TCommand}}.AddError(System.Linq.Expressions.Expression{System.Func{{TCommand},System.Object}},System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.CommandHandlerBase{{TCommand}}.ThrowError(System.String)
  - FastEndpoints.CommandHandlerBase{{TCommand}}.ThrowError(System.Linq.Expressions.Expression{System.Func{{TCommand},System.Object}},System.String)
  - FastEndpoints.CommandHandlerBase{{TCommand}}.ThrowIfAnyErrors
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CommandHandler(Of TCommand)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: FastEndpoints.CommandHandler(Of TCommand)
  name.vb: CommandHandler(Of TCommand)
- uid: FastEndpoints.CommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.CommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
  id: ExecuteAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.CommandHandler`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync(TCommand, CancellationToken)
  nameWithType: CommandHandler<TCommand>.ExecuteAsync(TCommand, CancellationToken)
  fullName: FastEndpoints.CommandHandler<TCommand>.ExecuteAsync(TCommand, System.Threading.CancellationToken)
  type: Method
  source:
    id: ExecuteAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Commands\CommandHandler.cs
    startLine: 53
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public abstract Task ExecuteAsync(TCommand command, CancellationToken ct = default(CancellationToken))
    parameters:
    - id: command
      type: '{TCommand}'
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function ExecuteAsync(command As TCommand, ct As CancellationToken = Nothing) As Task
  overload: FastEndpoints.CommandHandler`1.ExecuteAsync*
  implements:
  - FastEndpoints.ICommandHandler{{TCommand}}.ExecuteAsync({TCommand},System.Threading.CancellationToken)
  nameWithType.vb: CommandHandler(Of TCommand).ExecuteAsync(TCommand, CancellationToken)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: FastEndpoints.CommandHandler(Of TCommand).ExecuteAsync(TCommand, System.Threading.CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.CommandHandlerBase{{TCommand}}
  commentId: T:FastEndpoints.CommandHandlerBase{`0}
  parent: FastEndpoints
  definition: FastEndpoints.CommandHandlerBase`1
  name: CommandHandlerBase<TCommand>
  nameWithType: CommandHandlerBase<TCommand>
  fullName: FastEndpoints.CommandHandlerBase<TCommand>
  nameWithType.vb: CommandHandlerBase(Of TCommand)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand)
  name.vb: CommandHandlerBase(Of TCommand)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1
    name: CommandHandlerBase
    nameWithType: CommandHandlerBase
    fullName: FastEndpoints.CommandHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1
    name: CommandHandlerBase
    nameWithType: CommandHandlerBase
    fullName: FastEndpoints.CommandHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ICommandHandler{{TCommand}}
  commentId: T:FastEndpoints.ICommandHandler{`0}
  parent: FastEndpoints
  definition: FastEndpoints.ICommandHandler`1
  name: ICommandHandler<TCommand>
  nameWithType: ICommandHandler<TCommand>
  fullName: FastEndpoints.ICommandHandler<TCommand>
  nameWithType.vb: ICommandHandler(Of TCommand)
  fullName.vb: FastEndpoints.ICommandHandler(Of TCommand)
  name.vb: ICommandHandler(Of TCommand)
  spec.csharp:
  - uid: FastEndpoints.ICommandHandler`1
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: FastEndpoints.ICommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.ICommandHandler`1
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: FastEndpoints.ICommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ICommandHandler
  commentId: T:FastEndpoints.ICommandHandler
  parent: FastEndpoints
  name: ICommandHandler
  nameWithType: ICommandHandler
  fullName: FastEndpoints.ICommandHandler
- uid: FastEndpoints.CommandHandlerBase{{TCommand}}.ValidationFailures
  commentId: P:FastEndpoints.CommandHandlerBase{`0}.ValidationFailures
  parent: FastEndpoints.CommandHandlerBase{{TCommand}}
  definition: FastEndpoints.CommandHandlerBase`1.ValidationFailures
  name: ValidationFailures
  nameWithType: CommandHandlerBase<TCommand>.ValidationFailures
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ValidationFailures
  nameWithType.vb: CommandHandlerBase(Of TCommand).ValidationFailures
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ValidationFailures
- uid: FastEndpoints.CommandHandlerBase{{TCommand}}.ValidationFailed
  commentId: P:FastEndpoints.CommandHandlerBase{`0}.ValidationFailed
  parent: FastEndpoints.CommandHandlerBase{{TCommand}}
  definition: FastEndpoints.CommandHandlerBase`1.ValidationFailed
  name: ValidationFailed
  nameWithType: CommandHandlerBase<TCommand>.ValidationFailed
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ValidationFailed
  nameWithType.vb: CommandHandlerBase(Of TCommand).ValidationFailed
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ValidationFailed
- uid: FastEndpoints.CommandHandlerBase{{TCommand}}.AddError(System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.CommandHandlerBase{`0}.AddError(System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.CommandHandlerBase{{TCommand}}
  definition: FastEndpoints.CommandHandlerBase`1.AddError(System.String,System.String,FluentValidation.Severity)
  name: AddError(String, String, Severity)
  nameWithType: CommandHandlerBase<TCommand>.AddError(String, String, Severity)
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.AddError(System.String, System.String, FluentValidation.Severity)
  nameWithType.vb: CommandHandlerBase(Of TCommand).AddError(String, String, Severity)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).AddError(System.String, System.String, FluentValidation.Severity)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: CommandHandlerBase<TCommand>.AddError
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: CommandHandlerBase(Of TCommand).AddError
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandlerBase{{TCommand}}.AddError(System.Linq.Expressions.Expression{System.Func{{TCommand},System.Object}},System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.CommandHandlerBase{`0}.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.CommandHandlerBase{{TCommand}}
  definition: FastEndpoints.CommandHandlerBase`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  name: AddError(Expression<Func<TCommand, Object>>, String, String, Severity)
  nameWithType: CommandHandlerBase<TCommand>.AddError(Expression<Func<TCommand, Object>>, String, String, Severity)
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.AddError(System.Linq.Expressions.Expression<System.Func<TCommand, System.Object>>, System.String, System.String, FluentValidation.Severity)
  nameWithType.vb: CommandHandlerBase(Of TCommand).AddError(Expression(Of Func(Of TCommand, Object)), String, String, Severity)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).AddError(System.Linq.Expressions.Expression(Of System.Func(Of TCommand, System.Object)), System.String, System.String, FluentValidation.Severity)
  name.vb: AddError(Expression(Of Func(Of TCommand, Object)), String, String, Severity)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: CommandHandlerBase<TCommand>.AddError
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: CommandHandlerBase(Of TCommand).AddError
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandlerBase{{TCommand}}.ThrowError(System.String)
  commentId: M:FastEndpoints.CommandHandlerBase{`0}.ThrowError(System.String)
  parent: FastEndpoints.CommandHandlerBase{{TCommand}}
  definition: FastEndpoints.CommandHandlerBase`1.ThrowError(System.String)
  name: ThrowError(String)
  nameWithType: CommandHandlerBase<TCommand>.ThrowError(String)
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowError(System.String)
  nameWithType.vb: CommandHandlerBase(Of TCommand).ThrowError(String)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowError(System.String)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.String)
    name: ThrowError
    nameWithType: CommandHandlerBase<TCommand>.ThrowError
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.String)
    name: ThrowError
    nameWithType: CommandHandlerBase(Of TCommand).ThrowError
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandlerBase{{TCommand}}.ThrowError(System.Linq.Expressions.Expression{System.Func{{TCommand},System.Object}},System.String)
  commentId: M:FastEndpoints.CommandHandlerBase{`0}.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
  parent: FastEndpoints.CommandHandlerBase{{TCommand}}
  definition: FastEndpoints.CommandHandlerBase`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
  name: ThrowError(Expression<Func<TCommand, Object>>, String)
  nameWithType: CommandHandlerBase<TCommand>.ThrowError(Expression<Func<TCommand, Object>>, String)
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowError(System.Linq.Expressions.Expression<System.Func<TCommand, System.Object>>, System.String)
  nameWithType.vb: CommandHandlerBase(Of TCommand).ThrowError(Expression(Of Func(Of TCommand, Object)), String)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowError(System.Linq.Expressions.Expression(Of System.Func(Of TCommand, System.Object)), System.String)
  name.vb: ThrowError(Expression(Of Func(Of TCommand, Object)), String)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: CommandHandlerBase<TCommand>.ThrowError
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: CommandHandlerBase(Of TCommand).ThrowError
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandlerBase{{TCommand}}.ThrowIfAnyErrors
  commentId: M:FastEndpoints.CommandHandlerBase{`0}.ThrowIfAnyErrors
  parent: FastEndpoints.CommandHandlerBase{{TCommand}}
  definition: FastEndpoints.CommandHandlerBase`1.ThrowIfAnyErrors
  name: ThrowIfAnyErrors()
  nameWithType: CommandHandlerBase<TCommand>.ThrowIfAnyErrors()
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowIfAnyErrors()
  nameWithType.vb: CommandHandlerBase(Of TCommand).ThrowIfAnyErrors()
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowIfAnyErrors()
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: CommandHandlerBase<TCommand>.ThrowIfAnyErrors
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: CommandHandlerBase(Of TCommand).ThrowIfAnyErrors
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.CommandHandlerBase`1
  commentId: T:FastEndpoints.CommandHandlerBase`1
  name: CommandHandlerBase<TCommand>
  nameWithType: CommandHandlerBase<TCommand>
  fullName: FastEndpoints.CommandHandlerBase<TCommand>
  nameWithType.vb: CommandHandlerBase(Of TCommand)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand)
  name.vb: CommandHandlerBase(Of TCommand)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1
    name: CommandHandlerBase
    nameWithType: CommandHandlerBase
    fullName: FastEndpoints.CommandHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1
    name: CommandHandlerBase
    nameWithType: CommandHandlerBase
    fullName: FastEndpoints.CommandHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ICommandHandler`1
  commentId: T:FastEndpoints.ICommandHandler`1
  name: ICommandHandler<TCommand>
  nameWithType: ICommandHandler<TCommand>
  fullName: FastEndpoints.ICommandHandler<TCommand>
  nameWithType.vb: ICommandHandler(Of TCommand)
  fullName.vb: FastEndpoints.ICommandHandler(Of TCommand)
  name.vb: ICommandHandler(Of TCommand)
  spec.csharp:
  - uid: FastEndpoints.ICommandHandler`1
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: FastEndpoints.ICommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.ICommandHandler`1
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: FastEndpoints.ICommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandlerBase`1.ValidationFailures
  commentId: P:FastEndpoints.CommandHandlerBase`1.ValidationFailures
  name: ValidationFailures
  nameWithType: CommandHandlerBase<TCommand>.ValidationFailures
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ValidationFailures
  nameWithType.vb: CommandHandlerBase(Of TCommand).ValidationFailures
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ValidationFailures
- uid: FastEndpoints.CommandHandlerBase`1.ValidationFailed
  commentId: P:FastEndpoints.CommandHandlerBase`1.ValidationFailed
  name: ValidationFailed
  nameWithType: CommandHandlerBase<TCommand>.ValidationFailed
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ValidationFailed
  nameWithType.vb: CommandHandlerBase(Of TCommand).ValidationFailed
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ValidationFailed
- uid: FastEndpoints.CommandHandlerBase`1.AddError(System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.CommandHandlerBase`1.AddError(System.String,System.String,FluentValidation.Severity)
  isExternal: true
  name: AddError(String, String, Severity)
  nameWithType: CommandHandlerBase<TCommand>.AddError(String, String, Severity)
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.AddError(System.String, System.String, FluentValidation.Severity)
  nameWithType.vb: CommandHandlerBase(Of TCommand).AddError(String, String, Severity)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).AddError(System.String, System.String, FluentValidation.Severity)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: CommandHandlerBase<TCommand>.AddError
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: CommandHandlerBase(Of TCommand).AddError
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandlerBase`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.CommandHandlerBase`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  isExternal: true
  name: AddError(Expression<Func<TCommand, Object>>, String, String, Severity)
  nameWithType: CommandHandlerBase<TCommand>.AddError(Expression<Func<TCommand, Object>>, String, String, Severity)
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.AddError(System.Linq.Expressions.Expression<System.Func<TCommand, System.Object>>, System.String, System.String, FluentValidation.Severity)
  nameWithType.vb: CommandHandlerBase(Of TCommand).AddError(Expression(Of Func(Of TCommand, Object)), String, String, Severity)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).AddError(System.Linq.Expressions.Expression(Of System.Func(Of TCommand, System.Object)), System.String, System.String, FluentValidation.Severity)
  name.vb: AddError(Expression(Of Func(Of TCommand, Object)), String, String, Severity)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: CommandHandlerBase<TCommand>.AddError
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: CommandHandlerBase(Of TCommand).AddError
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.String)
  commentId: M:FastEndpoints.CommandHandlerBase`1.ThrowError(System.String)
  isExternal: true
  name: ThrowError(String)
  nameWithType: CommandHandlerBase<TCommand>.ThrowError(String)
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowError(System.String)
  nameWithType.vb: CommandHandlerBase(Of TCommand).ThrowError(String)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowError(System.String)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.String)
    name: ThrowError
    nameWithType: CommandHandlerBase<TCommand>.ThrowError
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.String)
    name: ThrowError
    nameWithType: CommandHandlerBase(Of TCommand).ThrowError
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
  commentId: M:FastEndpoints.CommandHandlerBase`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
  isExternal: true
  name: ThrowError(Expression<Func<TCommand, Object>>, String)
  nameWithType: CommandHandlerBase<TCommand>.ThrowError(Expression<Func<TCommand, Object>>, String)
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowError(System.Linq.Expressions.Expression<System.Func<TCommand, System.Object>>, System.String)
  nameWithType.vb: CommandHandlerBase(Of TCommand).ThrowError(Expression(Of Func(Of TCommand, Object)), String)
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowError(System.Linq.Expressions.Expression(Of System.Func(Of TCommand, System.Object)), System.String)
  name.vb: ThrowError(Expression(Of Func(Of TCommand, Object)), String)
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: CommandHandlerBase<TCommand>.ThrowError
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: CommandHandlerBase(Of TCommand).ThrowError
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandlerBase`1.ThrowIfAnyErrors
  commentId: M:FastEndpoints.CommandHandlerBase`1.ThrowIfAnyErrors
  name: ThrowIfAnyErrors()
  nameWithType: CommandHandlerBase<TCommand>.ThrowIfAnyErrors()
  fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowIfAnyErrors()
  nameWithType.vb: CommandHandlerBase(Of TCommand).ThrowIfAnyErrors()
  fullName.vb: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowIfAnyErrors()
  spec.csharp:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: CommandHandlerBase<TCommand>.ThrowIfAnyErrors
    fullName: FastEndpoints.CommandHandlerBase<TCommand>.ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.CommandHandlerBase`1.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: CommandHandlerBase(Of TCommand).ThrowIfAnyErrors
    fullName: FastEndpoints.CommandHandlerBase(Of TCommand).ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.CommandHandler`1.ExecuteAsync*
  commentId: Overload:FastEndpoints.CommandHandler`1.ExecuteAsync
  name: ExecuteAsync
  nameWithType: CommandHandler<TCommand>.ExecuteAsync
  fullName: FastEndpoints.CommandHandler<TCommand>.ExecuteAsync
  nameWithType.vb: CommandHandler(Of TCommand).ExecuteAsync
  fullName.vb: FastEndpoints.CommandHandler(Of TCommand).ExecuteAsync
- uid: FastEndpoints.ICommandHandler{{TCommand}}.ExecuteAsync({TCommand},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.ICommandHandler{`0}.ExecuteAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.ICommandHandler{{TCommand}}
  definition: FastEndpoints.ICommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
  name: ExecuteAsync(TCommand, CancellationToken)
  nameWithType: ICommandHandler<TCommand>.ExecuteAsync(TCommand, CancellationToken)
  fullName: FastEndpoints.ICommandHandler<TCommand>.ExecuteAsync(TCommand, System.Threading.CancellationToken)
  nameWithType.vb: ICommandHandler(Of TCommand).ExecuteAsync(TCommand, CancellationToken)
  fullName.vb: FastEndpoints.ICommandHandler(Of TCommand).ExecuteAsync(TCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.ICommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: ICommandHandler<TCommand>.ExecuteAsync
    fullName: FastEndpoints.ICommandHandler<TCommand>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.ICommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: ICommandHandler(Of TCommand).ExecuteAsync
    fullName: FastEndpoints.ICommandHandler(Of TCommand).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: FastEndpoints.ICommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.ICommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteAsync(TCommand, CancellationToken)
  nameWithType: ICommandHandler<TCommand>.ExecuteAsync(TCommand, CancellationToken)
  fullName: FastEndpoints.ICommandHandler<TCommand>.ExecuteAsync(TCommand, System.Threading.CancellationToken)
  nameWithType.vb: ICommandHandler(Of TCommand).ExecuteAsync(TCommand, CancellationToken)
  fullName.vb: FastEndpoints.ICommandHandler(Of TCommand).ExecuteAsync(TCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.ICommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: ICommandHandler<TCommand>.ExecuteAsync
    fullName: FastEndpoints.ICommandHandler<TCommand>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.ICommandHandler`1.ExecuteAsync(`0,System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: ICommandHandler(Of TCommand).ExecuteAsync
    fullName: FastEndpoints.ICommandHandler(Of TCommand).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
