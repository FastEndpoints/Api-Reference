### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IServerStreamCommandHandler`2
  commentId: T:FastEndpoints.IServerStreamCommandHandler`2
  id: IServerStreamCommandHandler`2
  parent: FastEndpoints
  children:
  - FastEndpoints.IServerStreamCommandHandler`2.ExecuteAsync(`0,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IServerStreamCommandHandler<TCommand, TResult>
  nameWithType: IServerStreamCommandHandler<TCommand, TResult>
  fullName: FastEndpoints.IServerStreamCommandHandler<TCommand, TResult>
  type: Interface
  source:
    id: IServerStreamCommandHandler
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Core\Interfaces\ICommandHandler.cs
    startLine: 43
  assemblies:
  - FastEndpoints.Messaging.Core
  namespace: FastEndpoints
  summary: "\ninterface to be implemented by a command handler for a given command type that returns <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TResult</code> stream\n"
  example: []
  syntax:
    content: >-
      public interface IServerStreamCommandHandler<in TCommand, TResult>

          where TCommand : class, IServerStreamCommand<TResult> where TResult : class
    typeParameters:
    - id: TCommand
      description: the type of the input command
    - id: TResult
      description: the type of the result stream returned
    content.vb: Public Interface IServerStreamCommandHandler(Of In TCommand As {Class, IServerStreamCommand(Of TResult)}, TResult As Class)
  nameWithType.vb: IServerStreamCommandHandler(Of TCommand, TResult)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: FastEndpoints.IServerStreamCommandHandler(Of TCommand, TResult)
  name.vb: IServerStreamCommandHandler(Of TCommand, TResult)
- uid: FastEndpoints.IServerStreamCommandHandler`2.ExecuteAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IServerStreamCommandHandler`2.ExecuteAsync(`0,System.Threading.CancellationToken)
  id: ExecuteAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.IServerStreamCommandHandler`2
  langs:
  - csharp
  - vb
  name: ExecuteAsync(TCommand, CancellationToken)
  nameWithType: IServerStreamCommandHandler<TCommand, TResult>.ExecuteAsync(TCommand, CancellationToken)
  fullName: FastEndpoints.IServerStreamCommandHandler<TCommand, TResult>.ExecuteAsync(TCommand, System.Threading.CancellationToken)
  type: Method
  source:
    id: ExecuteAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Core\Interfaces\ICommandHandler.cs
    startLine: 53
  assemblies:
  - FastEndpoints.Messaging.Core
  namespace: FastEndpoints
  summary: "\nreceives a command and returns a stream of <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TResult</code>.\n"
  example: []
  syntax:
    content: IAsyncEnumerable<TResult> ExecuteAsync(TCommand command, CancellationToken ct)
    parameters:
    - id: command
      type: '{TCommand}'
      description: the input command object
    - id: ct
      type: System.Threading.CancellationToken
      description: optional cancellation token
    return:
      type: System.Collections.Generic.IAsyncEnumerable{{TResult}}
    content.vb: Function ExecuteAsync(command As TCommand, ct As CancellationToken) As IAsyncEnumerable(Of TResult)
  overload: FastEndpoints.IServerStreamCommandHandler`2.ExecuteAsync*
  nameWithType.vb: IServerStreamCommandHandler(Of TCommand, TResult).ExecuteAsync(TCommand, CancellationToken)
  fullName.vb: FastEndpoints.IServerStreamCommandHandler(Of TCommand, TResult).ExecuteAsync(TCommand, System.Threading.CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IServerStreamCommandHandler`2.ExecuteAsync*
  commentId: Overload:FastEndpoints.IServerStreamCommandHandler`2.ExecuteAsync
  name: ExecuteAsync
  nameWithType: IServerStreamCommandHandler<TCommand, TResult>.ExecuteAsync
  fullName: FastEndpoints.IServerStreamCommandHandler<TCommand, TResult>.ExecuteAsync
  nameWithType.vb: IServerStreamCommandHandler(Of TCommand, TResult).ExecuteAsync
  fullName.vb: FastEndpoints.IServerStreamCommandHandler(Of TCommand, TResult).ExecuteAsync
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IAsyncEnumerable{{TResult}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<TResult>
  nameWithType: IAsyncEnumerable<TResult>
  fullName: System.Collections.Generic.IAsyncEnumerable<TResult>
  nameWithType.vb: IAsyncEnumerable(Of TResult)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of TResult)
  name.vb: IAsyncEnumerable(Of TResult)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
