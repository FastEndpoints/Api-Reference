### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IServiceResolver
  commentId: T:FastEndpoints.IServiceResolver
  id: IServiceResolver
  parent: FastEndpoints
  children:
  - FastEndpoints.IServiceResolver.CreateInstance(Type,System.Nullable{IServiceProvider})
  - FastEndpoints.IServiceResolver.CreateSingleton(Type)
  langs:
  - csharp
  - vb
  name: IServiceResolver
  nameWithType: IServiceResolver
  fullName: FastEndpoints.IServiceResolver
  type: Interface
  source:
    id: IServiceResolver
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Config\IServiceResolver.cs
    startLine: 52
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ninterface used by fastendpoints for resolving services from the DI container.\nimplement this interface and register the implementation in MS DI for customizing service resolving.\n"
  example: []
  syntax:
    content: 'public interface IServiceResolver : IServiceResolverBase'
    content.vb: >-
      Public Interface IServiceResolver

          Inherits IServiceResolverBase
  inheritedMembers:
  - FastEndpoints.IServiceResolverBase.CreateScope
  - FastEndpoints.IServiceResolverBase.TryResolve``1
  - FastEndpoints.IServiceResolverBase.TryResolve(Type)
  - FastEndpoints.IServiceResolverBase.Resolve``1
  - FastEndpoints.IServiceResolverBase.Resolve(Type)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: FastEndpoints.IServiceResolver.CreateInstance(Type,System.Nullable{IServiceProvider})
  commentId: M:FastEndpoints.IServiceResolver.CreateInstance(Type,System.Nullable{IServiceProvider})
  id: CreateInstance(Type,System.Nullable{IServiceProvider})
  parent: FastEndpoints.IServiceResolver
  langs:
  - csharp
  - vb
  name: CreateInstance(Type, Nullable<IServiceProvider>)
  nameWithType: IServiceResolver.CreateInstance(Type, Nullable<IServiceProvider>)
  fullName: FastEndpoints.IServiceResolver.CreateInstance(Type, System.Nullable<IServiceProvider>)
  type: Method
  source:
    id: CreateInstance
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Config\IServiceResolver.cs
    startLine: 59
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ncreate an instance of a given type (which may not be registered in the DI container). this method will be called repeatedly per request. so a cached delegate/compiled expression such as <see cref=\"!:ActivatorUtilities.CreateFactory(Type, Type[])\"></see> should be used for instance creation.\n"
  example: []
  syntax:
    content: object CreateInstance(Type type, IServiceProvider? serviceProvider = null)
    parameters:
    - id: type
      type: Type
      description: the type to create an instance of
    - id: serviceProvider
      type: System.Nullable{IServiceProvider}
      description: optional service provider
    return:
      type: System.Object
    content.vb: Function CreateInstance(type As Type, serviceProvider As IServiceProvider? = Nothing) As Object
  overload: FastEndpoints.IServiceResolver.CreateInstance*
  nameWithType.vb: IServiceResolver.CreateInstance(Type, Nullable(Of IServiceProvider))
  fullName.vb: FastEndpoints.IServiceResolver.CreateInstance(Type, System.Nullable(Of IServiceProvider))
  name.vb: CreateInstance(Type, Nullable(Of IServiceProvider))
- uid: FastEndpoints.IServiceResolver.CreateSingleton(Type)
  commentId: M:FastEndpoints.IServiceResolver.CreateSingleton(Type)
  id: CreateSingleton(Type)
  parent: FastEndpoints.IServiceResolver
  langs:
  - csharp
  - vb
  name: CreateSingleton(Type)
  nameWithType: IServiceResolver.CreateSingleton(Type)
  fullName: FastEndpoints.IServiceResolver.CreateSingleton(Type)
  type: Method
  source:
    id: CreateSingleton
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Config\IServiceResolver.cs
    startLine: 65
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ncreate an instance of a given type (which may not be registered in the DI container) which will be used as a singleton. a utility such as <see cref=\"!:ActivatorUtilities.CreateInstance(IServiceProvider, Type, object[])\"></see> may be used.\n"
  example: []
  syntax:
    content: object CreateSingleton(Type type)
    parameters:
    - id: type
      type: Type
      description: the type to create an instance of
    return:
      type: System.Object
    content.vb: Function CreateSingleton(type As Type) As Object
  overload: FastEndpoints.IServiceResolver.CreateSingleton*
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IServiceResolverBase.CreateScope
  commentId: M:FastEndpoints.IServiceResolverBase.CreateScope
  parent: FastEndpoints.IServiceResolverBase
  name: CreateScope()
  nameWithType: IServiceResolverBase.CreateScope()
  fullName: FastEndpoints.IServiceResolverBase.CreateScope()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.CreateScope
    name: CreateScope
    nameWithType: IServiceResolverBase.CreateScope
    fullName: FastEndpoints.IServiceResolverBase.CreateScope
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.CreateScope
    name: CreateScope
    nameWithType: IServiceResolverBase.CreateScope
    fullName: FastEndpoints.IServiceResolverBase.CreateScope
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IServiceResolverBase.TryResolve``1
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve``1
  parent: FastEndpoints.IServiceResolverBase
  name: TryResolve<TService>()
  nameWithType: IServiceResolverBase.TryResolve<TService>()
  fullName: FastEndpoints.IServiceResolverBase.TryResolve<TService>()
  nameWithType.vb: IServiceResolverBase.TryResolve(Of TService)()
  fullName.vb: FastEndpoints.IServiceResolverBase.TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1
    name: TryResolve<TService>
    nameWithType: IServiceResolverBase.TryResolve<TService>
    fullName: FastEndpoints.IServiceResolverBase.TryResolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve``1
    name: TryResolve(Of TService)
    nameWithType: IServiceResolverBase.TryResolve(Of TService)
    fullName: FastEndpoints.IServiceResolverBase.TryResolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IServiceResolverBase.TryResolve(Type)
  commentId: M:FastEndpoints.IServiceResolverBase.TryResolve(Type)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  name: TryResolve(Type)
  nameWithType: IServiceResolverBase.TryResolve(Type)
  fullName: FastEndpoints.IServiceResolverBase.TryResolve(Type)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(Type)
    name: TryResolve
    nameWithType: IServiceResolverBase.TryResolve
    fullName: FastEndpoints.IServiceResolverBase.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.TryResolve(Type)
    name: TryResolve
    nameWithType: IServiceResolverBase.TryResolve
    fullName: FastEndpoints.IServiceResolverBase.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IServiceResolverBase.Resolve``1
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve``1
  parent: FastEndpoints.IServiceResolverBase
  name: Resolve<TService>()
  nameWithType: IServiceResolverBase.Resolve<TService>()
  fullName: FastEndpoints.IServiceResolverBase.Resolve<TService>()
  nameWithType.vb: IServiceResolverBase.Resolve(Of TService)()
  fullName.vb: FastEndpoints.IServiceResolverBase.Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1
    name: Resolve<TService>
    nameWithType: IServiceResolverBase.Resolve<TService>
    fullName: FastEndpoints.IServiceResolverBase.Resolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve``1
    name: Resolve(Of TService)
    nameWithType: IServiceResolverBase.Resolve(Of TService)
    fullName: FastEndpoints.IServiceResolverBase.Resolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IServiceResolverBase.Resolve(Type)
  commentId: M:FastEndpoints.IServiceResolverBase.Resolve(Type)
  parent: FastEndpoints.IServiceResolverBase
  isExternal: true
  name: Resolve(Type)
  nameWithType: IServiceResolverBase.Resolve(Type)
  fullName: FastEndpoints.IServiceResolverBase.Resolve(Type)
  spec.csharp:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(Type)
    name: Resolve
    nameWithType: IServiceResolverBase.Resolve
    fullName: FastEndpoints.IServiceResolverBase.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IServiceResolverBase.Resolve(Type)
    name: Resolve
    nameWithType: IServiceResolverBase.Resolve
    fullName: FastEndpoints.IServiceResolverBase.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IServiceResolverBase
  commentId: T:FastEndpoints.IServiceResolverBase
  parent: FastEndpoints
  name: IServiceResolverBase
  nameWithType: IServiceResolverBase
  fullName: FastEndpoints.IServiceResolverBase
- uid: FastEndpoints.IServiceResolver.CreateInstance*
  commentId: Overload:FastEndpoints.IServiceResolver.CreateInstance
  name: CreateInstance
  nameWithType: IServiceResolver.CreateInstance
  fullName: FastEndpoints.IServiceResolver.CreateInstance
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: System.Nullable{IServiceProvider}
  commentId: T:System.Nullable{IServiceProvider}
  parent: System
  definition: System.Nullable`1
  name: Nullable<IServiceProvider>
  nameWithType: Nullable<IServiceProvider>
  fullName: System.Nullable<IServiceProvider>
  nameWithType.vb: Nullable(Of IServiceProvider)
  fullName.vb: System.Nullable(Of IServiceProvider)
  name.vb: Nullable(Of IServiceProvider)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.IServiceResolver.CreateSingleton*
  commentId: Overload:FastEndpoints.IServiceResolver.CreateSingleton
  name: CreateSingleton
  nameWithType: IServiceResolver.CreateSingleton
  fullName: FastEndpoints.IServiceResolver.CreateSingleton
