### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IGlobalPostProcessor
  commentId: T:FastEndpoints.IGlobalPostProcessor
  id: IGlobalPostProcessor
  parent: FastEndpoints
  children: []
  langs:
  - csharp
  - vb
  name: IGlobalPostProcessor
  nameWithType: IGlobalPostProcessor
  fullName: FastEndpoints.IGlobalPostProcessor
  type: Interface
  source:
    id: IGlobalPostProcessor
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Processor\IPostProcessor.cs
    startLine: 26
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ninterface for defining global post-processors to be executed after the main endpoint handler is done\n"
  example: []
  syntax:
    content: 'public interface IGlobalPostProcessor : IPostProcessor<object, object>'
    content.vb: >-
      Public Interface IGlobalPostProcessor

          Inherits IPostProcessor(Of Object, Object)
  inheritedMembers:
  - FastEndpoints.IPostProcessor{System.Object,System.Object}.PostProcessAsync(System.Object,System.Object,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IPostProcessor{System.Object,System.Object}.PostProcessAsync(System.Object,System.Object,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IPostProcessor{System.Object,System.Object}.PostProcessAsync(System.Object,System.Object,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  parent: FastEndpoints.IPostProcessor{System.Object,System.Object}
  definition: FastEndpoints.IPostProcessor`2.PostProcessAsync(`0,`1,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  name: PostProcessAsync(Object, Object, HttpContext, IReadOnlyCollection<ValidationFailure>, CancellationToken)
  nameWithType: IPostProcessor<Object, Object>.PostProcessAsync(Object, Object, HttpContext, IReadOnlyCollection<ValidationFailure>, CancellationToken)
  fullName: FastEndpoints.IPostProcessor<System.Object, System.Object>.PostProcessAsync(System.Object, System.Object, Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IReadOnlyCollection<FluentValidation.Results.ValidationFailure>, System.Threading.CancellationToken)
  nameWithType.vb: IPostProcessor(Of Object, Object).PostProcessAsync(Object, Object, HttpContext, IReadOnlyCollection(Of ValidationFailure), CancellationToken)
  fullName.vb: FastEndpoints.IPostProcessor(Of System.Object, System.Object).PostProcessAsync(System.Object, System.Object, Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IReadOnlyCollection(Of FluentValidation.Results.ValidationFailure), System.Threading.CancellationToken)
  name.vb: PostProcessAsync(Object, Object, HttpContext, IReadOnlyCollection(Of ValidationFailure), CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IPostProcessor`2.PostProcessAsync(`0,`1,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
    name: PostProcessAsync
    nameWithType: IPostProcessor<Object, Object>.PostProcessAsync
    fullName: FastEndpoints.IPostProcessor<System.Object, System.Object>.PostProcessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IPostProcessor`2.PostProcessAsync(`0,`1,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
    name: PostProcessAsync
    nameWithType: IPostProcessor(Of Object, Object).PostProcessAsync
    fullName: FastEndpoints.IPostProcessor(Of System.Object, System.Object).PostProcessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IPostProcessor`2.PostProcessAsync(`0,`1,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IPostProcessor`2.PostProcessAsync(`0,`1,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
  isExternal: true
  name: PostProcessAsync(TRequest, TResponse, HttpContext, IReadOnlyCollection<ValidationFailure>, CancellationToken)
  nameWithType: IPostProcessor<TRequest, TResponse>.PostProcessAsync(TRequest, TResponse, HttpContext, IReadOnlyCollection<ValidationFailure>, CancellationToken)
  fullName: FastEndpoints.IPostProcessor<TRequest, TResponse>.PostProcessAsync(TRequest, TResponse, Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IReadOnlyCollection<FluentValidation.Results.ValidationFailure>, System.Threading.CancellationToken)
  nameWithType.vb: IPostProcessor(Of TRequest, TResponse).PostProcessAsync(TRequest, TResponse, HttpContext, IReadOnlyCollection(Of ValidationFailure), CancellationToken)
  fullName.vb: FastEndpoints.IPostProcessor(Of TRequest, TResponse).PostProcessAsync(TRequest, TResponse, Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IReadOnlyCollection(Of FluentValidation.Results.ValidationFailure), System.Threading.CancellationToken)
  name.vb: PostProcessAsync(TRequest, TResponse, HttpContext, IReadOnlyCollection(Of ValidationFailure), CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IPostProcessor`2.PostProcessAsync(`0,`1,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
    name: PostProcessAsync
    nameWithType: IPostProcessor<TRequest, TResponse>.PostProcessAsync
    fullName: FastEndpoints.IPostProcessor<TRequest, TResponse>.PostProcessAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IPostProcessor`2.PostProcessAsync(`0,`1,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IReadOnlyCollection{FluentValidation.Results.ValidationFailure},System.Threading.CancellationToken)
    name: PostProcessAsync
    nameWithType: IPostProcessor(Of TRequest, TResponse).PostProcessAsync
    fullName: FastEndpoints.IPostProcessor(Of TRequest, TResponse).PostProcessAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IPostProcessor{System.Object,System.Object}
  commentId: T:FastEndpoints.IPostProcessor{System.Object,System.Object}
  parent: FastEndpoints
  definition: FastEndpoints.IPostProcessor`2
  name: IPostProcessor<Object, Object>
  nameWithType: IPostProcessor<Object, Object>
  fullName: FastEndpoints.IPostProcessor<System.Object, System.Object>
  nameWithType.vb: IPostProcessor(Of Object, Object)
  fullName.vb: FastEndpoints.IPostProcessor(Of System.Object, System.Object)
  name.vb: IPostProcessor(Of Object, Object)
  spec.csharp:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IPostProcessor`2
  commentId: T:FastEndpoints.IPostProcessor`2
  name: IPostProcessor<TRequest, TResponse>
  nameWithType: IPostProcessor<TRequest, TResponse>
  fullName: FastEndpoints.IPostProcessor<TRequest, TResponse>
  nameWithType.vb: IPostProcessor(Of TRequest, TResponse)
  fullName.vb: FastEndpoints.IPostProcessor(Of TRequest, TResponse)
  name.vb: IPostProcessor(Of TRequest, TResponse)
  spec.csharp:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
