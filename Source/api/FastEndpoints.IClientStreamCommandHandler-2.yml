### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IClientStreamCommandHandler`2
  commentId: T:FastEndpoints.IClientStreamCommandHandler`2
  id: IClientStreamCommandHandler`2
  parent: FastEndpoints
  children:
  - FastEndpoints.IClientStreamCommandHandler`2.ExecuteAsync(System.Collections.Generic.IAsyncEnumerable{`0},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IClientStreamCommandHandler<T, TResult>
  nameWithType: IClientStreamCommandHandler<T, TResult>
  fullName: FastEndpoints.IClientStreamCommandHandler<T, TResult>
  type: Interface
  source:
    id: IClientStreamCommandHandler
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Core\Interfaces\ICommandHandler.cs
    startLine: 62
  assemblies:
  - FastEndpoints.Messaging.Core
  namespace: FastEndpoints
  summary: "\ninterface to be implemented by a command handler for a stream of <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> that returns a single <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TResult</code>.\n"
  example: []
  syntax:
    content: >-
      public interface IClientStreamCommandHandler<T, TResult>

          where T : class where TResult : class
    typeParameters:
    - id: T
      description: the type of item in the stream
    - id: TResult
      description: the type of the result returned when the stream ends
    content.vb: Public Interface IClientStreamCommandHandler(Of T As Class, TResult As Class)
  nameWithType.vb: IClientStreamCommandHandler(Of T, TResult)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: FastEndpoints.IClientStreamCommandHandler(Of T, TResult)
  name.vb: IClientStreamCommandHandler(Of T, TResult)
- uid: FastEndpoints.IClientStreamCommandHandler`2.ExecuteAsync(System.Collections.Generic.IAsyncEnumerable{`0},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IClientStreamCommandHandler`2.ExecuteAsync(System.Collections.Generic.IAsyncEnumerable{`0},System.Threading.CancellationToken)
  id: ExecuteAsync(System.Collections.Generic.IAsyncEnumerable{`0},System.Threading.CancellationToken)
  parent: FastEndpoints.IClientStreamCommandHandler`2
  langs:
  - csharp
  - vb
  name: ExecuteAsync(IAsyncEnumerable<T>, CancellationToken)
  nameWithType: IClientStreamCommandHandler<T, TResult>.ExecuteAsync(IAsyncEnumerable<T>, CancellationToken)
  fullName: FastEndpoints.IClientStreamCommandHandler<T, TResult>.ExecuteAsync(System.Collections.Generic.IAsyncEnumerable<T>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ExecuteAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Core\Interfaces\ICommandHandler.cs
    startLine: 71
  assemblies:
  - FastEndpoints.Messaging.Core
  namespace: FastEndpoints
  summary: "\naccepts a stream of <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> and returns a <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TResult</code> when the stream ends.\n"
  example: []
  syntax:
    content: Task<TResult> ExecuteAsync(IAsyncEnumerable<T> stream, CancellationToken ct)
    parameters:
    - id: stream
      type: System.Collections.Generic.IAsyncEnumerable{{T}}
      description: the stream of incoming items
    - id: ct
      type: System.Threading.CancellationToken
      description: optional cancellation token
    return:
      type: System.Threading.Tasks.Task{{TResult}}
    content.vb: Function ExecuteAsync(stream As IAsyncEnumerable(Of T), ct As CancellationToken) As Task(Of TResult)
  overload: FastEndpoints.IClientStreamCommandHandler`2.ExecuteAsync*
  nameWithType.vb: IClientStreamCommandHandler(Of T, TResult).ExecuteAsync(IAsyncEnumerable(Of T), CancellationToken)
  fullName.vb: FastEndpoints.IClientStreamCommandHandler(Of T, TResult).ExecuteAsync(System.Collections.Generic.IAsyncEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: ExecuteAsync(IAsyncEnumerable(Of T), CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IClientStreamCommandHandler`2.ExecuteAsync*
  commentId: Overload:FastEndpoints.IClientStreamCommandHandler`2.ExecuteAsync
  name: ExecuteAsync
  nameWithType: IClientStreamCommandHandler<T, TResult>.ExecuteAsync
  fullName: FastEndpoints.IClientStreamCommandHandler<T, TResult>.ExecuteAsync
  nameWithType.vb: IClientStreamCommandHandler(Of T, TResult).ExecuteAsync
  fullName.vb: FastEndpoints.IClientStreamCommandHandler(Of T, TResult).ExecuteAsync
- uid: System.Collections.Generic.IAsyncEnumerable{{T}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TResult}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
