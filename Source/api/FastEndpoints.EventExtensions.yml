### YamlMime:ManagedReference
items:
- uid: FastEndpoints.EventExtensions
  commentId: T:FastEndpoints.EventExtensions
  id: EventExtensions
  parent: FastEndpoints
  children:
  - FastEndpoints.EventExtensions.Broadcast``1(``0)
  - FastEndpoints.EventExtensions.PublishAsync(FastEndpoints.IEvent,FastEndpoints.Mode,System.Threading.CancellationToken)
  - FastEndpoints.EventExtensions.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  - FastEndpoints.EventExtensions.PublishFilteredAsync``1(``0,System.Func{System.Type,System.Boolean},FastEndpoints.Mode,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: EventExtensions
  nameWithType: EventExtensions
  fullName: FastEndpoints.EventExtensions
  type: Class
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public static class EventExtensions
    content.vb: Public Module EventExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: FastEndpoints.EventExtensions.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.EventExtensions.PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  id: PublishAsync``1(``0,FastEndpoints.Mode,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: FastEndpoints.EventExtensions
  langs:
  - csharp
  - vb
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: EventExtensions.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.EventExtensions.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: publish the event to all subscribers registered to handle this type of event.
  example: []
  syntax:
    content: 'public static Task PublishAsync<TEvent>(this TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default) where TEvent : IEvent'
    parameters:
    - id: eventModel
      type: '{TEvent}'
      description: the notification event model/dto to publish
    - id: waitMode
      type: FastEndpoints.Mode
      description: specify whether to wait for none, any or all of the subscribers to complete their work
    - id: cancellation
      type: System.Threading.CancellationToken
      description: an optional cancellation token
    typeParameters:
    - id: TEvent
      description: the type of the event model
    return:
      type: System.Threading.Tasks.Task
      description: >-
        a Task that matches the wait mode specified.

        <xref href="FastEndpoints.Mode.WaitForNone" data-throw-if-not-resolved="false"></xref> returns an already completed Task (fire and forget).

        <xref href="FastEndpoints.Mode.WaitForAny" data-throw-if-not-resolved="false"></xref> returns a Task that will complete when any of the subscribers complete their work.

        <xref href="FastEndpoints.Mode.WaitForAll" data-throw-if-not-resolved="false"></xref> return a Task that will complete only when all the subscribers complete their work.
    content.vb: Public Shared Function PublishAsync(Of TEvent As IEvent)(eventModel As TEvent, waitMode As Mode = Mode.WaitForAll, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.EventExtensions.PublishAsync*
  nameWithType.vb: EventExtensions.PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.EventExtensions.PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
- uid: FastEndpoints.EventExtensions.PublishAsync(FastEndpoints.IEvent,FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.EventExtensions.PublishAsync(FastEndpoints.IEvent,FastEndpoints.Mode,System.Threading.CancellationToken)
  id: PublishAsync(FastEndpoints.IEvent,FastEndpoints.Mode,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: FastEndpoints.EventExtensions
  langs:
  - csharp
  - vb
  name: PublishAsync(IEvent, Mode, CancellationToken)
  nameWithType: EventExtensions.PublishAsync(IEvent, Mode, CancellationToken)
  fullName: FastEndpoints.EventExtensions.PublishAsync(FastEndpoints.IEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: publish the event to all subscribers registered to handle this type of event.
  example: []
  syntax:
    content: public static Task PublishAsync(this IEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default)
    parameters:
    - id: eventModel
      type: FastEndpoints.IEvent
      description: the notification event model/dto to publish
    - id: waitMode
      type: FastEndpoints.Mode
      description: specify whether to wait for none, any or all of the subscribers to complete their work
    - id: cancellation
      type: System.Threading.CancellationToken
      description: an optional cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: >-
        a Task that matches the wait mode specified.

        <xref href="FastEndpoints.Mode.WaitForNone" data-throw-if-not-resolved="false"></xref> returns an already completed Task (fire and forget).

        <xref href="FastEndpoints.Mode.WaitForAny" data-throw-if-not-resolved="false"></xref> returns a Task that will complete when any of the subscribers complete their work.

        <xref href="FastEndpoints.Mode.WaitForAll" data-throw-if-not-resolved="false"></xref> return a Task that will complete only when all of the subscribers complete their work.
    content.vb: Public Shared Function PublishAsync(eventModel As IEvent, waitMode As Mode = Mode.WaitForAll, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.EventExtensions.PublishAsync*
- uid: FastEndpoints.EventExtensions.PublishFilteredAsync``1(``0,System.Func{System.Type,System.Boolean},FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.EventExtensions.PublishFilteredAsync``1(``0,System.Func{System.Type,System.Boolean},FastEndpoints.Mode,System.Threading.CancellationToken)
  id: PublishFilteredAsync``1(``0,System.Func{System.Type,System.Boolean},FastEndpoints.Mode,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: FastEndpoints.EventExtensions
  langs:
  - csharp
  - vb
  name: PublishFilteredAsync<TEvent>(TEvent, Func<Type, bool>, Mode, CancellationToken)
  nameWithType: EventExtensions.PublishFilteredAsync<TEvent>(TEvent, Func<Type, bool>, Mode, CancellationToken)
  fullName: FastEndpoints.EventExtensions.PublishFilteredAsync<TEvent>(TEvent, System.Func<System.Type, bool>, FastEndpoints.Mode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: publish the event to a subset of the subscribers registered to handle this type of event.
  example: []
  syntax:
    content: 'public static Task PublishFilteredAsync<TEvent>(this TEvent eventModel, Func<Type, bool> handlerFilter, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default) where TEvent : IEvent'
    parameters:
    - id: eventModel
      type: '{TEvent}'
      description: the notification event model/dto to publish
    - id: handlerFilter
      type: System.Func{System.Type,System.Boolean}
      description: >-
        a predicate for selecting which of the registered event handlers should be executed. if the predicate returns <code>false</code> for a particular event

        handler, that handler will not be executed during the invocation.
    - id: waitMode
      type: FastEndpoints.Mode
      description: specify whether to wait for none, any or all of the subscribers to complete their work
    - id: cancellation
      type: System.Threading.CancellationToken
      description: an optional cancellation token
    typeParameters:
    - id: TEvent
      description: the type of the event model
    return:
      type: System.Threading.Tasks.Task
      description: >-
        a Task that matches the wait mode specified.

        <xref href="FastEndpoints.Mode.WaitForNone" data-throw-if-not-resolved="false"></xref> returns an already completed Task (fire and forget).

        <xref href="FastEndpoints.Mode.WaitForAny" data-throw-if-not-resolved="false"></xref> returns a Task that will complete when any of the subscribers complete their work.

        <xref href="FastEndpoints.Mode.WaitForAll" data-throw-if-not-resolved="false"></xref> return a Task that will complete only when all the subscribers complete their work.
    content.vb: Public Shared Function PublishFilteredAsync(Of TEvent As IEvent)(eventModel As TEvent, handlerFilter As Func(Of Type, Boolean), waitMode As Mode = Mode.WaitForAll, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.EventExtensions.PublishFilteredAsync*
  nameWithType.vb: EventExtensions.PublishFilteredAsync(Of TEvent)(TEvent, Func(Of Type, Boolean), Mode, CancellationToken)
  fullName.vb: FastEndpoints.EventExtensions.PublishFilteredAsync(Of TEvent)(TEvent, System.Func(Of System.Type, Boolean), FastEndpoints.Mode, System.Threading.CancellationToken)
  name.vb: PublishFilteredAsync(Of TEvent)(TEvent, Func(Of Type, Boolean), Mode, CancellationToken)
- uid: FastEndpoints.EventExtensions.Broadcast``1(``0)
  commentId: M:FastEndpoints.EventExtensions.Broadcast``1(``0)
  id: Broadcast``1(``0)
  isExtensionMethod: true
  parent: FastEndpoints.EventExtensions
  langs:
  - csharp
  - vb
  name: Broadcast<TEvent>(TEvent)
  nameWithType: EventExtensions.Broadcast<TEvent>(TEvent)
  fullName: FastEndpoints.EventExtensions.Broadcast<TEvent>(TEvent)
  type: Method
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: >-
    broadcast/publish an event to all remote subscribers.

    this method should only be called when the server is running in <xref href="FastEndpoints.HubMode.EventPublisher" data-throw-if-not-resolved="false"></xref> hub mode
  example: []
  syntax:
    content: 'public static void Broadcast<TEvent>(this TEvent @event) where TEvent : class, IEvent'
    parameters:
    - id: event
      type: '{TEvent}'
    typeParameters:
    - id: TEvent
      description: the type of the event being broadcast
    content.vb: Public Shared Sub Broadcast(Of TEvent As {Class, IEvent})([event] As TEvent)
  overload: FastEndpoints.EventExtensions.Broadcast*
  nameWithType.vb: EventExtensions.Broadcast(Of TEvent)(TEvent)
  fullName.vb: FastEndpoints.EventExtensions.Broadcast(Of TEvent)(TEvent)
  name.vb: Broadcast(Of TEvent)(TEvent)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Mode.WaitForNone
  commentId: F:FastEndpoints.Mode.WaitForNone
  href: FastEndpoints.Mode.html#FastEndpoints_Mode_WaitForNone
  name: WaitForNone
  nameWithType: Mode.WaitForNone
  fullName: FastEndpoints.Mode.WaitForNone
- uid: FastEndpoints.Mode.WaitForAny
  commentId: F:FastEndpoints.Mode.WaitForAny
  href: FastEndpoints.Mode.html#FastEndpoints_Mode_WaitForAny
  name: WaitForAny
  nameWithType: Mode.WaitForAny
  fullName: FastEndpoints.Mode.WaitForAny
- uid: FastEndpoints.Mode.WaitForAll
  commentId: F:FastEndpoints.Mode.WaitForAll
  href: FastEndpoints.Mode.html#FastEndpoints_Mode_WaitForAll
  name: WaitForAll
  nameWithType: Mode.WaitForAll
  fullName: FastEndpoints.Mode.WaitForAll
- uid: FastEndpoints.EventExtensions.PublishAsync*
  commentId: Overload:FastEndpoints.EventExtensions.PublishAsync
  href: FastEndpoints.EventExtensions.html#FastEndpoints_EventExtensions_PublishAsync__1___0_FastEndpoints_Mode_System_Threading_CancellationToken_
  name: PublishAsync
  nameWithType: EventExtensions.PublishAsync
  fullName: FastEndpoints.EventExtensions.PublishAsync
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: FastEndpoints.Mode
  commentId: T:FastEndpoints.Mode
  parent: FastEndpoints
  href: FastEndpoints.Mode.html
  name: Mode
  nameWithType: Mode
  fullName: FastEndpoints.Mode
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FastEndpoints.IEvent
  commentId: T:FastEndpoints.IEvent
  parent: FastEndpoints
  href: FastEndpoints.IEvent.html
  name: IEvent
  nameWithType: IEvent
  fullName: FastEndpoints.IEvent
- uid: FastEndpoints.EventExtensions.PublishFilteredAsync*
  commentId: Overload:FastEndpoints.EventExtensions.PublishFilteredAsync
  href: FastEndpoints.EventExtensions.html#FastEndpoints_EventExtensions_PublishFilteredAsync__1___0_System_Func_System_Type_System_Boolean__FastEndpoints_Mode_System_Threading_CancellationToken_
  name: PublishFilteredAsync
  nameWithType: EventExtensions.PublishFilteredAsync
  fullName: FastEndpoints.EventExtensions.PublishFilteredAsync
- uid: System.Func{System.Type,System.Boolean}
  commentId: T:System.Func{System.Type,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Type, bool>
  nameWithType: Func<Type, bool>
  fullName: System.Func<System.Type, bool>
  nameWithType.vb: Func(Of Type, Boolean)
  fullName.vb: System.Func(Of System.Type, Boolean)
  name.vb: Func(Of Type, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: FastEndpoints.HubMode.EventPublisher
  commentId: F:FastEndpoints.HubMode.EventPublisher
  href: FastEndpoints.HubMode.html#FastEndpoints_HubMode_EventPublisher
  name: EventPublisher
  nameWithType: HubMode.EventPublisher
  fullName: FastEndpoints.HubMode.EventPublisher
- uid: FastEndpoints.EventExtensions.Broadcast*
  commentId: Overload:FastEndpoints.EventExtensions.Broadcast
  href: FastEndpoints.EventExtensions.html#FastEndpoints_EventExtensions_Broadcast__1___0_
  name: Broadcast
  nameWithType: EventExtensions.Broadcast
  fullName: FastEndpoints.EventExtensions.Broadcast
