### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Security.AuthExtensions
  commentId: T:FastEndpoints.Security.AuthExtensions
  id: AuthExtensions
  parent: FastEndpoints.Security
  children:
  - FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List{System.Security.Claims.Claim},System.Security.Claims.Claim[])
  - FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List{System.Security.Claims.Claim},System.ValueTuple{System.String,System.String}[])
  - FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List{System.String},System.String[])
  - FastEndpoints.Security.AuthExtensions.AddCookieAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.TimeSpan,System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})
  - FastEndpoints.Security.AuthExtensions.AddJWTBearerAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,FastEndpoints.Security.JWTBearer.TokenSigningStyle,System.Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters},System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents})
  - FastEndpoints.Security.AuthExtensions.ClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  - FastEndpoints.Security.AuthExtensions.HasClaimType(System.Security.Claims.ClaimsPrincipal,System.String)
  - FastEndpoints.Security.AuthExtensions.HasPermission(System.Security.Claims.ClaimsPrincipal,System.String)
  langs:
  - csharp
  - vb
  name: AuthExtensions
  nameWithType: AuthExtensions
  fullName: FastEndpoints.Security.AuthExtensions
  type: Class
  source:
    id: AuthExtensions
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 15
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\na set of auth related extensions\n"
  example: []
  syntax:
    content: public static class AuthExtensions
    content.vb: Public Module AuthExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FastEndpoints.Security.AuthExtensions.AddJWTBearerAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,FastEndpoints.Security.JWTBearer.TokenSigningStyle,System.Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters},System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents})
  commentId: M:FastEndpoints.Security.AuthExtensions.AddJWTBearerAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,FastEndpoints.Security.JWTBearer.TokenSigningStyle,System.Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters},System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents})
  id: AddJWTBearerAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,FastEndpoints.Security.JWTBearer.TokenSigningStyle,System.Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters},System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents})
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: AddJWTBearerAuth(IServiceCollection, String, JWTBearer.TokenSigningStyle, Action<TokenValidationParameters>, Action<JwtBearerEvents>)
  nameWithType: AuthExtensions.AddJWTBearerAuth(IServiceCollection, String, JWTBearer.TokenSigningStyle, Action<TokenValidationParameters>, Action<JwtBearerEvents>)
  fullName: FastEndpoints.Security.AuthExtensions.AddJWTBearerAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, FastEndpoints.Security.JWTBearer.TokenSigningStyle, System.Action<Microsoft.IdentityModel.Tokens.TokenValidationParameters>, System.Action<Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents>)
  type: Method
  source:
    id: AddJWTBearerAuth
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 24
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nconfigure and enable jwt bearer authentication\n"
  example: []
  syntax:
    content: public static IServiceCollection AddJWTBearerAuth(this IServiceCollection services, string tokenSigningKey, JWTBearer.TokenSigningStyle tokenSigningStyle = JWTBearer.TokenSigningStyle.Symmetric, Action<TokenValidationParameters> tokenValidation = null, Action<JwtBearerEvents> bearerEvents = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: tokenSigningKey
      type: System.String
      description: the secret key to use for verifying the jwt tokens
    - id: tokenSigningStyle
      type: FastEndpoints.Security.JWTBearer.TokenSigningStyle
      description: specify the token signing style
    - id: tokenValidation
      type: System.Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}
      description: configuration action to specify additional token validation parameters
    - id: bearerEvents
      type: System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents}
      description: configuration action to specify custom jwt bearer events
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddJWTBearerAuth(services As IServiceCollection, tokenSigningKey As String, tokenSigningStyle As JWTBearer.TokenSigningStyle = JWTBearer.TokenSigningStyle.Symmetric, tokenValidation As Action(Of TokenValidationParameters) = Nothing, bearerEvents As Action(Of JwtBearerEvents) = Nothing) As IServiceCollection
  overload: FastEndpoints.Security.AuthExtensions.AddJWTBearerAuth*
  nameWithType.vb: AuthExtensions.AddJWTBearerAuth(IServiceCollection, String, JWTBearer.TokenSigningStyle, Action(Of TokenValidationParameters), Action(Of JwtBearerEvents))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Security.AuthExtensions.AddJWTBearerAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, FastEndpoints.Security.JWTBearer.TokenSigningStyle, System.Action(Of Microsoft.IdentityModel.Tokens.TokenValidationParameters), System.Action(Of Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents))
  name.vb: AddJWTBearerAuth(IServiceCollection, String, JWTBearer.TokenSigningStyle, Action(Of TokenValidationParameters), Action(Of JwtBearerEvents))
- uid: FastEndpoints.Security.AuthExtensions.AddCookieAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.TimeSpan,System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})
  commentId: M:FastEndpoints.Security.AuthExtensions.AddCookieAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.TimeSpan,System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})
  id: AddCookieAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.TimeSpan,System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: AddCookieAuth(IServiceCollection, TimeSpan, Action<CookieAuthenticationOptions>)
  nameWithType: AuthExtensions.AddCookieAuth(IServiceCollection, TimeSpan, Action<CookieAuthenticationOptions>)
  fullName: FastEndpoints.Security.AuthExtensions.AddCookieAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.TimeSpan, System.Action<Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions>)
  type: Method
  source:
    id: AddCookieAuth
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 69
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nconfigure and enable cookie based authentication\n"
  example: []
  syntax:
    content: public static IServiceCollection AddCookieAuth(this IServiceCollection services, TimeSpan validFor, Action<CookieAuthenticationOptions> options = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: validFor
      type: System.TimeSpan
      description: specify how long the created cookie is valid for with a <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref>
    - id: options
      type: System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions}
      description: optional action for configuring cookie authentication options
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCookieAuth(services As IServiceCollection, validFor As TimeSpan, options As Action(Of CookieAuthenticationOptions) = Nothing) As IServiceCollection
  overload: FastEndpoints.Security.AuthExtensions.AddCookieAuth*
  nameWithType.vb: AuthExtensions.AddCookieAuth(IServiceCollection, TimeSpan, Action(Of CookieAuthenticationOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Security.AuthExtensions.AddCookieAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.TimeSpan, System.Action(Of Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions))
  name.vb: AddCookieAuth(IServiceCollection, TimeSpan, Action(Of CookieAuthenticationOptions))
- uid: FastEndpoints.Security.AuthExtensions.HasPermission(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:FastEndpoints.Security.AuthExtensions.HasPermission(System.Security.Claims.ClaimsPrincipal,System.String)
  id: HasPermission(System.Security.Claims.ClaimsPrincipal,System.String)
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: HasPermission(ClaimsPrincipal, String)
  nameWithType: AuthExtensions.HasPermission(ClaimsPrincipal, String)
  fullName: FastEndpoints.Security.AuthExtensions.HasPermission(System.Security.Claims.ClaimsPrincipal, System.String)
  type: Method
  source:
    id: HasPermission
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 90
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nreturns true of the current user principal has a given permission code.\n"
  example: []
  syntax:
    content: public static bool HasPermission(this ClaimsPrincipal principal, string permissionCode)
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
    - id: permissionCode
      type: System.String
      description: the permission code to check for
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasPermission(principal As ClaimsPrincipal, permissionCode As String) As Boolean
  overload: FastEndpoints.Security.AuthExtensions.HasPermission*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FastEndpoints.Security.AuthExtensions.HasClaimType(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:FastEndpoints.Security.AuthExtensions.HasClaimType(System.Security.Claims.ClaimsPrincipal,System.String)
  id: HasClaimType(System.Security.Claims.ClaimsPrincipal,System.String)
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: HasClaimType(ClaimsPrincipal, String)
  nameWithType: AuthExtensions.HasClaimType(ClaimsPrincipal, String)
  fullName: FastEndpoints.Security.AuthExtensions.HasClaimType(System.Security.Claims.ClaimsPrincipal, System.String)
  type: Method
  source:
    id: HasClaimType
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 97
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\ndetermines if the current user principal has the given claim type\n"
  example: []
  syntax:
    content: public static bool HasClaimType(this ClaimsPrincipal principal, string claimType)
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
    - id: claimType
      type: System.String
      description: the claim type to check for
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasClaimType(principal As ClaimsPrincipal, claimType As String) As Boolean
  overload: FastEndpoints.Security.AuthExtensions.HasClaimType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FastEndpoints.Security.AuthExtensions.ClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:FastEndpoints.Security.AuthExtensions.ClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  id: ClaimValue(System.Security.Claims.ClaimsPrincipal,System.String)
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: ClaimValue(ClaimsPrincipal, String)
  nameWithType: AuthExtensions.ClaimValue(ClaimsPrincipal, String)
  fullName: FastEndpoints.Security.AuthExtensions.ClaimValue(System.Security.Claims.ClaimsPrincipal, System.String)
  type: Method
  source:
    id: ClaimValue
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 104
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nget the claim value for a given claim type of the current user principal. if the user doesn&apos;t have the requested claim type, a null will be returned.\n"
  example: []
  syntax:
    content: public static string ClaimValue(this ClaimsPrincipal principal, string claimType)
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
    - id: claimType
      type: System.String
      description: the claim type to look for
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ClaimValue(principal As ClaimsPrincipal, claimType As String) As String
  overload: FastEndpoints.Security.AuthExtensions.ClaimValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List{System.Security.Claims.Claim},System.Security.Claims.Claim[])
  commentId: M:FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List{System.Security.Claims.Claim},System.Security.Claims.Claim[])
  id: Add(System.Collections.Generic.List{System.Security.Claims.Claim},System.Security.Claims.Claim[])
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: Add(List<Claim>, Claim[])
  nameWithType: AuthExtensions.Add(List<Claim>, Claim[])
  fullName: FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List<System.Security.Claims.Claim>, System.Security.Claims.Claim[])
  type: Method
  source:
    id: Add
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 111
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nadds multiple <xref href=\"System.Security.Claims.Claim\" data-throw-if-not-resolved=\"false\"></xref>s to the list.\n"
  example: []
  syntax:
    content: public static void Add(this List<Claim> list, params Claim[] claims)
    parameters:
    - id: list
      type: System.Collections.Generic.List{System.Security.Claims.Claim}
    - id: claims
      type: System.Security.Claims.Claim[]
      description: the <xref href="System.Security.Claims.Claim" data-throw-if-not-resolved="false"></xref>s to append to the list.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Add(list As List(Of Claim), ParamArray claims As Claim())
  overload: FastEndpoints.Security.AuthExtensions.Add*
  nameWithType.vb: AuthExtensions.Add(List(Of Claim), Claim())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List(Of System.Security.Claims.Claim), System.Security.Claims.Claim())
  name.vb: Add(List(Of Claim), Claim())
- uid: FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List{System.Security.Claims.Claim},System.ValueTuple{System.String,System.String}[])
  commentId: M:FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List{System.Security.Claims.Claim},System.ValueTuple{System.String,System.String}[])
  id: Add(System.Collections.Generic.List{System.Security.Claims.Claim},System.ValueTuple{System.String,System.String}[])
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: Add(List<Claim>, (String claimType, String claimValue)[])
  nameWithType: AuthExtensions.Add(List<Claim>, (String claimType, String claimValue)[])
  fullName: FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List<System.Security.Claims.Claim>, System.ValueTuple<System.String, System.String>[])
  type: Method
  source:
    id: Add
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 120
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nadds multiple <xref href=\"System.Security.Claims.Claim\" data-throw-if-not-resolved=\"false\"></xref>s to the list.\n"
  example: []
  syntax:
    content: public static void Add(this List<Claim> list, params (string claimType, string claimValue)[] claims)
    parameters:
    - id: list
      type: System.Collections.Generic.List{System.Security.Claims.Claim}
    - id: claims
      type: System.ValueTuple{System.String,System.String}[]
      description: the claim <code>Type</code> &amp; <code>Value</code> tuples to add to the list.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Add(list As List(Of Claim), ParamArray claims As(claimType As String, claimValue As String)(Of String , String)())
  overload: FastEndpoints.Security.AuthExtensions.Add*
  nameWithType.vb: AuthExtensions.Add(List(Of Claim), (claimType As String, claimValue As String)(Of String, String)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List(Of System.Security.Claims.Claim), System.ValueTuple(Of System.String, System.String)())
  name.vb: Add(List(Of Claim), (claimType As String, claimValue As String)(Of String, String)())
- uid: FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List{System.String},System.String[])
  commentId: M:FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List{System.String},System.String[])
  id: Add(System.Collections.Generic.List{System.String},System.String[])
  isExtensionMethod: true
  parent: FastEndpoints.Security.AuthExtensions
  langs:
  - csharp
  - vb
  name: Add(List<String>, String[])
  nameWithType: AuthExtensions.Add(List<String>, String[])
  fullName: FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List<System.String>, System.String[])
  type: Method
  source:
    id: Add
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Security\AuthExtensions.cs
    startLine: 129
  assemblies:
  - FastEndpoints.Security
  namespace: FastEndpoints.Security
  summary: "\nadds multiple strings to a list.\n"
  example: []
  syntax:
    content: public static void Add(this List<string> list, params string[] values)
    parameters:
    - id: list
      type: System.Collections.Generic.List{System.String}
    - id: values
      type: System.String[]
      description: the strings to append to the list.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Add(list As List(Of String), ParamArray values As String())
  overload: FastEndpoints.Security.AuthExtensions.Add*
  nameWithType.vb: AuthExtensions.Add(List(Of String), String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Security.AuthExtensions.Add(System.Collections.Generic.List(Of System.String), System.String())
  name.vb: Add(List(Of String), String())
references:
- uid: FastEndpoints.Security
  commentId: N:FastEndpoints.Security
  name: FastEndpoints.Security
  nameWithType: FastEndpoints.Security
  fullName: FastEndpoints.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Security.AuthExtensions.AddJWTBearerAuth*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.AddJWTBearerAuth
  name: AddJWTBearerAuth
  nameWithType: AuthExtensions.AddJWTBearerAuth
  fullName: FastEndpoints.Security.AuthExtensions.AddJWTBearerAuth
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FastEndpoints.Security.JWTBearer.TokenSigningStyle
  commentId: T:FastEndpoints.Security.JWTBearer.TokenSigningStyle
  parent: FastEndpoints.Security
  name: JWTBearer.TokenSigningStyle
  nameWithType: JWTBearer.TokenSigningStyle
  fullName: FastEndpoints.Security.JWTBearer.TokenSigningStyle
- uid: System.Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}
  commentId: T:System.Action{Microsoft.IdentityModel.Tokens.TokenValidationParameters}
  parent: System
  definition: System.Action`1
  name: Action<TokenValidationParameters>
  nameWithType: Action<TokenValidationParameters>
  fullName: System.Action<Microsoft.IdentityModel.Tokens.TokenValidationParameters>
  nameWithType.vb: Action(Of TokenValidationParameters)
  fullName.vb: System.Action(Of Microsoft.IdentityModel.Tokens.TokenValidationParameters)
  name.vb: Action(Of TokenValidationParameters)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    name: TokenValidationParameters
    nameWithType: TokenValidationParameters
    fullName: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    name: TokenValidationParameters
    nameWithType: TokenValidationParameters
    fullName: Microsoft.IdentityModel.Tokens.TokenValidationParameters
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents}
  commentId: T:System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents}
  parent: System
  definition: System.Action`1
  name: Action<JwtBearerEvents>
  nameWithType: Action<JwtBearerEvents>
  fullName: System.Action<Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents>
  nameWithType.vb: Action(Of JwtBearerEvents)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents)
  name.vb: Action(Of JwtBearerEvents)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents
    name: JwtBearerEvents
    nameWithType: JwtBearerEvents
    fullName: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents
    name: JwtBearerEvents
    nameWithType: JwtBearerEvents
    fullName: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: FastEndpoints.Security.AuthExtensions.AddCookieAuth*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.AddCookieAuth
  name: AddCookieAuth
  nameWithType: AuthExtensions.AddCookieAuth
  fullName: FastEndpoints.Security.AuthExtensions.AddCookieAuth
- uid: System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions}
  commentId: T:System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions}
  parent: System
  definition: System.Action`1
  name: Action<CookieAuthenticationOptions>
  nameWithType: Action<CookieAuthenticationOptions>
  fullName: System.Action<Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions>
  nameWithType.vb: Action(Of CookieAuthenticationOptions)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions)
  name.vb: Action(Of CookieAuthenticationOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions
    name: CookieAuthenticationOptions
    nameWithType: CookieAuthenticationOptions
    fullName: Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions
    name: CookieAuthenticationOptions
    nameWithType: CookieAuthenticationOptions
    fullName: Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Security.AuthExtensions.HasPermission*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.HasPermission
  name: HasPermission
  nameWithType: AuthExtensions.HasPermission
  fullName: FastEndpoints.Security.AuthExtensions.HasPermission
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: true
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: FastEndpoints.Security.AuthExtensions.HasClaimType*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.HasClaimType
  name: HasClaimType
  nameWithType: AuthExtensions.HasClaimType
  fullName: FastEndpoints.Security.AuthExtensions.HasClaimType
- uid: FastEndpoints.Security.AuthExtensions.ClaimValue*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.ClaimValue
  name: ClaimValue
  nameWithType: AuthExtensions.ClaimValue
  fullName: FastEndpoints.Security.AuthExtensions.ClaimValue
- uid: System.Security.Claims.Claim
  commentId: T:System.Security.Claims.Claim
  isExternal: true
- uid: FastEndpoints.Security.AuthExtensions.Add*
  commentId: Overload:FastEndpoints.Security.AuthExtensions.Add
  name: Add
  nameWithType: AuthExtensions.Add
  fullName: FastEndpoints.Security.AuthExtensions.Add
- uid: System.Collections.Generic.List{System.Security.Claims.Claim}
  commentId: T:System.Collections.Generic.List{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Claim>
  nameWithType: List<Claim>
  fullName: System.Collections.Generic.List<System.Security.Claims.Claim>
  nameWithType.vb: List(Of Claim)
  fullName.vb: System.Collections.Generic.List(Of System.Security.Claims.Claim)
  name.vb: List(Of Claim)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims.Claim[]
  isExternal: true
  name: Claim[]
  nameWithType: Claim[]
  fullName: System.Security.Claims.Claim[]
  nameWithType.vb: Claim()
  fullName.vb: System.Security.Claims.Claim()
  name.vb: Claim()
  spec.csharp:
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ValueTuple{System.String,System.String}[]
  isExternal: true
  name: (T1 Item1, T2 Item2)<String, String>[]
  nameWithType: (T1 Item1, T2 Item2)<String, String>[]
  fullName: System.ValueTuple<System.String, System.String>[]
  nameWithType.vb: (Item1 As T1, Item2 As T2)(Of String, String)()
  fullName.vb: System.ValueTuple(Of System.String, System.String)()
  name.vb: (Item1 As T1, Item2 As T2)(Of String, String)()
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (T1 Item1, T2 Item2)
    nameWithType: (T1 Item1, T2 Item2)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (Item1 As T1, Item2 As T2)
    nameWithType: (Item1 As T1, Item2 As T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
