### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Testing.TestClass`1
  commentId: T:FastEndpoints.Testing.TestClass`1
  id: TestClass`1
  parent: FastEndpoints.Testing
  children:
  - FastEndpoints.Testing.TestClass`1.#ctor(`0,Xunit.Abstractions.ITestOutputHelper)
  - FastEndpoints.Testing.TestClass`1.Fake
  - FastEndpoints.Testing.TestClass`1.Fixture
  - FastEndpoints.Testing.TestClass`1.Fx
  - FastEndpoints.Testing.TestClass`1.Output
  langs:
  - csharp
  - vb
  name: TestClass<TFixture>
  nameWithType: TestClass<TFixture>
  fullName: FastEndpoints.Testing.TestClass<TFixture>
  type: Class
  source:
    id: TestClass
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Testing\TestClass.cs
    startLine: 16
  assemblies:
  - FastEndpoints.Testing
  namespace: FastEndpoints.Testing
  summary: >-
    abstract class for implementing a test-class, which is a collection of integration tests that may be related to each other.

    test methods can be run in a given order by decorating the methods with <xref href="Xunit.Priority.PriorityAttribute" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [TestCaseOrderer("Xunit.Priority.PriorityOrderer", "Xunit.Priority")]

      public abstract class TestClass<TFixture> : IClassFixture<TFixture> where TFixture : class, IFixture
    typeParameters:
    - id: TFixture
      description: >-
        the type of the test fixture. a fixture is a shared data context for all tests of this class.

        the fixture is instantiated before any of the tests are executed and torn down after all tests have run.

        fixtures are implemented by inheriting <xref href="FastEndpoints.Testing.TestFixture%601" data-throw-if-not-resolved="false"></xref> abstract class.
    content.vb: >-
      <TestCaseOrderer("Xunit.Priority.PriorityOrderer", "Xunit.Priority")>

      Public MustInherit Class TestClass(Of TFixture As {Class, IFixture}) Implements IClassFixture(Of TFixture)
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{{TFixture}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Xunit.TestCaseOrdererAttribute
    ctor: Xunit.TestCaseOrdererAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Xunit.Priority.PriorityOrderer
    - type: System.String
      value: Xunit.Priority
  nameWithType.vb: TestClass(Of TFixture)
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture)
  name.vb: TestClass(Of TFixture)
- uid: FastEndpoints.Testing.TestClass`1.Fixture
  commentId: P:FastEndpoints.Testing.TestClass`1.Fixture
  id: Fixture
  parent: FastEndpoints.Testing.TestClass`1
  langs:
  - csharp
  - vb
  name: Fixture
  nameWithType: TestClass<TFixture>.Fixture
  fullName: FastEndpoints.Testing.TestClass<TFixture>.Fixture
  type: Property
  source:
    id: Fixture
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Testing\TestClass.cs
    startLine: 22
  assemblies:
  - FastEndpoints.Testing
  namespace: FastEndpoints.Testing
  summary: fixture data that is shared among all tests of this class
  example: []
  syntax:
    content: protected TFixture Fixture { get; init; }
    parameters: []
    return:
      type: '{TFixture}'
    content.vb: Protected Property Fixture As TFixture
  overload: FastEndpoints.Testing.TestClass`1.Fixture*
  nameWithType.vb: TestClass(Of TFixture).Fixture
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).Fixture
- uid: FastEndpoints.Testing.TestClass`1.Fx
  commentId: P:FastEndpoints.Testing.TestClass`1.Fx
  id: Fx
  parent: FastEndpoints.Testing.TestClass`1
  langs:
  - csharp
  - vb
  name: Fx
  nameWithType: TestClass<TFixture>.Fx
  fullName: FastEndpoints.Testing.TestClass<TFixture>.Fx
  type: Property
  source:
    id: Fx
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Testing\TestClass.cs
    startLine: 28
  assemblies:
  - FastEndpoints.Testing
  namespace: FastEndpoints.Testing
  summary: fixture data that is shared among all tests of this class
  example: []
  syntax:
    content: protected TFixture Fx { get; }
    parameters: []
    return:
      type: '{TFixture}'
    content.vb: Protected ReadOnly Property Fx As TFixture
  overload: FastEndpoints.Testing.TestClass`1.Fx*
  nameWithType.vb: TestClass(Of TFixture).Fx
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).Fx
- uid: FastEndpoints.Testing.TestClass`1.Output
  commentId: P:FastEndpoints.Testing.TestClass`1.Output
  id: Output
  parent: FastEndpoints.Testing.TestClass`1
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: TestClass<TFixture>.Output
  fullName: FastEndpoints.Testing.TestClass<TFixture>.Output
  type: Property
  source:
    id: Output
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Testing\TestClass.cs
    startLine: 34
  assemblies:
  - FastEndpoints.Testing
  namespace: FastEndpoints.Testing
  summary: xUnit test output helper
  example: []
  syntax:
    content: protected ITestOutputHelper Output { get; init; }
    parameters: []
    return:
      type: Xunit.Abstractions.ITestOutputHelper
    content.vb: Protected Property Output As ITestOutputHelper
  overload: FastEndpoints.Testing.TestClass`1.Output*
  nameWithType.vb: TestClass(Of TFixture).Output
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).Output
- uid: FastEndpoints.Testing.TestClass`1.Fake
  commentId: P:FastEndpoints.Testing.TestClass`1.Fake
  id: Fake
  parent: FastEndpoints.Testing.TestClass`1
  langs:
  - csharp
  - vb
  name: Fake
  nameWithType: TestClass<TFixture>.Fake
  fullName: FastEndpoints.Testing.TestClass<TFixture>.Fake
  type: Property
  source:
    id: Fake
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Testing\TestClass.cs
    startLine: 39
  assemblies:
  - FastEndpoints.Testing
  namespace: FastEndpoints.Testing
  summary: bogus data generator
  example: []
  syntax:
    content: protected Faker Fake { get; }
    parameters: []
    return:
      type: Bogus.Faker
    content.vb: Protected ReadOnly Property Fake As Faker
  overload: FastEndpoints.Testing.TestClass`1.Fake*
  nameWithType.vb: TestClass(Of TFixture).Fake
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).Fake
- uid: FastEndpoints.Testing.TestClass`1.#ctor(`0,Xunit.Abstractions.ITestOutputHelper)
  commentId: M:FastEndpoints.Testing.TestClass`1.#ctor(`0,Xunit.Abstractions.ITestOutputHelper)
  id: '#ctor(`0,Xunit.Abstractions.ITestOutputHelper)'
  parent: FastEndpoints.Testing.TestClass`1
  langs:
  - csharp
  - vb
  name: TestClass(TFixture, ITestOutputHelper)
  nameWithType: TestClass<TFixture>.TestClass(TFixture, ITestOutputHelper)
  fullName: FastEndpoints.Testing.TestClass<TFixture>.TestClass(TFixture, Xunit.Abstractions.ITestOutputHelper)
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Testing\TestClass.cs
    startLine: 41
  assemblies:
  - FastEndpoints.Testing
  namespace: FastEndpoints.Testing
  syntax:
    content: protected TestClass(TFixture f, ITestOutputHelper o)
    parameters:
    - id: f
      type: '{TFixture}'
    - id: o
      type: Xunit.Abstractions.ITestOutputHelper
    content.vb: Protected Sub New(f As TFixture, o As ITestOutputHelper)
  overload: FastEndpoints.Testing.TestClass`1.#ctor*
  nameWithType.vb: TestClass(Of TFixture).New(TFixture, ITestOutputHelper)
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).New(TFixture, Xunit.Abstractions.ITestOutputHelper)
  name.vb: New(TFixture, ITestOutputHelper)
references:
- uid: Xunit.Priority.PriorityAttribute
  commentId: T:Xunit.Priority.PriorityAttribute
  isExternal: true
  name: PriorityAttribute
  nameWithType: PriorityAttribute
  fullName: Xunit.Priority.PriorityAttribute
- uid: FastEndpoints.Testing.TestFixture`1
  commentId: T:FastEndpoints.Testing.TestFixture`1
  href: FastEndpoints.Testing.TestFixture-1.html
  name: TestFixture<TProgram>
  nameWithType: TestFixture<TProgram>
  fullName: FastEndpoints.Testing.TestFixture<TProgram>
  nameWithType.vb: TestFixture(Of TProgram)
  fullName.vb: FastEndpoints.Testing.TestFixture(Of TProgram)
  name.vb: TestFixture(Of TProgram)
  spec.csharp:
  - uid: FastEndpoints.Testing.TestFixture`1
    name: TestFixture
    href: FastEndpoints.Testing.TestFixture-1.html
  - name: <
  - name: TProgram
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.Testing.TestFixture`1
    name: TestFixture
    href: FastEndpoints.Testing.TestFixture-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TProgram
  - name: )
- uid: FastEndpoints.Testing
  commentId: N:FastEndpoints.Testing
  href: FastEndpoints.html
  name: FastEndpoints.Testing
  nameWithType: FastEndpoints.Testing
  fullName: FastEndpoints.Testing
  spec.csharp:
  - uid: FastEndpoints
    name: FastEndpoints
    href: FastEndpoints.html
  - name: .
  - uid: FastEndpoints.Testing
    name: Testing
    href: FastEndpoints.Testing.html
  spec.vb:
  - uid: FastEndpoints
    name: FastEndpoints
    href: FastEndpoints.html
  - name: .
  - uid: FastEndpoints.Testing
    name: Testing
    href: FastEndpoints.Testing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Xunit.IClassFixture{{TFixture}}
  commentId: T:Xunit.IClassFixture{`0}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullName.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: <
  - name: TFixture
  - name: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TFixture
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullName.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: <
  - name: TFixture
  - name: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TFixture
  - name: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: true
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: FastEndpoints.Testing.TestClass`1.Fixture*
  commentId: Overload:FastEndpoints.Testing.TestClass`1.Fixture
  href: FastEndpoints.Testing.TestClass-1.html#FastEndpoints_Testing_TestClass_1_Fixture
  name: Fixture
  nameWithType: TestClass<TFixture>.Fixture
  fullName: FastEndpoints.Testing.TestClass<TFixture>.Fixture
  nameWithType.vb: TestClass(Of TFixture).Fixture
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).Fixture
- uid: '{TFixture}'
  commentId: '!:TFixture'
  definition: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: TFixture
  name: TFixture
  nameWithType: TFixture
  fullName: TFixture
- uid: FastEndpoints.Testing.TestClass`1.Fx*
  commentId: Overload:FastEndpoints.Testing.TestClass`1.Fx
  href: FastEndpoints.Testing.TestClass-1.html#FastEndpoints_Testing_TestClass_1_Fx
  name: Fx
  nameWithType: TestClass<TFixture>.Fx
  fullName: FastEndpoints.Testing.TestClass<TFixture>.Fx
  nameWithType.vb: TestClass(Of TFixture).Fx
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).Fx
- uid: FastEndpoints.Testing.TestClass`1.Output*
  commentId: Overload:FastEndpoints.Testing.TestClass`1.Output
  href: FastEndpoints.Testing.TestClass-1.html#FastEndpoints_Testing_TestClass_1_Output
  name: Output
  nameWithType: TestClass<TFixture>.Output
  fullName: FastEndpoints.Testing.TestClass<TFixture>.Output
  nameWithType.vb: TestClass(Of TFixture).Output
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).Output
- uid: Xunit.Abstractions.ITestOutputHelper
  commentId: T:Xunit.Abstractions.ITestOutputHelper
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: Xunit.Abstractions.ITestOutputHelper
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: true
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
  spec.csharp:
  - uid: Xunit
    name: Xunit
    isExternal: true
  - name: .
  - uid: Xunit.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: Xunit
    name: Xunit
    isExternal: true
  - name: .
  - uid: Xunit.Abstractions
    name: Abstractions
    isExternal: true
- uid: FastEndpoints.Testing.TestClass`1.Fake*
  commentId: Overload:FastEndpoints.Testing.TestClass`1.Fake
  href: FastEndpoints.Testing.TestClass-1.html#FastEndpoints_Testing_TestClass_1_Fake
  name: Fake
  nameWithType: TestClass<TFixture>.Fake
  fullName: FastEndpoints.Testing.TestClass<TFixture>.Fake
  nameWithType.vb: TestClass(Of TFixture).Fake
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).Fake
- uid: Bogus.Faker
  commentId: T:Bogus.Faker
  parent: Bogus
  isExternal: true
  name: Faker
  nameWithType: Faker
  fullName: Bogus.Faker
- uid: Bogus
  commentId: N:Bogus
  isExternal: true
  name: Bogus
  nameWithType: Bogus
  fullName: Bogus
- uid: FastEndpoints.Testing.TestClass`1.#ctor*
  commentId: Overload:FastEndpoints.Testing.TestClass`1.#ctor
  href: FastEndpoints.Testing.TestClass-1.html#FastEndpoints_Testing_TestClass_1__ctor__0_Xunit_Abstractions_ITestOutputHelper_
  name: TestClass
  nameWithType: TestClass<TFixture>.TestClass
  fullName: FastEndpoints.Testing.TestClass<TFixture>.TestClass
  nameWithType.vb: TestClass(Of TFixture).New
  fullName.vb: FastEndpoints.Testing.TestClass(Of TFixture).New
  name.vb: New
