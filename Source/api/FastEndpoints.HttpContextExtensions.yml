### YamlMime:ManagedReference
items:
- uid: FastEndpoints.HttpContextExtensions
  commentId: T:FastEndpoints.HttpContextExtensions
  id: HttpContextExtensions
  parent: FastEndpoints
  children:
  - FastEndpoints.HttpContextExtensions.MarkResponseStart(Microsoft.AspNetCore.Http.HttpContext)
  - FastEndpoints.HttpContextExtensions.Resolve(Microsoft.AspNetCore.Http.HttpContext,Type)
  - FastEndpoints.HttpContextExtensions.Resolve``1(Microsoft.AspNetCore.Http.HttpContext)
  - FastEndpoints.HttpContextExtensions.ResponseStarted(Microsoft.AspNetCore.Http.HttpContext)
  - FastEndpoints.HttpContextExtensions.TryResolve(Microsoft.AspNetCore.Http.HttpContext,Type)
  - FastEndpoints.HttpContextExtensions.TryResolve``1(Microsoft.AspNetCore.Http.HttpContext)
  langs:
  - csharp
  - vb
  name: HttpContextExtensions
  nameWithType: HttpContextExtensions
  fullName: FastEndpoints.HttpContextExtensions
  type: Class
  source:
    id: HttpContextExtensions
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Extensions\HttpContextExtensions.cs
    startLine: 5
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public static class HttpContextExtensions
    content.vb: Public Module HttpContextExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FastEndpoints.HttpContextExtensions.TryResolve``1(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FastEndpoints.HttpContextExtensions.TryResolve``1(Microsoft.AspNetCore.Http.HttpContext)
  id: TryResolve``1(Microsoft.AspNetCore.Http.HttpContext)
  isExtensionMethod: true
  parent: FastEndpoints.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: TryResolve<TService>(HttpContext)
  nameWithType: HttpContextExtensions.TryResolve<TService>(HttpContext)
  fullName: FastEndpoints.HttpContextExtensions.TryResolve<TService>(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    id: TryResolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Extensions\HttpContextExtensions.cs
    startLine: 11
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ntry to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.\n"
  example: []
  syntax:
    content: >-
      public static TService TryResolve<TService>(this HttpContext ctx)
          where TService : class
    parameters:
    - id: ctx
      type: Microsoft.AspNetCore.Http.HttpContext
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryResolve(Of TService As Class)(ctx As HttpContext) As TService
  overload: FastEndpoints.HttpContextExtensions.TryResolve*
  nameWithType.vb: HttpContextExtensions.TryResolve(Of TService)(HttpContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpContextExtensions.TryResolve(Of TService)(Microsoft.AspNetCore.Http.HttpContext)
  name.vb: TryResolve(Of TService)(HttpContext)
- uid: FastEndpoints.HttpContextExtensions.TryResolve(Microsoft.AspNetCore.Http.HttpContext,Type)
  commentId: M:FastEndpoints.HttpContextExtensions.TryResolve(Microsoft.AspNetCore.Http.HttpContext,Type)
  id: TryResolve(Microsoft.AspNetCore.Http.HttpContext,Type)
  isExtensionMethod: true
  parent: FastEndpoints.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: TryResolve(HttpContext, Type)
  nameWithType: HttpContextExtensions.TryResolve(HttpContext, Type)
  fullName: FastEndpoints.HttpContextExtensions.TryResolve(Microsoft.AspNetCore.Http.HttpContext, Type)
  type: Method
  source:
    id: TryResolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Extensions\HttpContextExtensions.cs
    startLine: 18
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ntry to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.\n"
  example: []
  syntax:
    content: public static object TryResolve(this HttpContext ctx, Type typeOfService)
    parameters:
    - id: ctx
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: typeOfService
      type: Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryResolve(ctx As HttpContext, typeOfService As Type) As Object
  overload: FastEndpoints.HttpContextExtensions.TryResolve*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FastEndpoints.HttpContextExtensions.Resolve``1(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FastEndpoints.HttpContextExtensions.Resolve``1(Microsoft.AspNetCore.Http.HttpContext)
  id: Resolve``1(Microsoft.AspNetCore.Http.HttpContext)
  isExtensionMethod: true
  parent: FastEndpoints.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: Resolve<TService>(HttpContext)
  nameWithType: HttpContextExtensions.Resolve<TService>(HttpContext)
  fullName: FastEndpoints.HttpContextExtensions.Resolve<TService>(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    id: Resolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Extensions\HttpContextExtensions.cs
    startLine: 26
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nresolve an instance for the given type from the dependency injection container. will throw if unresolvable.\n"
  example: []
  syntax:
    content: >-
      public static TService Resolve<TService>(this HttpContext ctx)
          where TService : class
    parameters:
    - id: ctx
      type: Microsoft.AspNetCore.Http.HttpContext
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Resolve(Of TService As Class)(ctx As HttpContext) As TService
  overload: FastEndpoints.HttpContextExtensions.Resolve*
  nameWithType.vb: HttpContextExtensions.Resolve(Of TService)(HttpContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HttpContextExtensions.Resolve(Of TService)(Microsoft.AspNetCore.Http.HttpContext)
  name.vb: Resolve(Of TService)(HttpContext)
- uid: FastEndpoints.HttpContextExtensions.Resolve(Microsoft.AspNetCore.Http.HttpContext,Type)
  commentId: M:FastEndpoints.HttpContextExtensions.Resolve(Microsoft.AspNetCore.Http.HttpContext,Type)
  id: Resolve(Microsoft.AspNetCore.Http.HttpContext,Type)
  isExtensionMethod: true
  parent: FastEndpoints.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: Resolve(HttpContext, Type)
  nameWithType: HttpContextExtensions.Resolve(HttpContext, Type)
  fullName: FastEndpoints.HttpContextExtensions.Resolve(Microsoft.AspNetCore.Http.HttpContext, Type)
  type: Method
  source:
    id: Resolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Extensions\HttpContextExtensions.cs
    startLine: 34
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nresolve an instance for the given type from the dependency injection container. will throw if unresolvable.\n"
  example: []
  syntax:
    content: public static object Resolve(this HttpContext ctx, Type typeOfService)
    parameters:
    - id: ctx
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: typeOfService
      type: Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Resolve(ctx As HttpContext, typeOfService As Type) As Object
  overload: FastEndpoints.HttpContextExtensions.Resolve*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FastEndpoints.HttpContextExtensions.MarkResponseStart(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FastEndpoints.HttpContextExtensions.MarkResponseStart(Microsoft.AspNetCore.Http.HttpContext)
  id: MarkResponseStart(Microsoft.AspNetCore.Http.HttpContext)
  isExtensionMethod: true
  parent: FastEndpoints.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: MarkResponseStart(HttpContext)
  nameWithType: HttpContextExtensions.MarkResponseStart(HttpContext)
  fullName: FastEndpoints.HttpContextExtensions.MarkResponseStart(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    id: MarkResponseStart
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Extensions\HttpContextExtensions.cs
    startLine: 41
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nmarks the current response as started so that <xref href=\"FastEndpoints.HttpContextExtensions.ResponseStarted(Microsoft.AspNetCore.Http.HttpContext)\" data-throw-if-not-resolved=\"false\"></xref> can return the correct result.\n"
  example: []
  syntax:
    content: public static void MarkResponseStart(this HttpContext ctx)
    parameters:
    - id: ctx
      type: Microsoft.AspNetCore.Http.HttpContext
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub MarkResponseStart(ctx As HttpContext)
  overload: FastEndpoints.HttpContextExtensions.MarkResponseStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FastEndpoints.HttpContextExtensions.ResponseStarted(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FastEndpoints.HttpContextExtensions.ResponseStarted(Microsoft.AspNetCore.Http.HttpContext)
  id: ResponseStarted(Microsoft.AspNetCore.Http.HttpContext)
  isExtensionMethod: true
  parent: FastEndpoints.HttpContextExtensions
  langs:
  - csharp
  - vb
  name: ResponseStarted(HttpContext)
  nameWithType: HttpContextExtensions.ResponseStarted(HttpContext)
  fullName: FastEndpoints.HttpContextExtensions.ResponseStarted(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    id: ResponseStarted
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Extensions\HttpContextExtensions.cs
    startLine: 47
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ncheck if the current response has already started or not.\n"
  example: []
  syntax:
    content: public static bool ResponseStarted(this HttpContext ctx)
    parameters:
    - id: ctx
      type: Microsoft.AspNetCore.Http.HttpContext
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ResponseStarted(ctx As HttpContext) As Boolean
  overload: FastEndpoints.HttpContextExtensions.ResponseStarted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.HttpContextExtensions.TryResolve*
  commentId: Overload:FastEndpoints.HttpContextExtensions.TryResolve
  name: TryResolve
  nameWithType: HttpContextExtensions.TryResolve
  fullName: FastEndpoints.HttpContextExtensions.TryResolve
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: FastEndpoints.HttpContextExtensions.Resolve*
  commentId: Overload:FastEndpoints.HttpContextExtensions.Resolve
  name: Resolve
  nameWithType: HttpContextExtensions.Resolve
  fullName: FastEndpoints.HttpContextExtensions.Resolve
- uid: FastEndpoints.HttpContextExtensions.ResponseStarted(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FastEndpoints.HttpContextExtensions.ResponseStarted(Microsoft.AspNetCore.Http.HttpContext)
  isExternal: true
- uid: FastEndpoints.HttpContextExtensions.MarkResponseStart*
  commentId: Overload:FastEndpoints.HttpContextExtensions.MarkResponseStart
  name: MarkResponseStart
  nameWithType: HttpContextExtensions.MarkResponseStart
  fullName: FastEndpoints.HttpContextExtensions.MarkResponseStart
- uid: FastEndpoints.HttpContextExtensions.ResponseStarted*
  commentId: Overload:FastEndpoints.HttpContextExtensions.ResponseStarted
  name: ResponseStarted
  nameWithType: HttpContextExtensions.ResponseStarted
  fullName: FastEndpoints.HttpContextExtensions.ResponseStarted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
