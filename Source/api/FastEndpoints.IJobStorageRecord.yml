### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IJobStorageRecord
  commentId: T:FastEndpoints.IJobStorageRecord
  id: IJobStorageRecord
  parent: FastEndpoints
  children:
  - FastEndpoints.IJobStorageRecord.Command
  - FastEndpoints.IJobStorageRecord.ExecuteAfter
  - FastEndpoints.IJobStorageRecord.ExpireOn
  - FastEndpoints.IJobStorageRecord.GetCommand``1
  - FastEndpoints.IJobStorageRecord.IsComplete
  - FastEndpoints.IJobStorageRecord.QueueID
  - FastEndpoints.IJobStorageRecord.SetCommand``1(``0)
  - FastEndpoints.IJobStorageRecord.TrackingID
  langs:
  - csharp
  - vb
  name: IJobStorageRecord
  nameWithType: IJobStorageRecord
  fullName: FastEndpoints.IJobStorageRecord
  type: Interface
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the contract for a job storage record entity
  example: []
  syntax:
    content: public interface IJobStorageRecord
    content.vb: Public Interface IJobStorageRecord
- uid: FastEndpoints.IJobStorageRecord.QueueID
  commentId: P:FastEndpoints.IJobStorageRecord.QueueID
  id: QueueID
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: QueueID
  nameWithType: IJobStorageRecord.QueueID
  fullName: FastEndpoints.IJobStorageRecord.QueueID
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: a unique id for the job queue. each command type has its own queue. this is automatically generated by the library.
  example: []
  syntax:
    content: string QueueID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property QueueID As String
  overload: FastEndpoints.IJobStorageRecord.QueueID*
- uid: FastEndpoints.IJobStorageRecord.TrackingID
  commentId: P:FastEndpoints.IJobStorageRecord.TrackingID
  id: TrackingID
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: TrackingID
  nameWithType: IJobStorageRecord.TrackingID
  fullName: FastEndpoints.IJobStorageRecord.TrackingID
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: a unique id used to track a particular job for the purpose of progress monitoring and/or termination.
  example: []
  syntax:
    content: Guid TrackingID { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Property TrackingID As Guid
  overload: FastEndpoints.IJobStorageRecord.TrackingID*
- uid: FastEndpoints.IJobStorageRecord.Command
  commentId: P:FastEndpoints.IJobStorageRecord.Command
  id: Command
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: IJobStorageRecord.Command
  fullName: FastEndpoints.IJobStorageRecord.Command
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    the actual command object that will be embedded in the storage record.

    if your database/orm (such as ef-core) doesn't support embedding objects, you can take the following steps:

    <pre><code class="lang-csharp">1. add a [NotMapped] attribute to this property.

    2. add a new property, either a string or byte[]

    3. implement both GetCommand() and SetCommand() methods to serialize/deserialize the command object back and forth and store it in the newly added property.</code></pre>

    you may use any serializer you please. recommendation is to use MessagePack.
  example: []
  syntax:
    content: object Command { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Property Command As Object
  overload: FastEndpoints.IJobStorageRecord.Command*
- uid: FastEndpoints.IJobStorageRecord.ExecuteAfter
  commentId: P:FastEndpoints.IJobStorageRecord.ExecuteAfter
  id: ExecuteAfter
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: ExecuteAfter
  nameWithType: IJobStorageRecord.ExecuteAfter
  fullName: FastEndpoints.IJobStorageRecord.ExecuteAfter
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    the job will not be executed before this date/time. by default, it will automatically be set to the time of creation allowing jobs to be executed as soon as they're

    created.
  example: []
  syntax:
    content: DateTime ExecuteAfter { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Property ExecuteAfter As Date
  overload: FastEndpoints.IJobStorageRecord.ExecuteAfter*
- uid: FastEndpoints.IJobStorageRecord.ExpireOn
  commentId: P:FastEndpoints.IJobStorageRecord.ExpireOn
  id: ExpireOn
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: ExpireOn
  nameWithType: IJobStorageRecord.ExpireOn
  fullName: FastEndpoints.IJobStorageRecord.ExpireOn
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    the expiration date/time of job. if the job remains in an incomplete state past this time, the record is considered stale, and will be marked for removal from

    storage.
  example: []
  syntax:
    content: DateTime ExpireOn { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Property ExpireOn As Date
  overload: FastEndpoints.IJobStorageRecord.ExpireOn*
- uid: FastEndpoints.IJobStorageRecord.IsComplete
  commentId: P:FastEndpoints.IJobStorageRecord.IsComplete
  id: IsComplete
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: IsComplete
  nameWithType: IJobStorageRecord.IsComplete
  fullName: FastEndpoints.IJobStorageRecord.IsComplete
  type: Property
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: indicates whether the job has successfully completed or not.
  example: []
  syntax:
    content: bool IsComplete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsComplete As Boolean
  overload: FastEndpoints.IJobStorageRecord.IsComplete*
- uid: FastEndpoints.IJobStorageRecord.GetCommand``1
  commentId: M:FastEndpoints.IJobStorageRecord.GetCommand``1
  id: GetCommand``1
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: GetCommand<TCommand>()
  nameWithType: IJobStorageRecord.GetCommand<TCommand>()
  fullName: FastEndpoints.IJobStorageRecord.GetCommand<TCommand>()
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this function to customize command deserialization.
  example: []
  syntax:
    content: 'TCommand GetCommand<TCommand>() where TCommand : class, ICommandBase'
    typeParameters:
    - id: TCommand
    return:
      type: '{TCommand}'
    content.vb: Function GetCommand(Of TCommand As {Class, ICommandBase})() As TCommand
  overload: FastEndpoints.IJobStorageRecord.GetCommand*
  nameWithType.vb: IJobStorageRecord.GetCommand(Of TCommand)()
  fullName.vb: FastEndpoints.IJobStorageRecord.GetCommand(Of TCommand)()
  name.vb: GetCommand(Of TCommand)()
- uid: FastEndpoints.IJobStorageRecord.SetCommand``1(``0)
  commentId: M:FastEndpoints.IJobStorageRecord.SetCommand``1(``0)
  id: SetCommand``1(``0)
  parent: FastEndpoints.IJobStorageRecord
  langs:
  - csharp
  - vb
  name: SetCommand<TCommand>(TCommand)
  nameWithType: IJobStorageRecord.SetCommand<TCommand>(TCommand)
  fullName: FastEndpoints.IJobStorageRecord.SetCommand<TCommand>(TCommand)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: implement this method to customize command serialization.
  example: []
  syntax:
    content: 'void SetCommand<TCommand>(TCommand command) where TCommand : class, ICommandBase'
    parameters:
    - id: command
      type: '{TCommand}'
    typeParameters:
    - id: TCommand
    content.vb: Sub SetCommand(Of TCommand As {Class, ICommandBase})(command As TCommand)
  overload: FastEndpoints.IJobStorageRecord.SetCommand*
  nameWithType.vb: IJobStorageRecord.SetCommand(Of TCommand)(TCommand)
  fullName.vb: FastEndpoints.IJobStorageRecord.SetCommand(Of TCommand)(TCommand)
  name.vb: SetCommand(Of TCommand)(TCommand)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IJobStorageRecord.QueueID*
  commentId: Overload:FastEndpoints.IJobStorageRecord.QueueID
  href: FastEndpoints.IJobStorageRecord.html#FastEndpoints_IJobStorageRecord_QueueID
  name: QueueID
  nameWithType: IJobStorageRecord.QueueID
  fullName: FastEndpoints.IJobStorageRecord.QueueID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.IJobStorageRecord.TrackingID*
  commentId: Overload:FastEndpoints.IJobStorageRecord.TrackingID
  href: FastEndpoints.IJobStorageRecord.html#FastEndpoints_IJobStorageRecord_TrackingID
  name: TrackingID
  nameWithType: IJobStorageRecord.TrackingID
  fullName: FastEndpoints.IJobStorageRecord.TrackingID
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: FastEndpoints.IJobStorageRecord.Command*
  commentId: Overload:FastEndpoints.IJobStorageRecord.Command
  href: FastEndpoints.IJobStorageRecord.html#FastEndpoints_IJobStorageRecord_Command
  name: Command
  nameWithType: IJobStorageRecord.Command
  fullName: FastEndpoints.IJobStorageRecord.Command
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FastEndpoints.IJobStorageRecord.ExecuteAfter*
  commentId: Overload:FastEndpoints.IJobStorageRecord.ExecuteAfter
  href: FastEndpoints.IJobStorageRecord.html#FastEndpoints_IJobStorageRecord_ExecuteAfter
  name: ExecuteAfter
  nameWithType: IJobStorageRecord.ExecuteAfter
  fullName: FastEndpoints.IJobStorageRecord.ExecuteAfter
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: FastEndpoints.IJobStorageRecord.ExpireOn*
  commentId: Overload:FastEndpoints.IJobStorageRecord.ExpireOn
  href: FastEndpoints.IJobStorageRecord.html#FastEndpoints_IJobStorageRecord_ExpireOn
  name: ExpireOn
  nameWithType: IJobStorageRecord.ExpireOn
  fullName: FastEndpoints.IJobStorageRecord.ExpireOn
- uid: FastEndpoints.IJobStorageRecord.IsComplete*
  commentId: Overload:FastEndpoints.IJobStorageRecord.IsComplete
  href: FastEndpoints.IJobStorageRecord.html#FastEndpoints_IJobStorageRecord_IsComplete
  name: IsComplete
  nameWithType: IJobStorageRecord.IsComplete
  fullName: FastEndpoints.IJobStorageRecord.IsComplete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: FastEndpoints.IJobStorageRecord.GetCommand*
  commentId: Overload:FastEndpoints.IJobStorageRecord.GetCommand
  href: FastEndpoints.IJobStorageRecord.html#FastEndpoints_IJobStorageRecord_GetCommand__1
  name: GetCommand
  nameWithType: IJobStorageRecord.GetCommand
  fullName: FastEndpoints.IJobStorageRecord.GetCommand
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: FastEndpoints.IJobStorageRecord.SetCommand*
  commentId: Overload:FastEndpoints.IJobStorageRecord.SetCommand
  href: FastEndpoints.IJobStorageRecord.html#FastEndpoints_IJobStorageRecord_SetCommand__1___0_
  name: SetCommand
  nameWithType: IJobStorageRecord.SetCommand
  fullName: FastEndpoints.IJobStorageRecord.SetCommand
