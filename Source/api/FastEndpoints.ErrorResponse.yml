### YamlMime:ManagedReference
items:
- uid: FastEndpoints.ErrorResponse
  commentId: T:FastEndpoints.ErrorResponse
  id: ErrorResponse
  parent: FastEndpoints
  children:
  - FastEndpoints.ErrorResponse.#ctor
  - FastEndpoints.ErrorResponse.#ctor(List{ValidationFailure},System.Int32)
  - FastEndpoints.ErrorResponse.Errors
  - FastEndpoints.ErrorResponse.Message
  - FastEndpoints.ErrorResponse.StatusCode
  langs:
  - csharp
  - vb
  name: ErrorResponse
  nameWithType: ErrorResponse
  fullName: FastEndpoints.ErrorResponse
  type: Class
  source:
    id: ErrorResponse
    path: D:\SOURCE-CONTROL\FastEndpoints\Api-Reference\Source\src\Library\DTOs\ErrorResponse.cs
    startLine: 7
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe dto used to send an error response to the client\n"
  example: []
  syntax:
    content: public sealed class ErrorResponse
    content.vb: Public NotInheritable Class ErrorResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: FastEndpoints.ErrorResponse.StatusCode
  commentId: P:FastEndpoints.ErrorResponse.StatusCode
  id: StatusCode
  parent: FastEndpoints.ErrorResponse
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: ErrorResponse.StatusCode
  fullName: FastEndpoints.ErrorResponse.StatusCode
  type: Property
  source:
    id: StatusCode
    path: D:\SOURCE-CONTROL\FastEndpoints\Api-Reference\Source\src\Library\DTOs\ErrorResponse.cs
    startLine: 12
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe http status code sent to the client. default is 400.\n"
  example: []
  syntax:
    content: public int StatusCode { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property StatusCode As Integer
  overload: FastEndpoints.ErrorResponse.StatusCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.ErrorResponse.Message
  commentId: P:FastEndpoints.ErrorResponse.Message
  id: Message
  parent: FastEndpoints.ErrorResponse
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ErrorResponse.Message
  fullName: FastEndpoints.ErrorResponse.Message
  type: Property
  source:
    id: Message
    path: D:\SOURCE-CONTROL\FastEndpoints\Api-Reference\Source\src\Library\DTOs\ErrorResponse.cs
    startLine: 17
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe message for the error response\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: FastEndpoints.ErrorResponse.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.ErrorResponse.Errors
  commentId: P:FastEndpoints.ErrorResponse.Errors
  id: Errors
  parent: FastEndpoints.ErrorResponse
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: ErrorResponse.Errors
  fullName: FastEndpoints.ErrorResponse.Errors
  type: Property
  source:
    id: Errors
    path: D:\SOURCE-CONTROL\FastEndpoints\Api-Reference\Source\src\Library\DTOs\ErrorResponse.cs
    startLine: 22
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe collection of errors for the current context\n"
  example: []
  syntax:
    content: public Dictionary<string, List<string>> Errors { get; set; }
    parameters: []
    return:
      type: Dictionary{System.String,List{System.String}}
    content.vb: Public Property Errors As Dictionary(Of String, List(Of String))
  overload: FastEndpoints.ErrorResponse.Errors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.ErrorResponse.#ctor
  commentId: M:FastEndpoints.ErrorResponse.#ctor
  id: '#ctor'
  parent: FastEndpoints.ErrorResponse
  langs:
  - csharp
  - vb
  name: ErrorResponse()
  nameWithType: ErrorResponse.ErrorResponse()
  fullName: FastEndpoints.ErrorResponse.ErrorResponse()
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\FastEndpoints\Api-Reference\Source\src\Library\DTOs\ErrorResponse.cs
    startLine: 27
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ninstantiate a new error response without any errors\n"
  example: []
  syntax:
    content: public ErrorResponse()
    content.vb: Public Sub New
  overload: FastEndpoints.ErrorResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FastEndpoints.ErrorResponse.#ctor(List{ValidationFailure},System.Int32)
  commentId: M:FastEndpoints.ErrorResponse.#ctor(List{ValidationFailure},System.Int32)
  id: '#ctor(List{ValidationFailure},System.Int32)'
  parent: FastEndpoints.ErrorResponse
  langs:
  - csharp
  - vb
  name: ErrorResponse(List<ValidationFailure>, Int32)
  nameWithType: ErrorResponse.ErrorResponse(List<ValidationFailure>, Int32)
  fullName: FastEndpoints.ErrorResponse.ErrorResponse(List<ValidationFailure>, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\FastEndpoints\Api-Reference\Source\src\Library\DTOs\ErrorResponse.cs
    startLine: 33
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ninstantiate an error response with the given collection validation failures\n"
  example: []
  syntax:
    content: public ErrorResponse(List<ValidationFailure> failures, int statusCode = 400)
    parameters:
    - id: failures
      type: List{ValidationFailure}
      description: ''
    - id: statusCode
      type: System.Int32
    content.vb: Public Sub New(failures As List(Of ValidationFailure), statusCode As Integer = 400)
  overload: FastEndpoints.ErrorResponse.#ctor*
  nameWithType.vb: ErrorResponse.ErrorResponse(List(Of ValidationFailure), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.ErrorResponse.ErrorResponse(List(Of ValidationFailure), System.Int32)
  name.vb: ErrorResponse(List(Of ValidationFailure), Int32)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.ErrorResponse.StatusCode*
  commentId: Overload:FastEndpoints.ErrorResponse.StatusCode
  name: StatusCode
  nameWithType: ErrorResponse.StatusCode
  fullName: FastEndpoints.ErrorResponse.StatusCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FastEndpoints.ErrorResponse.Message*
  commentId: Overload:FastEndpoints.ErrorResponse.Message
  name: Message
  nameWithType: ErrorResponse.Message
  fullName: FastEndpoints.ErrorResponse.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FastEndpoints.ErrorResponse.Errors*
  commentId: Overload:FastEndpoints.ErrorResponse.Errors
  name: Errors
  nameWithType: ErrorResponse.Errors
  fullName: FastEndpoints.ErrorResponse.Errors
- uid: Dictionary{System.String,List{System.String}}
  commentId: '!:Dictionary{System.String,List{System.String}}'
  definition: Dictionary`2
  name: Dictionary<String, List<String>>
  nameWithType: Dictionary<String, List<String>>
  fullName: Dictionary<System.String, List<System.String>>
  nameWithType.vb: Dictionary(Of String, List(Of String))
  fullName.vb: Dictionary(Of System.String, List(Of System.String))
  name.vb: Dictionary(Of String, List(Of String))
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ErrorResponse.#ctor*
  commentId: Overload:FastEndpoints.ErrorResponse.#ctor
  name: ErrorResponse
  nameWithType: ErrorResponse.ErrorResponse
  fullName: FastEndpoints.ErrorResponse.ErrorResponse
- uid: List{ValidationFailure}
  commentId: '!:List{ValidationFailure}'
  definition: List`1
  name: List<ValidationFailure>
  nameWithType: List<ValidationFailure>
  fullName: List<ValidationFailure>
  nameWithType.vb: List(Of ValidationFailure)
  fullName.vb: List(Of ValidationFailure)
  name.vb: List(Of ValidationFailure)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: ValidationFailure
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
