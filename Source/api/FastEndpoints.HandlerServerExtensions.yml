### YamlMime:ManagedReference
items:
- uid: FastEndpoints.HandlerServerExtensions
  commentId: T:FastEndpoints.HandlerServerExtensions
  id: HandlerServerExtensions
  parent: FastEndpoints
  children:
  - FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.AspNetCore.Builder.WebApplicationBuilder,System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions})
  - FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions})
  - FastEndpoints.HandlerServerExtensions.MapHandlers(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{FastEndpoints.InMemoryEventStorageRecord,FastEndpoints.InMemoryEventHubStorage}})
  - FastEndpoints.HandlerServerExtensions.MapHandlers``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{``0,``1}})
  langs:
  - csharp
  - vb
  name: HandlerServerExtensions
  nameWithType: HandlerServerExtensions
  fullName: FastEndpoints.HandlerServerExtensions
  type: Class
  source:
    id: HandlerServerExtensions
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\HandlerServerExtensions.cs
    startLine: 12
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nhandler server extensions\n"
  example: []
  syntax:
    content: public static class HandlerServerExtensions
    content.vb: Public Module HandlerServerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.AspNetCore.Builder.WebApplicationBuilder,System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions})
  commentId: M:FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.AspNetCore.Builder.WebApplicationBuilder,System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions})
  id: AddHandlerServer(Microsoft.AspNetCore.Builder.WebApplicationBuilder,System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions})
  isExtensionMethod: true
  parent: FastEndpoints.HandlerServerExtensions
  langs:
  - csharp
  - vb
  name: AddHandlerServer(WebApplicationBuilder, Action<GrpcServiceOptions>)
  nameWithType: HandlerServerExtensions.AddHandlerServer(WebApplicationBuilder, Action<GrpcServiceOptions>)
  fullName: FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.AspNetCore.Builder.WebApplicationBuilder, System.Action<Grpc.AspNetCore.Server.GrpcServiceOptions>)
  type: Method
  source:
    id: AddHandlerServer
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\HandlerServerExtensions.cs
    startLine: 21
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nconfigure the handler server which will host a collection of command handlers and event hubs. this should only be called once per application.\n<p>\nIMPORTANT: specify which handlers/hubs this server will be hosting via <xref href=\"FastEndpoints.HandlerServerExtensions.MapHandlers%60%602(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder%2cSystem.Action%7bFastEndpoints.HandlerOptions%7b%60%600%2c%60%601%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public static IGrpcServerBuilder AddHandlerServer(this WebApplicationBuilder bld, Action<GrpcServiceOptions> o = null)
    parameters:
    - id: bld
      type: Microsoft.AspNetCore.Builder.WebApplicationBuilder
    - id: o
      type: System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions}
      description: optional grpc service settings
    return:
      type: Grpc.AspNetCore.Server.IGrpcServerBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddHandlerServer(bld As WebApplicationBuilder, o As Action(Of GrpcServiceOptions) = Nothing) As IGrpcServerBuilder
  overload: FastEndpoints.HandlerServerExtensions.AddHandlerServer*
  nameWithType.vb: HandlerServerExtensions.AddHandlerServer(WebApplicationBuilder, Action(Of GrpcServiceOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.AspNetCore.Builder.WebApplicationBuilder, System.Action(Of Grpc.AspNetCore.Server.GrpcServiceOptions))
  name.vb: AddHandlerServer(WebApplicationBuilder, Action(Of GrpcServiceOptions))
- uid: FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions})
  commentId: M:FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions})
  id: AddHandlerServer(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions})
  isExtensionMethod: true
  parent: FastEndpoints.HandlerServerExtensions
  langs:
  - csharp
  - vb
  name: AddHandlerServer(IServiceCollection, Action<GrpcServiceOptions>)
  nameWithType: HandlerServerExtensions.AddHandlerServer(IServiceCollection, Action<GrpcServiceOptions>)
  fullName: FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Grpc.AspNetCore.Server.GrpcServiceOptions>)
  type: Method
  source:
    id: AddHandlerServer
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\HandlerServerExtensions.cs
    startLine: 31
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nconfigure the handler server which will host a collection of command handlers. this should only be called once per application.\n<p>\nIMPORTANT: specify which handlers this server will be hosting via <xref href=\"FastEndpoints.HandlerServerExtensions.MapHandlers%60%602(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder%2cSystem.Action%7bFastEndpoints.HandlerOptions%7b%60%600%2c%60%601%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public static IGrpcServerBuilder AddHandlerServer(this IServiceCollection sc, Action<GrpcServiceOptions> o = null)
    parameters:
    - id: sc
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: o
      type: System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions}
      description: optional grpc service settings
    return:
      type: Grpc.AspNetCore.Server.IGrpcServerBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddHandlerServer(sc As IServiceCollection, o As Action(Of GrpcServiceOptions) = Nothing) As IGrpcServerBuilder
  overload: FastEndpoints.HandlerServerExtensions.AddHandlerServer*
  nameWithType.vb: HandlerServerExtensions.AddHandlerServer(IServiceCollection, Action(Of GrpcServiceOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HandlerServerExtensions.AddHandlerServer(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Grpc.AspNetCore.Server.GrpcServiceOptions))
  name.vb: AddHandlerServer(IServiceCollection, Action(Of GrpcServiceOptions))
- uid: FastEndpoints.HandlerServerExtensions.MapHandlers(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{FastEndpoints.InMemoryEventStorageRecord,FastEndpoints.InMemoryEventHubStorage}})
  commentId: M:FastEndpoints.HandlerServerExtensions.MapHandlers(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{FastEndpoints.InMemoryEventStorageRecord,FastEndpoints.InMemoryEventHubStorage}})
  id: MapHandlers(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{FastEndpoints.InMemoryEventStorageRecord,FastEndpoints.InMemoryEventHubStorage}})
  isExtensionMethod: true
  parent: FastEndpoints.HandlerServerExtensions
  langs:
  - csharp
  - vb
  name: MapHandlers(IEndpointRouteBuilder, Action<HandlerOptions<InMemoryEventStorageRecord, InMemoryEventHubStorage>>)
  nameWithType: HandlerServerExtensions.MapHandlers(IEndpointRouteBuilder, Action<HandlerOptions<InMemoryEventStorageRecord, InMemoryEventHubStorage>>)
  fullName: FastEndpoints.HandlerServerExtensions.MapHandlers(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder, System.Action<FastEndpoints.HandlerOptions<FastEndpoints.InMemoryEventStorageRecord, FastEndpoints.InMemoryEventHubStorage>>)
  type: Method
  source:
    id: MapHandlers
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\HandlerServerExtensions.cs
    startLine: 47
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nspecify which handlers/event hubs this server will be hosting. the in-memory storage provider will be used.\n"
  example: []
  syntax:
    content: public static IEndpointRouteBuilder MapHandlers(this IEndpointRouteBuilder b, Action<HandlerOptions<InMemoryEventStorageRecord, InMemoryEventHubStorage>> h)
    parameters:
    - id: b
      type: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
    - id: h
      type: System.Action{FastEndpoints.HandlerOptions{FastEndpoints.InMemoryEventStorageRecord,FastEndpoints.InMemoryEventHubStorage}}
      description: handler options
    return:
      type: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapHandlers(b As IEndpointRouteBuilder, h As Action(Of HandlerOptions(Of InMemoryEventStorageRecord, InMemoryEventHubStorage))) As IEndpointRouteBuilder
  overload: FastEndpoints.HandlerServerExtensions.MapHandlers*
  nameWithType.vb: HandlerServerExtensions.MapHandlers(IEndpointRouteBuilder, Action(Of HandlerOptions(Of InMemoryEventStorageRecord, InMemoryEventHubStorage)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HandlerServerExtensions.MapHandlers(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder, System.Action(Of FastEndpoints.HandlerOptions(Of FastEndpoints.InMemoryEventStorageRecord, FastEndpoints.InMemoryEventHubStorage)))
  name.vb: MapHandlers(IEndpointRouteBuilder, Action(Of HandlerOptions(Of InMemoryEventStorageRecord, InMemoryEventHubStorage)))
- uid: FastEndpoints.HandlerServerExtensions.MapHandlers``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{``0,``1}})
  commentId: M:FastEndpoints.HandlerServerExtensions.MapHandlers``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{``0,``1}})
  id: MapHandlers``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{``0,``1}})
  isExtensionMethod: true
  parent: FastEndpoints.HandlerServerExtensions
  langs:
  - csharp
  - vb
  name: MapHandlers<TStorageRecord, TStorageProvider>(IEndpointRouteBuilder, Action<HandlerOptions<TStorageRecord, TStorageProvider>>)
  nameWithType: HandlerServerExtensions.MapHandlers<TStorageRecord, TStorageProvider>(IEndpointRouteBuilder, Action<HandlerOptions<TStorageRecord, TStorageProvider>>)
  fullName: FastEndpoints.HandlerServerExtensions.MapHandlers<TStorageRecord, TStorageProvider>(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder, System.Action<FastEndpoints.HandlerOptions<TStorageRecord, TStorageProvider>>)
  type: Method
  source:
    id: MapHandlers
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\HandlerServerExtensions.cs
    startLine: 59
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nspecify which handlers/event hubs this server will be hosting together with a custom storage provider\n"
  example: []
  syntax:
    content: >-
      public static IEndpointRouteBuilder MapHandlers<TStorageRecord, TStorageProvider>(this IEndpointRouteBuilder b, Action<HandlerOptions<TStorageRecord, TStorageProvider>> h)

          where TStorageRecord : IEventStorageRecord, new()

          where TStorageProvider : class, IEventHubStorageProvider<TStorageRecord>
    parameters:
    - id: b
      type: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
    - id: h
      type: System.Action{FastEndpoints.HandlerOptions{{TStorageRecord},{TStorageProvider}}}
      description: handler options
    typeParameters:
    - id: TStorageRecord
      description: the type of the event storage record
    - id: TStorageProvider
      description: the type of the event storage provider
    return:
      type: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapHandlers(Of TStorageRecord As {IEventStorageRecord, New}, TStorageProvider As {Class, IEventHubStorageProvider(Of TStorageRecord)})(b As IEndpointRouteBuilder, h As Action(Of HandlerOptions(Of TStorageRecord, TStorageProvider))) As IEndpointRouteBuilder
  overload: FastEndpoints.HandlerServerExtensions.MapHandlers*
  nameWithType.vb: HandlerServerExtensions.MapHandlers(Of TStorageRecord, TStorageProvider)(IEndpointRouteBuilder, Action(Of HandlerOptions(Of TStorageRecord, TStorageProvider)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.HandlerServerExtensions.MapHandlers(Of TStorageRecord, TStorageProvider)(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder, System.Action(Of FastEndpoints.HandlerOptions(Of TStorageRecord, TStorageProvider)))
  name.vb: MapHandlers(Of TStorageRecord, TStorageProvider)(IEndpointRouteBuilder, Action(Of HandlerOptions(Of TStorageRecord, TStorageProvider)))
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.HandlerServerExtensions.MapHandlers``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{``0,``1}})
  commentId: M:FastEndpoints.HandlerServerExtensions.MapHandlers``2(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Action{FastEndpoints.HandlerOptions{``0,``1}})
  isExternal: true
- uid: FastEndpoints.HandlerServerExtensions.AddHandlerServer*
  commentId: Overload:FastEndpoints.HandlerServerExtensions.AddHandlerServer
  name: AddHandlerServer
  nameWithType: HandlerServerExtensions.AddHandlerServer
  fullName: FastEndpoints.HandlerServerExtensions.AddHandlerServer
- uid: Microsoft.AspNetCore.Builder.WebApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.WebApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: WebApplicationBuilder
  nameWithType: WebApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.WebApplicationBuilder
- uid: System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions}
  commentId: T:System.Action{Grpc.AspNetCore.Server.GrpcServiceOptions}
  parent: System
  definition: System.Action`1
  name: Action<GrpcServiceOptions>
  nameWithType: Action<GrpcServiceOptions>
  fullName: System.Action<Grpc.AspNetCore.Server.GrpcServiceOptions>
  nameWithType.vb: Action(Of GrpcServiceOptions)
  fullName.vb: System.Action(Of Grpc.AspNetCore.Server.GrpcServiceOptions)
  name.vb: Action(Of GrpcServiceOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Grpc.AspNetCore.Server.GrpcServiceOptions
    name: GrpcServiceOptions
    nameWithType: GrpcServiceOptions
    fullName: Grpc.AspNetCore.Server.GrpcServiceOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Grpc.AspNetCore.Server.GrpcServiceOptions
    name: GrpcServiceOptions
    nameWithType: GrpcServiceOptions
    fullName: Grpc.AspNetCore.Server.GrpcServiceOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.AspNetCore.Server.IGrpcServerBuilder
  commentId: T:Grpc.AspNetCore.Server.IGrpcServerBuilder
  parent: Grpc.AspNetCore.Server
  isExternal: true
  name: IGrpcServerBuilder
  nameWithType: IGrpcServerBuilder
  fullName: Grpc.AspNetCore.Server.IGrpcServerBuilder
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: true
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.AspNetCore.Server
  commentId: N:Grpc.AspNetCore.Server
  isExternal: true
  name: Grpc.AspNetCore.Server
  nameWithType: Grpc.AspNetCore.Server
  fullName: Grpc.AspNetCore.Server
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: FastEndpoints.HandlerServerExtensions.MapHandlers*
  commentId: Overload:FastEndpoints.HandlerServerExtensions.MapHandlers
  name: MapHandlers
  nameWithType: HandlerServerExtensions.MapHandlers
  fullName: FastEndpoints.HandlerServerExtensions.MapHandlers
- uid: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
  commentId: T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
  parent: Microsoft.AspNetCore.Routing
  isExternal: true
  name: IEndpointRouteBuilder
  nameWithType: IEndpointRouteBuilder
  fullName: Microsoft.AspNetCore.Routing.IEndpointRouteBuilder
- uid: System.Action{FastEndpoints.HandlerOptions{FastEndpoints.InMemoryEventStorageRecord,FastEndpoints.InMemoryEventHubStorage}}
  commentId: T:System.Action{FastEndpoints.HandlerOptions{FastEndpoints.InMemoryEventStorageRecord,FastEndpoints.InMemoryEventHubStorage}}
  parent: System
  definition: System.Action`1
  name: Action<HandlerOptions<InMemoryEventStorageRecord, InMemoryEventHubStorage>>
  nameWithType: Action<HandlerOptions<InMemoryEventStorageRecord, InMemoryEventHubStorage>>
  fullName: System.Action<FastEndpoints.HandlerOptions<FastEndpoints.InMemoryEventStorageRecord, FastEndpoints.InMemoryEventHubStorage>>
  nameWithType.vb: Action(Of HandlerOptions(Of InMemoryEventStorageRecord, InMemoryEventHubStorage))
  fullName.vb: System.Action(Of FastEndpoints.HandlerOptions(Of FastEndpoints.InMemoryEventStorageRecord, FastEndpoints.InMemoryEventHubStorage))
  name.vb: Action(Of HandlerOptions(Of InMemoryEventStorageRecord, InMemoryEventHubStorage))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.HandlerOptions`2
    name: HandlerOptions
    nameWithType: HandlerOptions
    fullName: FastEndpoints.HandlerOptions
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.InMemoryEventHubStorage
    name: InMemoryEventHubStorage
    nameWithType: InMemoryEventHubStorage
    fullName: FastEndpoints.InMemoryEventHubStorage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.HandlerOptions`2
    name: HandlerOptions
    nameWithType: HandlerOptions
    fullName: FastEndpoints.HandlerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.InMemoryEventHubStorage
    name: InMemoryEventHubStorage
    nameWithType: InMemoryEventHubStorage
    fullName: FastEndpoints.InMemoryEventHubStorage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: true
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Action{FastEndpoints.HandlerOptions{{TStorageRecord},{TStorageProvider}}}
  commentId: T:System.Action{FastEndpoints.HandlerOptions{``0,``1}}
  parent: System
  definition: System.Action`1
  name: Action<HandlerOptions<TStorageRecord, TStorageProvider>>
  nameWithType: Action<HandlerOptions<TStorageRecord, TStorageProvider>>
  fullName: System.Action<FastEndpoints.HandlerOptions<TStorageRecord, TStorageProvider>>
  nameWithType.vb: Action(Of HandlerOptions(Of TStorageRecord, TStorageProvider))
  fullName.vb: System.Action(Of FastEndpoints.HandlerOptions(Of TStorageRecord, TStorageProvider))
  name.vb: Action(Of HandlerOptions(Of TStorageRecord, TStorageProvider))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.HandlerOptions`2
    name: HandlerOptions
    nameWithType: HandlerOptions
    fullName: FastEndpoints.HandlerOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TStorageProvider
    nameWithType: TStorageProvider
    fullName: TStorageProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.HandlerOptions`2
    name: HandlerOptions
    nameWithType: HandlerOptions
    fullName: FastEndpoints.HandlerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TStorageProvider
    nameWithType: TStorageProvider
    fullName: TStorageProvider
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
