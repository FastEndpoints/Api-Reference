### YamlMime:ManagedReference
items:
- uid: FastEndpoints.RemoteConnection
  commentId: T:FastEndpoints.RemoteConnection
  id: RemoteConnection
  parent: FastEndpoints
  children:
  - FastEndpoints.RemoteConnection.ChannelOptions
  - FastEndpoints.RemoteConnection.Register``1
  - FastEndpoints.RemoteConnection.Register``2
  - FastEndpoints.RemoteConnection.RegisterClientStream``2
  - FastEndpoints.RemoteConnection.RegisterServerStream``2
  - FastEndpoints.RemoteConnection.RemoteAddress
  - FastEndpoints.RemoteConnection.Subscribe``2(Grpc.Core.CallOptions)
  langs:
  - csharp
  - vb
  name: RemoteConnection
  nameWithType: RemoteConnection
  fullName: FastEndpoints.RemoteConnection
  type: Class
  source:
    id: RemoteConnection
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Client\RemoteConnection.cs
    startLine: 10
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nrepresents a connection to a remote server that hosts command handlers (<xref href=\"FastEndpoints.ICommandHandler%602\" data-throw-if-not-resolved=\"false\"></xref>)\n<p>call <xref href=\"FastEndpoints.RemoteConnection.Register%60%602\" data-throw-if-not-resolved=\"false\"></xref> method to map the commands</p>\n"
  example: []
  syntax:
    content: public sealed class RemoteConnection
    content.vb: Public NotInheritable Class RemoteConnection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: FastEndpoints.RemoteConnection.ChannelOptions
  commentId: P:FastEndpoints.RemoteConnection.ChannelOptions
  id: ChannelOptions
  parent: FastEndpoints.RemoteConnection
  langs:
  - csharp
  - vb
  name: ChannelOptions
  nameWithType: RemoteConnection.ChannelOptions
  fullName: FastEndpoints.RemoteConnection.ChannelOptions
  type: Property
  source:
    id: ChannelOptions
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Client\RemoteConnection.cs
    startLine: 23
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\ngrpc channel settings\n"
  example: []
  syntax:
    content: public GrpcChannelOptions ChannelOptions { get; set; }
    parameters: []
    return:
      type: Grpc.Net.Client.GrpcChannelOptions
    content.vb: Public Property ChannelOptions As GrpcChannelOptions
  overload: FastEndpoints.RemoteConnection.ChannelOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.RemoteConnection.RemoteAddress
  commentId: P:FastEndpoints.RemoteConnection.RemoteAddress
  id: RemoteAddress
  parent: FastEndpoints.RemoteConnection
  langs:
  - csharp
  - vb
  name: RemoteAddress
  nameWithType: RemoteConnection.RemoteAddress
  fullName: FastEndpoints.RemoteConnection.RemoteAddress
  type: Property
  source:
    id: RemoteAddress
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Client\RemoteConnection.cs
    startLine: 53
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nthe address of the remote server\n"
  example: []
  syntax:
    content: public string RemoteAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RemoteAddress As String
  overload: FastEndpoints.RemoteConnection.RemoteAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.RemoteConnection.Subscribe``2(Grpc.Core.CallOptions)
  commentId: M:FastEndpoints.RemoteConnection.Subscribe``2(Grpc.Core.CallOptions)
  id: Subscribe``2(Grpc.Core.CallOptions)
  parent: FastEndpoints.RemoteConnection
  langs:
  - csharp
  - vb
  name: Subscribe<TEvent, TEventHandler>(CallOptions)
  nameWithType: RemoteConnection.Subscribe<TEvent, TEventHandler>(CallOptions)
  fullName: FastEndpoints.RemoteConnection.Subscribe<TEvent, TEventHandler>(Grpc.Core.CallOptions)
  type: Method
  source:
    id: Subscribe
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Client\RemoteConnection.cs
    startLine: 68
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nsubscribe to a broadcast channel for a given event type (<code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TEvent</code>) on the remote host.\nthe received events will be handled by the specified handler (<code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TEventHandler</code>) on this machine.\n"
  example: []
  syntax:
    content: >-
      public void Subscribe<TEvent, TEventHandler>(CallOptions callOptions = default(CallOptions))

          where TEvent : class, IEvent where TEventHandler : IEventHandler<TEvent>
    parameters:
    - id: callOptions
      type: Grpc.Core.CallOptions
      description: the call options
    typeParameters:
    - id: TEvent
      description: the type of the events that will be received
    - id: TEventHandler
      description: the handler that will be handling the received events
    content.vb: Public Sub Subscribe(Of TEvent As {Class, IEvent}, TEventHandler As IEventHandler(Of TEvent))(callOptions As CallOptions = Nothing)
  overload: FastEndpoints.RemoteConnection.Subscribe*
  nameWithType.vb: RemoteConnection.Subscribe(Of TEvent, TEventHandler)(CallOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.RemoteConnection.Subscribe(Of TEvent, TEventHandler)(Grpc.Core.CallOptions)
  name.vb: Subscribe(Of TEvent, TEventHandler)(CallOptions)
- uid: FastEndpoints.RemoteConnection.Register``1
  commentId: M:FastEndpoints.RemoteConnection.Register``1
  id: Register``1
  parent: FastEndpoints.RemoteConnection
  langs:
  - csharp
  - vb
  name: Register<TCommand>()
  nameWithType: RemoteConnection.Register<TCommand>()
  fullName: FastEndpoints.RemoteConnection.Register<TCommand>()
  type: Method
  source:
    id: Register
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Client\RemoteConnection.cs
    startLine: 89
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nregister a &quot;void&quot; command (<xref href=\"FastEndpoints.ICommand\" data-throw-if-not-resolved=\"false\"></xref>) for this remote connection where the handler for it is hosted/located.\n"
  example: []
  syntax:
    content: >-
      public void Register<TCommand>()

          where TCommand : class, ICommand
    typeParameters:
    - id: TCommand
      description: the type of the command
    content.vb: Public Sub Register(Of TCommand As {Class, ICommand})
  overload: FastEndpoints.RemoteConnection.Register*
  nameWithType.vb: RemoteConnection.Register(Of TCommand)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.RemoteConnection.Register(Of TCommand)()
  name.vb: Register(Of TCommand)()
- uid: FastEndpoints.RemoteConnection.Register``2
  commentId: M:FastEndpoints.RemoteConnection.Register``2
  id: Register``2
  parent: FastEndpoints.RemoteConnection
  langs:
  - csharp
  - vb
  name: Register<TCommand, TResult>()
  nameWithType: RemoteConnection.Register<TCommand, TResult>()
  fullName: FastEndpoints.RemoteConnection.Register<TCommand, TResult>()
  type: Method
  source:
    id: Register
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Client\RemoteConnection.cs
    startLine: 110
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nregister a &quot;unary&quot; command (<xref href=\"FastEndpoints.ICommand%601\" data-throw-if-not-resolved=\"false\"></xref>) for this remote connection where the handler for it is hosted/located.\n"
  example: []
  syntax:
    content: >-
      public void Register<TCommand, TResult>()

          where TCommand : class, ICommand<TResult> where TResult : class
    typeParameters:
    - id: TCommand
      description: the type of the command
    - id: TResult
      description: the type of the result
    content.vb: Public Sub Register(Of TCommand As {Class, ICommand(Of TResult)}, TResult As Class)
  overload: FastEndpoints.RemoteConnection.Register*
  nameWithType.vb: RemoteConnection.Register(Of TCommand, TResult)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.RemoteConnection.Register(Of TCommand, TResult)()
  name.vb: Register(Of TCommand, TResult)()
- uid: FastEndpoints.RemoteConnection.RegisterServerStream``2
  commentId: M:FastEndpoints.RemoteConnection.RegisterServerStream``2
  id: RegisterServerStream``2
  parent: FastEndpoints.RemoteConnection
  langs:
  - csharp
  - vb
  name: RegisterServerStream<TCommand, TResult>()
  nameWithType: RemoteConnection.RegisterServerStream<TCommand, TResult>()
  fullName: FastEndpoints.RemoteConnection.RegisterServerStream<TCommand, TResult>()
  type: Method
  source:
    id: RegisterServerStream
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Client\RemoteConnection.cs
    startLine: 131
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nregister a &quot;server stream&quot; command (<xref href=\"FastEndpoints.IServerStreamCommand%601\" data-throw-if-not-resolved=\"false\"></xref>) for this remote connection where the handler for it is hosted/located.\n"
  example: []
  syntax:
    content: >-
      public void RegisterServerStream<TCommand, TResult>()

          where TCommand : class, IServerStreamCommand<TResult> where TResult : class
    typeParameters:
    - id: TCommand
      description: the type of the command
    - id: TResult
      description: the type of the result stream
    content.vb: Public Sub RegisterServerStream(Of TCommand As {Class, IServerStreamCommand(Of TResult)}, TResult As Class)
  overload: FastEndpoints.RemoteConnection.RegisterServerStream*
  nameWithType.vb: RemoteConnection.RegisterServerStream(Of TCommand, TResult)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.RemoteConnection.RegisterServerStream(Of TCommand, TResult)()
  name.vb: RegisterServerStream(Of TCommand, TResult)()
- uid: FastEndpoints.RemoteConnection.RegisterClientStream``2
  commentId: M:FastEndpoints.RemoteConnection.RegisterClientStream``2
  id: RegisterClientStream``2
  parent: FastEndpoints.RemoteConnection
  langs:
  - csharp
  - vb
  name: RegisterClientStream<T, TResult>()
  nameWithType: RemoteConnection.RegisterClientStream<T, TResult>()
  fullName: FastEndpoints.RemoteConnection.RegisterClientStream<T, TResult>()
  type: Method
  source:
    id: RegisterClientStream
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Client\RemoteConnection.cs
    startLine: 152
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  summary: "\nregister a remote handler for a &quot;client stream&quot; (<xref href=\"System.Collections.Generic.IAsyncEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>) for this remote connection.\n"
  example: []
  syntax:
    content: >-
      public void RegisterClientStream<T, TResult>()

          where T : class where TResult : class
    typeParameters:
    - id: T
      description: the type of the items in the stream
    - id: TResult
      description: the type of the result that will be received when the stream ends
    content.vb: Public Sub RegisterClientStream(Of T As Class, TResult As Class)
  overload: FastEndpoints.RemoteConnection.RegisterClientStream*
  nameWithType.vb: RemoteConnection.RegisterClientStream(Of T, TResult)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.RemoteConnection.RegisterClientStream(Of T, TResult)()
  name.vb: RegisterClientStream(Of T, TResult)()
references:
- uid: FastEndpoints.ICommandHandler`2
  commentId: T:FastEndpoints.ICommandHandler`2
  name: ICommandHandler<TCommand, TResult>
  nameWithType: ICommandHandler<TCommand, TResult>
  fullName: FastEndpoints.ICommandHandler<TCommand, TResult>
  nameWithType.vb: ICommandHandler(Of TCommand, TResult)
  fullName.vb: FastEndpoints.ICommandHandler(Of TCommand, TResult)
  name.vb: ICommandHandler(Of TCommand, TResult)
  spec.csharp:
  - uid: FastEndpoints.ICommandHandler`2
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: FastEndpoints.ICommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.ICommandHandler`2
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: FastEndpoints.ICommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.RemoteConnection.Register``2
  commentId: M:FastEndpoints.RemoteConnection.Register``2
  isExternal: true
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.RemoteConnection.ChannelOptions*
  commentId: Overload:FastEndpoints.RemoteConnection.ChannelOptions
  name: ChannelOptions
  nameWithType: RemoteConnection.ChannelOptions
  fullName: FastEndpoints.RemoteConnection.ChannelOptions
- uid: Grpc.Net.Client.GrpcChannelOptions
  commentId: T:Grpc.Net.Client.GrpcChannelOptions
  parent: Grpc.Net.Client
  isExternal: true
  name: GrpcChannelOptions
  nameWithType: GrpcChannelOptions
  fullName: Grpc.Net.Client.GrpcChannelOptions
- uid: Grpc.Net.Client
  commentId: N:Grpc.Net.Client
  isExternal: true
  name: Grpc.Net.Client
  nameWithType: Grpc.Net.Client
  fullName: Grpc.Net.Client
- uid: FastEndpoints.RemoteConnection.RemoteAddress*
  commentId: Overload:FastEndpoints.RemoteConnection.RemoteAddress
  name: RemoteAddress
  nameWithType: RemoteConnection.RemoteAddress
  fullName: FastEndpoints.RemoteConnection.RemoteAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FastEndpoints.RemoteConnection.Subscribe*
  commentId: Overload:FastEndpoints.RemoteConnection.Subscribe
  name: Subscribe
  nameWithType: RemoteConnection.Subscribe
  fullName: FastEndpoints.RemoteConnection.Subscribe
- uid: Grpc.Core.CallOptions
  commentId: T:Grpc.Core.CallOptions
  parent: Grpc.Core
  isExternal: true
  name: CallOptions
  nameWithType: CallOptions
  fullName: Grpc.Core.CallOptions
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: FastEndpoints.ICommand
  commentId: T:FastEndpoints.ICommand
  parent: FastEndpoints
  name: ICommand
  nameWithType: ICommand
  fullName: FastEndpoints.ICommand
- uid: FastEndpoints.RemoteConnection.Register*
  commentId: Overload:FastEndpoints.RemoteConnection.Register
  name: Register
  nameWithType: RemoteConnection.Register
  fullName: FastEndpoints.RemoteConnection.Register
- uid: FastEndpoints.ICommand`1
  commentId: T:FastEndpoints.ICommand`1
  name: ICommand<TResult>
  nameWithType: ICommand<TResult>
  fullName: FastEndpoints.ICommand<TResult>
  nameWithType.vb: ICommand(Of TResult)
  fullName.vb: FastEndpoints.ICommand(Of TResult)
  name.vb: ICommand(Of TResult)
  spec.csharp:
  - uid: FastEndpoints.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: FastEndpoints.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: FastEndpoints.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IServerStreamCommand`1
  commentId: T:FastEndpoints.IServerStreamCommand`1
  name: IServerStreamCommand<TResult>
  nameWithType: IServerStreamCommand<TResult>
  fullName: FastEndpoints.IServerStreamCommand<TResult>
  nameWithType.vb: IServerStreamCommand(Of TResult)
  fullName.vb: FastEndpoints.IServerStreamCommand(Of TResult)
  name.vb: IServerStreamCommand(Of TResult)
  spec.csharp:
  - uid: FastEndpoints.IServerStreamCommand`1
    name: IServerStreamCommand
    nameWithType: IServerStreamCommand
    fullName: FastEndpoints.IServerStreamCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IServerStreamCommand`1
    name: IServerStreamCommand
    nameWithType: IServerStreamCommand
    fullName: FastEndpoints.IServerStreamCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.RemoteConnection.RegisterServerStream*
  commentId: Overload:FastEndpoints.RemoteConnection.RegisterServerStream
  name: RegisterServerStream
  nameWithType: RemoteConnection.RegisterServerStream
  fullName: FastEndpoints.RemoteConnection.RegisterServerStream
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.RemoteConnection.RegisterClientStream*
  commentId: Overload:FastEndpoints.RemoteConnection.RegisterClientStream
  name: RegisterClientStream
  nameWithType: RemoteConnection.RegisterClientStream
  fullName: FastEndpoints.RemoteConnection.RegisterClientStream
