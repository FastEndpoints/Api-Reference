### YamlMime:ManagedReference
items:
- uid: FastEndpoints.InMemoryEventHubStorage
  commentId: T:FastEndpoints.InMemoryEventHubStorage
  id: InMemoryEventHubStorage
  parent: FastEndpoints
  children:
  - FastEndpoints.InMemoryEventHubStorage.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  - FastEndpoints.InMemoryEventHubStorage.MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  - FastEndpoints.InMemoryEventHubStorage.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  - FastEndpoints.InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord})
  - FastEndpoints.InMemoryEventHubStorage.StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: InMemoryEventHubStorage
  nameWithType: InMemoryEventHubStorage
  fullName: FastEndpoints.InMemoryEventHubStorage
  type: Class
  source:
    id: InMemoryEventHubStorage
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\Events\Storage\InMemoryEventHubStorage.cs
    startLine: 5
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  syntax:
    content: 'public sealed class InMemoryEventHubStorage : IEventHubStorageProvider<InMemoryEventStorageRecord>'
    content.vb: >-
      Public NotInheritable Class InMemoryEventHubStorage

          Implements IEventHubStorageProvider(Of InMemoryEventStorageRecord)
  inheritance:
  - System.Object
  implements:
  - FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: FastEndpoints.InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord})
  commentId: M:FastEndpoints.InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord})
  id: RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord})
  parent: FastEndpoints.InMemoryEventHubStorage
  langs:
  - csharp
  - vb
  name: RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<InMemoryEventStorageRecord>)
  nameWithType: InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<InMemoryEventStorageRecord>)
  fullName: FastEndpoints.InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams<FastEndpoints.InMemoryEventStorageRecord>)
  type: Method
  source:
    id: RestoreSubscriberIDsForEventTypeAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\Events\Storage\InMemoryEventHubStorage.cs
    startLine: 11
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  syntax:
    content: public ValueTask<IEnumerable<string>> RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<InMemoryEventStorageRecord> p)
    parameters:
    - id: p
      type: FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord}
    return:
      type: System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{System.String}}
    content.vb: Public Function RestoreSubscriberIDsForEventTypeAsync(p As SubscriberIDRestorationParams(Of InMemoryEventStorageRecord)) As ValueTask(Of IEnumerable(Of String))
  overload: FastEndpoints.InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync*
  implements:
  - FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord})
  nameWithType.vb: InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams(Of InMemoryEventStorageRecord))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams(Of FastEndpoints.InMemoryEventStorageRecord))
  name.vb: RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams(Of InMemoryEventStorageRecord))
- uid: FastEndpoints.InMemoryEventHubStorage.StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.InMemoryEventHubStorage.StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  id: StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  parent: FastEndpoints.InMemoryEventHubStorage
  langs:
  - csharp
  - vb
  name: StoreEventAsync(InMemoryEventStorageRecord, CancellationToken)
  nameWithType: InMemoryEventHubStorage.StoreEventAsync(InMemoryEventStorageRecord, CancellationToken)
  fullName: FastEndpoints.InMemoryEventHubStorage.StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord, System.Threading.CancellationToken)
  type: Method
  source:
    id: StoreEventAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\Events\Storage\InMemoryEventHubStorage.cs
    startLine: 14
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  syntax:
    content: public ValueTask StoreEventAsync(InMemoryEventStorageRecord e, CancellationToken _)
    parameters:
    - id: e
      type: FastEndpoints.InMemoryEventStorageRecord
    - id: _
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Public Function StoreEventAsync(e As InMemoryEventStorageRecord, _ As CancellationToken) As ValueTask
  overload: FastEndpoints.InMemoryEventHubStorage.StoreEventAsync*
  implements:
  - FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FastEndpoints.InMemoryEventHubStorage.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  commentId: M:FastEndpoints.InMemoryEventHubStorage.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  id: GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  parent: FastEndpoints.InMemoryEventHubStorage
  langs:
  - csharp
  - vb
  name: GetNextBatchAsync(PendingRecordSearchParams<InMemoryEventStorageRecord>)
  nameWithType: InMemoryEventHubStorage.GetNextBatchAsync(PendingRecordSearchParams<InMemoryEventStorageRecord>)
  fullName: FastEndpoints.InMemoryEventHubStorage.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams<FastEndpoints.InMemoryEventStorageRecord>)
  type: Method
  source:
    id: GetNextBatchAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\Events\Storage\InMemoryEventHubStorage.cs
    startLine: 26
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  syntax:
    content: public ValueTask<IEnumerable<InMemoryEventStorageRecord>> GetNextBatchAsync(PendingRecordSearchParams<InMemoryEventStorageRecord> p)
    parameters:
    - id: p
      type: FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord}
    return:
      type: System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{FastEndpoints.InMemoryEventStorageRecord}}
    content.vb: Public Function GetNextBatchAsync(p As PendingRecordSearchParams(Of InMemoryEventStorageRecord)) As ValueTask(Of IEnumerable(Of InMemoryEventStorageRecord))
  overload: FastEndpoints.InMemoryEventHubStorage.GetNextBatchAsync*
  implements:
  - FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  nameWithType.vb: InMemoryEventHubStorage.GetNextBatchAsync(PendingRecordSearchParams(Of InMemoryEventStorageRecord))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.InMemoryEventHubStorage.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams(Of FastEndpoints.InMemoryEventStorageRecord))
  name.vb: GetNextBatchAsync(PendingRecordSearchParams(Of InMemoryEventStorageRecord))
- uid: FastEndpoints.InMemoryEventHubStorage.MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.InMemoryEventHubStorage.MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  id: MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  parent: FastEndpoints.InMemoryEventHubStorage
  langs:
  - csharp
  - vb
  name: MarkEventAsCompleteAsync(InMemoryEventStorageRecord, CancellationToken)
  nameWithType: InMemoryEventHubStorage.MarkEventAsCompleteAsync(InMemoryEventStorageRecord, CancellationToken)
  fullName: FastEndpoints.InMemoryEventHubStorage.MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord, System.Threading.CancellationToken)
  type: Method
  source:
    id: MarkEventAsCompleteAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\Events\Storage\InMemoryEventHubStorage.cs
    startLine: 41
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  syntax:
    content: public ValueTask MarkEventAsCompleteAsync(InMemoryEventStorageRecord e, CancellationToken ct)
    parameters:
    - id: e
      type: FastEndpoints.InMemoryEventStorageRecord
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Public Function MarkEventAsCompleteAsync(e As InMemoryEventStorageRecord, ct As CancellationToken) As ValueTask
  overload: FastEndpoints.InMemoryEventHubStorage.MarkEventAsCompleteAsync*
  implements:
  - FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FastEndpoints.InMemoryEventHubStorage.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  commentId: M:FastEndpoints.InMemoryEventHubStorage.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  id: PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  parent: FastEndpoints.InMemoryEventHubStorage
  langs:
  - csharp
  - vb
  name: PurgeStaleRecordsAsync(StaleRecordSearchParams<InMemoryEventStorageRecord>)
  nameWithType: InMemoryEventHubStorage.PurgeStaleRecordsAsync(StaleRecordSearchParams<InMemoryEventStorageRecord>)
  fullName: FastEndpoints.InMemoryEventHubStorage.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams<FastEndpoints.InMemoryEventStorageRecord>)
  type: Method
  source:
    id: PurgeStaleRecordsAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Messaging.Remote\Server\Events\Storage\InMemoryEventHubStorage.cs
    startLine: 44
  assemblies:
  - FastEndpoints.Messaging.Remote
  namespace: FastEndpoints
  syntax:
    content: public ValueTask PurgeStaleRecordsAsync(StaleRecordSearchParams<InMemoryEventStorageRecord> p)
    parameters:
    - id: p
      type: FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord}
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Public Function PurgeStaleRecordsAsync(p As StaleRecordSearchParams(Of InMemoryEventStorageRecord)) As ValueTask
  overload: FastEndpoints.InMemoryEventHubStorage.PurgeStaleRecordsAsync*
  implements:
  - FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  nameWithType.vb: InMemoryEventHubStorage.PurgeStaleRecordsAsync(StaleRecordSearchParams(Of InMemoryEventStorageRecord))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.InMemoryEventHubStorage.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams(Of FastEndpoints.InMemoryEventStorageRecord))
  name.vb: PurgeStaleRecordsAsync(StaleRecordSearchParams(Of InMemoryEventStorageRecord))
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}
  commentId: T:FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}
  parent: FastEndpoints
  definition: FastEndpoints.IEventHubStorageProvider`1
  name: IEventHubStorageProvider<InMemoryEventStorageRecord>
  nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>
  fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>
  nameWithType.vb: IEventHubStorageProvider(Of InMemoryEventStorageRecord)
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord)
  name.vb: IEventHubStorageProvider(Of InMemoryEventStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1
    name: IEventHubStorageProvider
    nameWithType: IEventHubStorageProvider
    fullName: FastEndpoints.IEventHubStorageProvider
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1
    name: IEventHubStorageProvider
    nameWithType: IEventHubStorageProvider
    fullName: FastEndpoints.IEventHubStorageProvider
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.IEventHubStorageProvider`1
  commentId: T:FastEndpoints.IEventHubStorageProvider`1
  name: IEventHubStorageProvider<TStorageRecord>
  nameWithType: IEventHubStorageProvider<TStorageRecord>
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord)
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord)
  name.vb: IEventHubStorageProvider(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1
    name: IEventHubStorageProvider
    nameWithType: IEventHubStorageProvider
    fullName: FastEndpoints.IEventHubStorageProvider
  - name: <
    nameWithType: <
    fullName: <
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1
    name: IEventHubStorageProvider
    nameWithType: IEventHubStorageProvider
    fullName: FastEndpoints.IEventHubStorageProvider
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync*
  commentId: Overload:FastEndpoints.InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync
  name: RestoreSubscriberIDsForEventTypeAsync
  nameWithType: InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync
  fullName: FastEndpoints.InMemoryEventHubStorage.RestoreSubscriberIDsForEventTypeAsync
- uid: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord})
  commentId: M:FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord})
  parent: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}
  definition: FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
  name: RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<InMemoryEventStorageRecord>)
  nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<InMemoryEventStorageRecord>)
  fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams<FastEndpoints.InMemoryEventStorageRecord>)
  nameWithType.vb: IEventHubStorageProvider(Of InMemoryEventStorageRecord).RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams(Of InMemoryEventStorageRecord))
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams(Of FastEndpoints.InMemoryEventStorageRecord))
  name.vb: RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams(Of InMemoryEventStorageRecord))
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
    name: RestoreSubscriberIDsForEventTypeAsync
    nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.RestoreSubscriberIDsForEventTypeAsync
    fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.RestoreSubscriberIDsForEventTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    nameWithType: SubscriberIDRestorationParams
    fullName: FastEndpoints.SubscriberIDRestorationParams
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
    name: RestoreSubscriberIDsForEventTypeAsync
    nameWithType: IEventHubStorageProvider(Of InMemoryEventStorageRecord).RestoreSubscriberIDsForEventTypeAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).RestoreSubscriberIDsForEventTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    nameWithType: SubscriberIDRestorationParams
    fullName: FastEndpoints.SubscriberIDRestorationParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord}
  commentId: T:FastEndpoints.SubscriberIDRestorationParams{FastEndpoints.InMemoryEventStorageRecord}
  parent: FastEndpoints
  definition: FastEndpoints.SubscriberIDRestorationParams`1
  name: SubscriberIDRestorationParams<InMemoryEventStorageRecord>
  nameWithType: SubscriberIDRestorationParams<InMemoryEventStorageRecord>
  fullName: FastEndpoints.SubscriberIDRestorationParams<FastEndpoints.InMemoryEventStorageRecord>
  nameWithType.vb: SubscriberIDRestorationParams(Of InMemoryEventStorageRecord)
  fullName.vb: FastEndpoints.SubscriberIDRestorationParams(Of FastEndpoints.InMemoryEventStorageRecord)
  name.vb: SubscriberIDRestorationParams(Of InMemoryEventStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    nameWithType: SubscriberIDRestorationParams
    fullName: FastEndpoints.SubscriberIDRestorationParams
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    nameWithType: SubscriberIDRestorationParams
    fullName: FastEndpoints.SubscriberIDRestorationParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{System.String}}
  commentId: T:System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<IEnumerable<String>>
  nameWithType: ValueTask<IEnumerable<String>>
  fullName: System.Threading.Tasks.ValueTask<System.Collections.Generic.IEnumerable<System.String>>
  nameWithType.vb: ValueTask(Of IEnumerable(Of String))
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ValueTask(Of IEnumerable(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
  name: RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<TStorageRecord>)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams<TStorageRecord>)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams<TStorageRecord>)
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams(Of TStorageRecord))
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams(Of TStorageRecord))
  name.vb: RestoreSubscriberIDsForEventTypeAsync(SubscriberIDRestorationParams(Of TStorageRecord))
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
    name: RestoreSubscriberIDsForEventTypeAsync
    nameWithType: IEventHubStorageProvider<TStorageRecord>.RestoreSubscriberIDsForEventTypeAsync
    fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.RestoreSubscriberIDsForEventTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    nameWithType: SubscriberIDRestorationParams
    fullName: FastEndpoints.SubscriberIDRestorationParams
  - name: <
    nameWithType: <
    fullName: <
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.RestoreSubscriberIDsForEventTypeAsync(FastEndpoints.SubscriberIDRestorationParams{`0})
    name: RestoreSubscriberIDsForEventTypeAsync
    nameWithType: IEventHubStorageProvider(Of TStorageRecord).RestoreSubscriberIDsForEventTypeAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).RestoreSubscriberIDsForEventTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    nameWithType: SubscriberIDRestorationParams
    fullName: FastEndpoints.SubscriberIDRestorationParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.SubscriberIDRestorationParams`1
  commentId: T:FastEndpoints.SubscriberIDRestorationParams`1
  name: SubscriberIDRestorationParams<TStorageRecord>
  nameWithType: SubscriberIDRestorationParams<TStorageRecord>
  fullName: FastEndpoints.SubscriberIDRestorationParams<TStorageRecord>
  nameWithType.vb: SubscriberIDRestorationParams(Of TStorageRecord)
  fullName.vb: FastEndpoints.SubscriberIDRestorationParams(Of TStorageRecord)
  name.vb: SubscriberIDRestorationParams(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    nameWithType: SubscriberIDRestorationParams
    fullName: FastEndpoints.SubscriberIDRestorationParams
  - name: <
    nameWithType: <
    fullName: <
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.SubscriberIDRestorationParams`1
    name: SubscriberIDRestorationParams
    nameWithType: SubscriberIDRestorationParams
    fullName: FastEndpoints.SubscriberIDRestorationParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FastEndpoints.InMemoryEventHubStorage.StoreEventAsync*
  commentId: Overload:FastEndpoints.InMemoryEventHubStorage.StoreEventAsync
  name: StoreEventAsync
  nameWithType: InMemoryEventHubStorage.StoreEventAsync
  fullName: FastEndpoints.InMemoryEventHubStorage.StoreEventAsync
- uid: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  parent: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}
  definition: FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
  name: StoreEventAsync(InMemoryEventStorageRecord, CancellationToken)
  nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.StoreEventAsync(InMemoryEventStorageRecord, CancellationToken)
  fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord, System.Threading.CancellationToken)
  nameWithType.vb: IEventHubStorageProvider(Of InMemoryEventStorageRecord).StoreEventAsync(InMemoryEventStorageRecord, CancellationToken)
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).StoreEventAsync(FastEndpoints.InMemoryEventStorageRecord, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
    name: StoreEventAsync
    nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.StoreEventAsync
    fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.StoreEventAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
    name: StoreEventAsync
    nameWithType: IEventHubStorageProvider(Of InMemoryEventStorageRecord).StoreEventAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).StoreEventAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.InMemoryEventStorageRecord
  commentId: T:FastEndpoints.InMemoryEventStorageRecord
  parent: FastEndpoints
  name: InMemoryEventStorageRecord
  nameWithType: InMemoryEventStorageRecord
  fullName: FastEndpoints.InMemoryEventStorageRecord
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
- uid: FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: StoreEventAsync(TStorageRecord, CancellationToken)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.StoreEventAsync(TStorageRecord, CancellationToken)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.StoreEventAsync(TStorageRecord, System.Threading.CancellationToken)
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).StoreEventAsync(TStorageRecord, CancellationToken)
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).StoreEventAsync(TStorageRecord, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
    name: StoreEventAsync
    nameWithType: IEventHubStorageProvider<TStorageRecord>.StoreEventAsync
    fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.StoreEventAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.StoreEventAsync(`0,System.Threading.CancellationToken)
    name: StoreEventAsync
    nameWithType: IEventHubStorageProvider(Of TStorageRecord).StoreEventAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).StoreEventAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: FastEndpoints.InMemoryEventHubStorage.GetNextBatchAsync*
  commentId: Overload:FastEndpoints.InMemoryEventHubStorage.GetNextBatchAsync
  name: GetNextBatchAsync
  nameWithType: InMemoryEventHubStorage.GetNextBatchAsync
  fullName: FastEndpoints.InMemoryEventHubStorage.GetNextBatchAsync
- uid: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  commentId: M:FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  parent: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}
  definition: FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
  name: GetNextBatchAsync(PendingRecordSearchParams<InMemoryEventStorageRecord>)
  nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.GetNextBatchAsync(PendingRecordSearchParams<InMemoryEventStorageRecord>)
  fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams<FastEndpoints.InMemoryEventStorageRecord>)
  nameWithType.vb: IEventHubStorageProvider(Of InMemoryEventStorageRecord).GetNextBatchAsync(PendingRecordSearchParams(Of InMemoryEventStorageRecord))
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams(Of FastEndpoints.InMemoryEventStorageRecord))
  name.vb: GetNextBatchAsync(PendingRecordSearchParams(Of InMemoryEventStorageRecord))
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
    name: GetNextBatchAsync
    nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.GetNextBatchAsync
    fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.GetNextBatchAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    nameWithType: PendingRecordSearchParams
    fullName: FastEndpoints.PendingRecordSearchParams
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
    name: GetNextBatchAsync
    nameWithType: IEventHubStorageProvider(Of InMemoryEventStorageRecord).GetNextBatchAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).GetNextBatchAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    nameWithType: PendingRecordSearchParams
    fullName: FastEndpoints.PendingRecordSearchParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord}
  commentId: T:FastEndpoints.PendingRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord}
  parent: FastEndpoints
  definition: FastEndpoints.PendingRecordSearchParams`1
  name: PendingRecordSearchParams<InMemoryEventStorageRecord>
  nameWithType: PendingRecordSearchParams<InMemoryEventStorageRecord>
  fullName: FastEndpoints.PendingRecordSearchParams<FastEndpoints.InMemoryEventStorageRecord>
  nameWithType.vb: PendingRecordSearchParams(Of InMemoryEventStorageRecord)
  fullName.vb: FastEndpoints.PendingRecordSearchParams(Of FastEndpoints.InMemoryEventStorageRecord)
  name.vb: PendingRecordSearchParams(Of InMemoryEventStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    nameWithType: PendingRecordSearchParams
    fullName: FastEndpoints.PendingRecordSearchParams
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    nameWithType: PendingRecordSearchParams
    fullName: FastEndpoints.PendingRecordSearchParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{FastEndpoints.InMemoryEventStorageRecord}}
  commentId: T:System.Threading.Tasks.ValueTask{System.Collections.Generic.IEnumerable{FastEndpoints.InMemoryEventStorageRecord}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<IEnumerable<InMemoryEventStorageRecord>>
  nameWithType: ValueTask<IEnumerable<InMemoryEventStorageRecord>>
  fullName: System.Threading.Tasks.ValueTask<System.Collections.Generic.IEnumerable<FastEndpoints.InMemoryEventStorageRecord>>
  nameWithType.vb: ValueTask(Of IEnumerable(Of InMemoryEventStorageRecord))
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Collections.Generic.IEnumerable(Of FastEndpoints.InMemoryEventStorageRecord))
  name.vb: ValueTask(Of IEnumerable(Of InMemoryEventStorageRecord))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
  name: GetNextBatchAsync(PendingRecordSearchParams<TStorageRecord>)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.GetNextBatchAsync(PendingRecordSearchParams<TStorageRecord>)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams<TStorageRecord>)
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).GetNextBatchAsync(PendingRecordSearchParams(Of TStorageRecord))
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams(Of TStorageRecord))
  name.vb: GetNextBatchAsync(PendingRecordSearchParams(Of TStorageRecord))
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
    name: GetNextBatchAsync
    nameWithType: IEventHubStorageProvider<TStorageRecord>.GetNextBatchAsync
    fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.GetNextBatchAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    nameWithType: PendingRecordSearchParams
    fullName: FastEndpoints.PendingRecordSearchParams
  - name: <
    nameWithType: <
    fullName: <
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.GetNextBatchAsync(FastEndpoints.PendingRecordSearchParams{`0})
    name: GetNextBatchAsync
    nameWithType: IEventHubStorageProvider(Of TStorageRecord).GetNextBatchAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).GetNextBatchAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    nameWithType: PendingRecordSearchParams
    fullName: FastEndpoints.PendingRecordSearchParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.PendingRecordSearchParams`1
  commentId: T:FastEndpoints.PendingRecordSearchParams`1
  name: PendingRecordSearchParams<TStorageRecord>
  nameWithType: PendingRecordSearchParams<TStorageRecord>
  fullName: FastEndpoints.PendingRecordSearchParams<TStorageRecord>
  nameWithType.vb: PendingRecordSearchParams(Of TStorageRecord)
  fullName.vb: FastEndpoints.PendingRecordSearchParams(Of TStorageRecord)
  name.vb: PendingRecordSearchParams(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    nameWithType: PendingRecordSearchParams
    fullName: FastEndpoints.PendingRecordSearchParams
  - name: <
    nameWithType: <
    fullName: <
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.PendingRecordSearchParams`1
    name: PendingRecordSearchParams
    nameWithType: PendingRecordSearchParams
    fullName: FastEndpoints.PendingRecordSearchParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.InMemoryEventHubStorage.MarkEventAsCompleteAsync*
  commentId: Overload:FastEndpoints.InMemoryEventHubStorage.MarkEventAsCompleteAsync
  name: MarkEventAsCompleteAsync
  nameWithType: InMemoryEventHubStorage.MarkEventAsCompleteAsync
  fullName: FastEndpoints.InMemoryEventHubStorage.MarkEventAsCompleteAsync
- uid: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord,System.Threading.CancellationToken)
  parent: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}
  definition: FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
  name: MarkEventAsCompleteAsync(InMemoryEventStorageRecord, CancellationToken)
  nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.MarkEventAsCompleteAsync(InMemoryEventStorageRecord, CancellationToken)
  fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord, System.Threading.CancellationToken)
  nameWithType.vb: IEventHubStorageProvider(Of InMemoryEventStorageRecord).MarkEventAsCompleteAsync(InMemoryEventStorageRecord, CancellationToken)
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).MarkEventAsCompleteAsync(FastEndpoints.InMemoryEventStorageRecord, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
    name: MarkEventAsCompleteAsync
    nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.MarkEventAsCompleteAsync
    fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.MarkEventAsCompleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
    name: MarkEventAsCompleteAsync
    nameWithType: IEventHubStorageProvider(Of InMemoryEventStorageRecord).MarkEventAsCompleteAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).MarkEventAsCompleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: MarkEventAsCompleteAsync(TStorageRecord, CancellationToken)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.MarkEventAsCompleteAsync(TStorageRecord, CancellationToken)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.MarkEventAsCompleteAsync(TStorageRecord, System.Threading.CancellationToken)
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).MarkEventAsCompleteAsync(TStorageRecord, CancellationToken)
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).MarkEventAsCompleteAsync(TStorageRecord, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
    name: MarkEventAsCompleteAsync
    nameWithType: IEventHubStorageProvider<TStorageRecord>.MarkEventAsCompleteAsync
    fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.MarkEventAsCompleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.MarkEventAsCompleteAsync(`0,System.Threading.CancellationToken)
    name: MarkEventAsCompleteAsync
    nameWithType: IEventHubStorageProvider(Of TStorageRecord).MarkEventAsCompleteAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).MarkEventAsCompleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.InMemoryEventHubStorage.PurgeStaleRecordsAsync*
  commentId: Overload:FastEndpoints.InMemoryEventHubStorage.PurgeStaleRecordsAsync
  name: PurgeStaleRecordsAsync
  nameWithType: InMemoryEventHubStorage.PurgeStaleRecordsAsync
  fullName: FastEndpoints.InMemoryEventHubStorage.PurgeStaleRecordsAsync
- uid: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  commentId: M:FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord})
  parent: FastEndpoints.IEventHubStorageProvider{FastEndpoints.InMemoryEventStorageRecord}
  definition: FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
  name: PurgeStaleRecordsAsync(StaleRecordSearchParams<InMemoryEventStorageRecord>)
  nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.PurgeStaleRecordsAsync(StaleRecordSearchParams<InMemoryEventStorageRecord>)
  fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams<FastEndpoints.InMemoryEventStorageRecord>)
  nameWithType.vb: IEventHubStorageProvider(Of InMemoryEventStorageRecord).PurgeStaleRecordsAsync(StaleRecordSearchParams(Of InMemoryEventStorageRecord))
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams(Of FastEndpoints.InMemoryEventStorageRecord))
  name.vb: PurgeStaleRecordsAsync(StaleRecordSearchParams(Of InMemoryEventStorageRecord))
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
    name: PurgeStaleRecordsAsync
    nameWithType: IEventHubStorageProvider<InMemoryEventStorageRecord>.PurgeStaleRecordsAsync
    fullName: FastEndpoints.IEventHubStorageProvider<FastEndpoints.InMemoryEventStorageRecord>.PurgeStaleRecordsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    nameWithType: StaleRecordSearchParams
    fullName: FastEndpoints.StaleRecordSearchParams
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
    name: PurgeStaleRecordsAsync
    nameWithType: IEventHubStorageProvider(Of InMemoryEventStorageRecord).PurgeStaleRecordsAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of FastEndpoints.InMemoryEventStorageRecord).PurgeStaleRecordsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    nameWithType: StaleRecordSearchParams
    fullName: FastEndpoints.StaleRecordSearchParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord}
  commentId: T:FastEndpoints.StaleRecordSearchParams{FastEndpoints.InMemoryEventStorageRecord}
  parent: FastEndpoints
  definition: FastEndpoints.StaleRecordSearchParams`1
  name: StaleRecordSearchParams<InMemoryEventStorageRecord>
  nameWithType: StaleRecordSearchParams<InMemoryEventStorageRecord>
  fullName: FastEndpoints.StaleRecordSearchParams<FastEndpoints.InMemoryEventStorageRecord>
  nameWithType.vb: StaleRecordSearchParams(Of InMemoryEventStorageRecord)
  fullName.vb: FastEndpoints.StaleRecordSearchParams(Of FastEndpoints.InMemoryEventStorageRecord)
  name.vb: StaleRecordSearchParams(Of InMemoryEventStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    nameWithType: StaleRecordSearchParams
    fullName: FastEndpoints.StaleRecordSearchParams
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    nameWithType: StaleRecordSearchParams
    fullName: FastEndpoints.StaleRecordSearchParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.InMemoryEventStorageRecord
    name: InMemoryEventStorageRecord
    nameWithType: InMemoryEventStorageRecord
    fullName: FastEndpoints.InMemoryEventStorageRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
  commentId: M:FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
  name: PurgeStaleRecordsAsync(StaleRecordSearchParams<TStorageRecord>)
  nameWithType: IEventHubStorageProvider<TStorageRecord>.PurgeStaleRecordsAsync(StaleRecordSearchParams<TStorageRecord>)
  fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams<TStorageRecord>)
  nameWithType.vb: IEventHubStorageProvider(Of TStorageRecord).PurgeStaleRecordsAsync(StaleRecordSearchParams(Of TStorageRecord))
  fullName.vb: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams(Of TStorageRecord))
  name.vb: PurgeStaleRecordsAsync(StaleRecordSearchParams(Of TStorageRecord))
  spec.csharp:
  - uid: FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
    name: PurgeStaleRecordsAsync
    nameWithType: IEventHubStorageProvider<TStorageRecord>.PurgeStaleRecordsAsync
    fullName: FastEndpoints.IEventHubStorageProvider<TStorageRecord>.PurgeStaleRecordsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    nameWithType: StaleRecordSearchParams
    fullName: FastEndpoints.StaleRecordSearchParams
  - name: <
    nameWithType: <
    fullName: <
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.IEventHubStorageProvider`1.PurgeStaleRecordsAsync(FastEndpoints.StaleRecordSearchParams{`0})
    name: PurgeStaleRecordsAsync
    nameWithType: IEventHubStorageProvider(Of TStorageRecord).PurgeStaleRecordsAsync
    fullName: FastEndpoints.IEventHubStorageProvider(Of TStorageRecord).PurgeStaleRecordsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    nameWithType: StaleRecordSearchParams
    fullName: FastEndpoints.StaleRecordSearchParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.StaleRecordSearchParams`1
  commentId: T:FastEndpoints.StaleRecordSearchParams`1
  name: StaleRecordSearchParams<TStorageRecord>
  nameWithType: StaleRecordSearchParams<TStorageRecord>
  fullName: FastEndpoints.StaleRecordSearchParams<TStorageRecord>
  nameWithType.vb: StaleRecordSearchParams(Of TStorageRecord)
  fullName.vb: FastEndpoints.StaleRecordSearchParams(Of TStorageRecord)
  name.vb: StaleRecordSearchParams(Of TStorageRecord)
  spec.csharp:
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    nameWithType: StaleRecordSearchParams
    fullName: FastEndpoints.StaleRecordSearchParams
  - name: <
    nameWithType: <
    fullName: <
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.StaleRecordSearchParams`1
    name: StaleRecordSearchParams
    nameWithType: StaleRecordSearchParams
    fullName: FastEndpoints.StaleRecordSearchParams
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStorageRecord
    nameWithType: TStorageRecord
    fullName: TStorageRecord
  - name: )
    nameWithType: )
    fullName: )
