{
  "api/FastEndpoints.BaseEndpoint.html": {
    "href": "api/FastEndpoints.BaseEndpoint.html",
    "title": "Class BaseEndpoint | FastEndpoints",
    "keywords": "Class BaseEndpoint the base class all fast endpoints inherit from Inheritance System.Object BaseEndpoint Endpoint<TRequest, TResponse> Implements IEndpoint Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class BaseEndpoint : IEndpoint Properties Definition the base class all fast endpoints inherit from Declaration public EndpointDefinition Definition { get; } Property Value Type Description EndpointDefinition HttpContext the base class all fast endpoints inherit from Declaration public HttpContext HttpContext { get; } Property Value Type Description Microsoft.AspNetCore.Http.HttpContext ValidationFailures the base class all fast endpoints inherit from Declaration public List<ValidationFailure> ValidationFailures { get; } Property Value Type Description System.Collections.Generic.List < FluentValidation.Results.ValidationFailure > Methods Configure() use this method to configure how the endpoint should be listening to incoming requests. HINT: it is only called once during endpoint auto registration during app startup. Declaration public virtual void Configure() Group<TEndpointGroup>() the base class all fast endpoints inherit from Declaration protected virtual void Group<TEndpointGroup>() where TEndpointGroup : Group, new() Type Parameters Name Description TEndpointGroup Verbs(String[]) the base class all fast endpoints inherit from Declaration public virtual void Verbs(params string[] methods) Parameters Type Name Description System.String [] methods Implements IEndpoint"
  },
  "api/FastEndpoints.BinderContext.html": {
    "href": "api/FastEndpoints.BinderContext.html",
    "title": "Struct BinderContext | FastEndpoints",
    "keywords": "Struct BinderContext binder context supplied to custom request binders. Implements IServiceResolverBase Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public readonly struct BinderContext : IServiceResolverBase Constructors BinderContext(HttpContext, List<ValidationFailure>, JsonSerializerContext, Boolean) constructor of the binder context Declaration public BinderContext(HttpContext httpContext, List<ValidationFailure> validationFailures, JsonSerializerContext jsonSerializerContext, bool dontAutoBindForms) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext httpContext the http context of the current request System.Collections.Generic.List < FluentValidation.Results.ValidationFailure > validationFailures the validation failure collection of the endpoint System.Text.Json.Serialization.JsonSerializerContext jsonSerializerContext json serializer context of the endpoint if applicable System.Boolean dontAutoBindForms whether or not to enable auto binding of form data Properties DontAutoBindForms set 'true' to disable auto binding of form data which enables uploading and reading of large files without buffering to memory/disk. you can access the multipart sections for reading via the FormFileSectionsAsync() method. Declaration public bool DontAutoBindForms { readonly get; set; } Property Value Type Description System.Boolean HttpContext the http context of the current request Declaration public HttpContext HttpContext { readonly get; set; } Property Value Type Description Microsoft.AspNetCore.Http.HttpContext JsonSerializerContext if the current endpoint is configured with a json serializer context, it will be provided to the custom request binder with this property. Declaration public JsonSerializerContext JsonSerializerContext { readonly get; set; } Property Value Type Description System.Text.Json.Serialization.JsonSerializerContext SerializerOptions the configured json serializer options of the app, which was specified at app startup. Declaration public readonly JsonSerializerOptions SerializerOptions { get; } Property Value Type Description System.Text.Json.JsonSerializerOptions ValidationFailures a list of validation failures for the endpoint. you can add your own validation failures for properties of the request dto using this property. Declaration public List<ValidationFailure> ValidationFailures { readonly get; set; } Property Value Type Description System.Collections.Generic.List < FluentValidation.Results.ValidationFailure > Methods CreateScope() binder context supplied to custom request binders. Declaration public readonly IServiceScope CreateScope() Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceScope Resolve(Type) binder context supplied to custom request binders. Declaration public readonly object Resolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object Resolve<TService>() binder context supplied to custom request binders. Declaration public readonly TService Resolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService TryResolve(Type) binder context supplied to custom request binders. Declaration public readonly object TryResolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object TryResolve<TService>() binder context supplied to custom request binders. Declaration public readonly TService TryResolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService Implements IServiceResolverBase"
  },
  "api/FastEndpoints.BindFromAttribute.html": {
    "href": "api/FastEndpoints.BindFromAttribute.html",
    "title": "Class BindFromAttribute | FastEndpoints",
    "keywords": "Class BindFromAttribute use this attribute to specify the name of route param, query param, or form field if it's different from the name of the property being bound to. Inheritance System.Object System.Attribute BindFromAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class BindFromAttribute : Attribute Constructors BindFromAttribute(String) use this attribute to specify the name of route param, query param, or form field if it's different from the name of the property being bound to. Declaration public BindFromAttribute(string name) Parameters Type Name Description System.String name the name to use for binding Properties Name the name of the incoming query param, route param or form field Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/FastEndpoints.BindingOptions.html": {
    "href": "api/FastEndpoints.BindingOptions.html",
    "title": "Class BindingOptions | FastEndpoints",
    "keywords": "Class BindingOptions request binding options Inheritance System.Object BindingOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class BindingOptions Properties FailureMessage a function used to construct the failure message when a supplied value cannot be succesfully bound to a dto property during model binding. the following arguments are supplied to the function. System.Type : the type of the property which failed to bind System.String : the name of the property which failed to bind Microsoft.Extensions.Primitives.StringValues : the value that was attempted which resulted in the failure use these input parameters and construct your own error message string and return it from the function. Declaration public Func<Type, string, StringValues, string> FailureMessage { set; } Property Value Type Description System.Func < System.Type , System.String , Microsoft.Extensions.Primitives.StringValues , System.String > Modifier an optional action to be run after the endpoint level request binding has occured. it is intended as a way to perform common model binding logic that applies to all endpoints/requests. the action is passed in the following arguments: System.Object : the request dto instance System.Type : the type of the request dto BinderContext : the request binding context System.Threading.CancellationToken : a cancellation token WARNING: be mindful of the performance cost of using reflection to modify the request dto object Declaration public Action<object, Type, BinderContext, CancellationToken> Modifier { set; } Property Value Type Description System.Action < System.Object , System.Type , BinderContext , System.Threading.CancellationToken > Methods ValueParserFor(Type, Func<Object, ParseResult>) add a custom value parser function for any given type which the default model binder will use to parse values when model binding request dto properties from query/route/forms/headers/claims. this is an alternative approach to adding a TryParse() function to your types that need model binding support from the abovementioned binding sources. once you register a parser function here for a type, any TryParse() method on the type will not be used for parsing. also, these parser functions do not apply to JSON deserialization done by STJ and can be considered the equivalent to registering a custom converter in STJ when it comes to query/route/forms/headers/claims binding sources. Declaration public bool ValueParserFor(Type type, Func<object, ParseResult> parser) Parameters Type Name Description System.Type type the type of the class which this parser function will target System.Func < System.Object , ParseResult > parser a function that takes in a nullable object and returns a ParseResult as the output. app.UseFastEndpoints(c => { c.Binding.ValueParserFor(typeof(Guid), MyParsers.GuidParser); }); public static class MyParsers { public static ParseResult GuidParser(object? input) { Guid result; bool success = Guid.TryParse(input?.ToString(), out result); return new(success, result); } } Returns Type Description System.Boolean ValueParserFor<T>(Func<Object, ParseResult>) add a custom value parser function for any given type which the default model binder will use to parse values when model binding request dto properties from query/route/forms/headers/claims. this is an alternative approach to adding a TryParse() function to your types that need model binding support from the abovementioned binding sources. once you register a parser function here for a type, any TryParse() method on the type will not be used for parsing. also, these parser functions do not apply to JSON deserialization done by STJ and can be considered the equivalent to registering a custom converter in STJ when it comes to query/route/forms/headers/claims binding sources. Declaration public bool ValueParserFor<T>(Func<object, ParseResult> parser) Parameters Type Name Description System.Func < System.Object , ParseResult > parser a function that takes in a nullable object and returns a ParseResult as the output. app.UseFastEndpoints(c => { c.Binding.ValueParserFor<Guid>(MyParsers.GuidParser); }); public static class MyParsers { public static ParseResult GuidParser(object? input) { Guid result; bool success = Guid.TryParse(input?.ToString(), out result); return new(success, result); } } Returns Type Description System.Boolean Type Parameters Name Description T the type of the class which this parser function will target"
  },
  "api/FastEndpoints.BindingSource.html": {
    "href": "api/FastEndpoints.BindingSource.html",
    "title": "Enum BindingSource | FastEndpoints",
    "keywords": "Enum BindingSource enum for choosing which binding sources the default request binder should use Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax [Flags] public enum BindingSource Fields Name Description FormFields enum for choosing which binding sources the default request binder should use Headers enum for choosing which binding sources the default request binder should use JsonBody enum for choosing which binding sources the default request binder should use Permissions enum for choosing which binding sources the default request binder should use QueryParams enum for choosing which binding sources the default request binder should use RouteValues enum for choosing which binding sources the default request binder should use UserClaims enum for choosing which binding sources the default request binder should use"
  },
  "api/FastEndpoints.ClientGen.Extensions.html": {
    "href": "api/FastEndpoints.ClientGen.Extensions.html",
    "title": "Class Extensions | FastEndpoints",
    "keywords": "Class Extensions Inheritance System.Object Extensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.ClientGen Assembly : FastEndpoints.ClientGen.dll Syntax public static class Extensions Methods ExportSwaggerJsonAndExitAsync(WebApplication, String, String) exports swagger.json files to disk if the application is run with the commandline argument --exportswaggerjson true and exits the program with a zero exit code. HINT: make sure to place the call straight after app.UseFastEndpoints() Declaration public static async Task ExportSwaggerJsonAndExitAsync(this WebApplication app, string documentName, string destinationPath) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication app System.String documentName the name of the swagger document to generate the clients for System.String destinationPath the folder path (without file name) where the client files will be save to Returns Type Description System.Threading.Tasks.Task GenerateClientsAndExitAsync(WebApplication, String, String, Action<CSharpClientGeneratorSettings>, Action<TypeScriptClientGeneratorSettings>) generates c# and/or typescript clients and saves them to disk if the application is run with the commandline argument --generateclients true and exits the program with a zero exit code. HINT: make sure to place the call straight after app.UseFastEndpoints() Declaration public static async Task GenerateClientsAndExitAsync(this WebApplication app, string documentName, string destinationPath, Action<CSharpClientGeneratorSettings> csSettings, Action<TypeScriptClientGeneratorSettings> tsSettings) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication app System.String documentName the name of the swagger document to generate the clients for System.String destinationPath the folder path (without file name) where the client files will be save to System.Action < NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings > csSettings client generator settings for c# System.Action < NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings > tsSettings client generator settings for typescript Returns Type Description System.Threading.Tasks.Task GenerateCSharpClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action<CSharpClientGeneratorSettings>, String, ClientGeneratorOutputType) generates a c# api client and saves it to disk at the specified location. Declaration public static void GenerateCSharpClient(this AspNetCoreOpenApiDocumentGeneratorSettings gen, Action<CSharpClientGeneratorSettings> settings, string destination, ClientGeneratorOutputType outputType = ClientGeneratorOutputType.Full) Parameters Type Name Description NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings gen System.Action < NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings > settings client generator settings System.String destination the output file path including file name NSwag.CodeGeneration.ClientGeneratorOutputType outputType the type of the generated client file GenerateTypeScriptClient(AspNetCoreOpenApiDocumentGeneratorSettings, Action<TypeScriptClientGeneratorSettings>, String, ClientGeneratorOutputType) generates a typescript api client and saves it to disk at the specified location. Declaration public static void GenerateTypeScriptClient(this AspNetCoreOpenApiDocumentGeneratorSettings gen, Action<TypeScriptClientGeneratorSettings> settings, string destination, ClientGeneratorOutputType outputType = ClientGeneratorOutputType.Full) Parameters Type Name Description NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings gen System.Action < NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings > settings client generator settings System.String destination the output file path including file name NSwag.CodeGeneration.ClientGeneratorOutputType outputType the type of the generated client file MapCSharpClientEndpoint(IEndpointRouteBuilder, String, String, Action<CSharpClientGeneratorSettings>) registers an endpoint that provides a download of the c# api client file for a given swagger document. Declaration public static IEndpointRouteBuilder MapCSharpClientEndpoint(this IEndpointRouteBuilder builder, string route, string documentName, Action<CSharpClientGeneratorSettings> settings = null) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.String route the route to register System.String documentName the name of the document to generate the client for System.Action < NSwag.CodeGeneration.CSharp.CSharpClientGeneratorSettings > settings c# client generator settings Returns Type Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder MapTypeScriptClientEndpoint(IEndpointRouteBuilder, String, String, Action<TypeScriptClientGeneratorSettings>) registers an endpoint that provides a download of the typescript api client file for a given swagger document. Declaration public static IEndpointRouteBuilder MapTypeScriptClientEndpoint(this IEndpointRouteBuilder builder, string route, string documentName, Action<TypeScriptClientGeneratorSettings> settings = null) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.String route the route to register System.String documentName the name of the document to generate the client for System.Action < NSwag.CodeGeneration.TypeScript.TypeScriptClientGeneratorSettings > settings typescript client generator settings Returns Type Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"
  },
  "api/FastEndpoints.ClientGen.html": {
    "href": "api/FastEndpoints.ClientGen.html",
    "title": "Namespace FastEndpoints.ClientGen | FastEndpoints",
    "keywords": "Namespace FastEndpoints.ClientGen Classes Extensions Runner"
  },
  "api/FastEndpoints.ClientGen.Runner.html": {
    "href": "api/FastEndpoints.ClientGen.Runner.html",
    "title": "Class Runner | FastEndpoints",
    "keywords": "Class Runner Inheritance System.Object Runner Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.ClientGen Assembly : FastEndpoints.ClientGen.dll Syntax public class Runner"
  },
  "api/FastEndpoints.CommandExtensions.html": {
    "href": "api/FastEndpoints.CommandExtensions.html",
    "title": "Class CommandExtensions | FastEndpoints",
    "keywords": "Class CommandExtensions Inheritance System.Object CommandExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class CommandExtensions Methods ExecuteAsync<TCommand>(TCommand, CancellationToken) executes the command that does not return a result Declaration public static Task ExecuteAsync<TCommand>(this TCommand command, CancellationToken ct = default(CancellationToken)) where TCommand : ICommand Parameters Type Name Description TCommand command the command to execute System.Threading.CancellationToken ct optional cancellation token Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TCommand the type of the command Exceptions Type Condition System.InvalidOperationException thrown when a handler for the command cannot be instantiated ExecuteAsync<TResult>(ICommand<TResult>, CancellationToken) executes the command and returns a result Declaration public static Task<TResult> ExecuteAsync<TResult>(this ICommand<TResult> command, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description ICommand <TResult> command the command to execute System.Threading.CancellationToken ct optional cancellation token Returns Type Description System.Threading.Tasks.Task <TResult> Type Parameters Name Description TResult the type of the returned result Exceptions Type Condition System.InvalidOperationException thrown when a handler for the command cannot be instantiated"
  },
  "api/FastEndpoints.Config.html": {
    "href": "api/FastEndpoints.Config.html",
    "title": "Class Config | FastEndpoints",
    "keywords": "Class Config global configuration settings for FastEndpoints Inheritance System.Object Config Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class Config Properties Binding request binding settings Declaration public BindingOptions Binding { get; } Property Value Type Description BindingOptions Endpoints endpoint dicovery & registration settings Declaration public EndpointOptions Endpoints { get; } Property Value Type Description EndpointOptions Errors error response customization settings Declaration public ErrorOptions Errors { get; } Property Value Type Description ErrorOptions Security security related settings Declaration public SecurityOptions Security { get; } Property Value Type Description SecurityOptions Serializer settings for customizing serialization behavior Declaration public SerializerOptions Serializer { get; } Property Value Type Description SerializerOptions Throttle endpoint throttling/ rate limiting settings Declaration public ThrottleOptions Throttle { get; } Property Value Type Description ThrottleOptions Versioning endpoint versioning settings Declaration public VersioningOptions Versioning { get; } Property Value Type Description VersioningOptions"
  },
  "api/FastEndpoints.DontInjectAttribute.html": {
    "href": "api/FastEndpoints.DontInjectAttribute.html",
    "title": "Class DontInjectAttribute | FastEndpoints",
    "keywords": "Class DontInjectAttribute endpoint properties marked with this attribute will disable property injection for that property Inheritance System.Object System.Attribute DontInjectAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class DontInjectAttribute : Attribute"
  },
  "api/FastEndpoints.EmptyRequest.html": {
    "href": "api/FastEndpoints.EmptyRequest.html",
    "title": "Struct EmptyRequest | FastEndpoints",
    "keywords": "Struct EmptyRequest a request dto that doesn't have any properties Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public struct EmptyRequest"
  },
  "api/FastEndpoints.EmptyResponse.html": {
    "href": "api/FastEndpoints.EmptyResponse.html",
    "title": "Struct EmptyResponse | FastEndpoints",
    "keywords": "Struct EmptyResponse a response dto that doesn't have any properties Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public struct EmptyResponse"
  },
  "api/FastEndpoints.Endpoint-1.html": {
    "href": "api/FastEndpoints.Endpoint-1.html",
    "title": "Class Endpoint<TRequest> | FastEndpoints",
    "keywords": "Class Endpoint<TRequest> use this base class for defining endpoints that only use a request dto and don't use a response dto. Inheritance System.Object BaseEndpoint Endpoint <TRequest, System.Object > Endpoint<TRequest> Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<TRequest, Object>.HandleAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.ExecuteAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.TryResolve<TService>() Endpoint<TRequest, Object>.TryResolve(Type) Endpoint<TRequest, Object>.Resolve<TService>() Endpoint<TRequest, Object>.Resolve(Type) Endpoint<TRequest, Object>.CreateScope() Endpoint<TRequest, Object>.Route<T>(String, Boolean) Endpoint<TRequest, Object>.Query<T>(String, Boolean) Endpoint<TRequest, Object>.FormFileSectionsAsync(CancellationToken) Endpoint<TRequest, Object>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<TRequest, Object>.CreateTokenWith<TService>(String, Action<UserPrivileges>) Endpoint<TRequest, Object>.OnBeforeValidate(TRequest) Endpoint<TRequest, Object>.OnBeforeValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.OnAfterValidate(TRequest) Endpoint<TRequest, Object>.OnAfterValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.OnBeforeHandle(TRequest) Endpoint<TRequest, Object>.OnBeforeHandleAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.OnAfterHandle(TRequest, Object) Endpoint<TRequest, Object>.OnAfterHandleAsync(TRequest, Object, CancellationToken) Endpoint<TRequest, Object>.OnValidationFailed() Endpoint<TRequest, Object>.OnValidationFailedAsync(CancellationToken) Endpoint<TRequest, Object>.ValidationFailed Endpoint<TRequest, Object>.User Endpoint<TRequest, Object>.Response Endpoint<TRequest, Object>.Config Endpoint<TRequest, Object>.Env Endpoint<TRequest, Object>.Logger Endpoint<TRequest, Object>.BaseURL Endpoint<TRequest, Object>.HttpMethod Endpoint<TRequest, Object>.Form Endpoint<TRequest, Object>.Files Endpoint<TRequest, Object>.ResponseStarted Endpoint<TRequest, Object>.SendAsync(Object, Int32, CancellationToken) Endpoint<TRequest, Object>.SendInterceptedAsync(Object, Int32, CancellationToken) Endpoint<TRequest, Object>.SendCreatedAtAsync<TEndpoint>(Object, Object, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendCreatedAtAsync(String, Object, Object, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendStringAsync(String, Int32, String, CancellationToken) Endpoint<TRequest, Object>.SendOkAsync(Object, CancellationToken) Endpoint<TRequest, Object>.SendOkAsync(CancellationToken) Endpoint<TRequest, Object>.SendErrorsAsync(Int32, CancellationToken) Endpoint<TRequest, Object>.SendNoContentAsync(CancellationToken) Endpoint<TRequest, Object>.SendNotFoundAsync(CancellationToken) Endpoint<TRequest, Object>.SendUnauthorizedAsync(CancellationToken) Endpoint<TRequest, Object>.SendForbiddenAsync(CancellationToken) Endpoint<TRequest, Object>.SendRedirectAsync(String, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken) Endpoint<TRequest, Object>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken) Endpoint<TRequest, Object>.SendEmptyJsonObject(CancellationToken) Endpoint<TRequest, Object>.AllowAnonymous(Http[]) Endpoint<TRequest, Object>.AllowAnonymous(String[]) Endpoint<TRequest, Object>.AllowFileUploads(Boolean) Endpoint<TRequest, Object>.AllowFormData() Endpoint<TRequest, Object>.AuthSchemes(String[]) Endpoint<TRequest, Object>.Claims(String[]) Endpoint<TRequest, Object>.ClaimsAll(String[]) Endpoint<TRequest, Object>.Delete(String[]) Endpoint<TRequest, Object>.Delete(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.Description(Action<RouteHandlerBuilder>, Boolean) Endpoint<TRequest, Object>.DontAutoTag() Endpoint<TRequest, Object>.DontCatchExceptions() Endpoint<TRequest, Object>.DontThrowIfValidationFails() Endpoint<TRequest, Object>.Get(String[]) Endpoint<TRequest, Object>.Get(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.Group<TEndpointGroup>() Endpoint<TRequest, Object>.Head(String[]) Endpoint<TRequest, Object>.Head(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.Options(Action<RouteHandlerBuilder>) Endpoint<TRequest, Object>.Patch(String[]) Endpoint<TRequest, Object>.Patch(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.Permissions(String[]) Endpoint<TRequest, Object>.PermissionsAll(String[]) Endpoint<TRequest, Object>.Policies(String[]) Endpoint<TRequest, Object>.Post(String[]) Endpoint<TRequest, Object>.Post(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.PostProcessors(IPostProcessor<TRequest, Object>[]) Endpoint<TRequest, Object>.PreProcessors(IPreProcessor<TRequest>[]) Endpoint<TRequest, Object>.Put(String[]) Endpoint<TRequest, Object>.Put(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.RequestBinder(IRequestBinder<TRequest>) Endpoint<TRequest, Object>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) Endpoint<TRequest, Object>.ResponseInterceptor(IResponseInterceptor) Endpoint<TRequest, Object>.Roles(String[]) Endpoint<TRequest, Object>.RoutePrefixOverride(String) Endpoint<TRequest, Object>.Routes(String[]) Endpoint<TRequest, Object>.SerializerContext<TContext>(TContext) Endpoint<TRequest, Object>.Summary(Action<EndpointSummary>) Endpoint<TRequest, Object>.Summary(Action<EndpointSummary<TRequest>>) Endpoint<TRequest, Object>.Summary(EndpointSummary) Endpoint<TRequest, Object>.Tags(String[]) Endpoint<TRequest, Object>.Throttle(Int32, Double, String) Endpoint<TRequest, Object>.Validator<TValidator>() Endpoint<TRequest, Object>.Verbs(Http[]) Endpoint<TRequest, Object>.Verbs(String[]) Endpoint<TRequest, Object>.Version(Int32, Nullable<Int32>) Endpoint<TRequest, Object>.AddError(String, String, Severity) Endpoint<TRequest, Object>.AddError(Expression<Func<TRequest, Object>>, String, String, Severity) Endpoint<TRequest, Object>.ThrowIfAnyErrors() Endpoint<TRequest, Object>.ThrowError(String) Endpoint<TRequest, Object>.ThrowError(Expression<Func<TRequest, Object>>, String) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures BaseEndpoint.Configure() BaseEndpoint.Verbs(String[]) BaseEndpoint.Group<TEndpointGroup>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class Endpoint<TRequest> : Endpoint<TRequest, object>, IEndpoint, IEventBus, IServiceResolverBase where TRequest : new() Type Parameters Name Description TRequest the type of the request dto Implements IEndpoint IEventBus IServiceResolverBase"
  },
  "api/FastEndpoints.Endpoint-2.html": {
    "href": "api/FastEndpoints.Endpoint-2.html",
    "title": "Class Endpoint<TRequest, TResponse> | FastEndpoints",
    "keywords": "Class Endpoint<TRequest, TResponse> use this base class for defining endpoints that use both request and response dtos. Inheritance System.Object BaseEndpoint Endpoint<TRequest, TResponse> Endpoint<TRequest> Endpoint<TRequest, TResponse, TMapper> EndpointWithMapper<TRequest, TMapper> EndpointWithMapping<TRequest, TResponse, TEntity> EndpointWithoutRequest EndpointWithoutRequest<TResponse> RefreshTokenService<TRequest, TResponse> Implements IEndpoint IEventBus IServiceResolverBase Inherited Members BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures BaseEndpoint.Configure() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class Endpoint<TRequest, TResponse> : BaseEndpoint, IEndpoint, IEventBus, IServiceResolverBase where TRequest : new() Type Parameters Name Description TRequest the type of the request dto TResponse the type of the response dto Properties BaseURL the base url of the current request Declaration public string BaseURL { get; } Property Value Type Description System.String Config gives access to the configuration. if you need to access this property from within the endpoint Configure() method, make sure to pass in the config to .AddFastEndpoints(config: builder.Configuration) Declaration public IConfiguration Config { get; } Property Value Type Description Microsoft.Extensions.Configuration.IConfiguration Env gives access to the hosting environment Declaration public IWebHostEnvironment Env { get; } Property Value Type Description Microsoft.AspNetCore.Hosting.IWebHostEnvironment Files the files sent with the request. only populated when content-type is 'multipart/form-data' Declaration public IFormFileCollection Files { get; } Property Value Type Description Microsoft.AspNetCore.Http.IFormFileCollection Form the form sent with the request. only populated if content-type is 'application/x-www-form-urlencoded' or 'multipart/form-data' Declaration public IFormCollection Form { get; } Property Value Type Description Microsoft.AspNetCore.Http.IFormCollection HttpMethod the http method of the current request Declaration public Http HttpMethod { get; } Property Value Type Description Http Logger the logger for the current endpoint type Declaration public ILogger Logger { get; } Property Value Type Description Microsoft.Extensions.Logging.ILogger Response the response that is sent to the client. Declaration public TResponse Response { get; set; } Property Value Type Description TResponse ResponseStarted get or set whether the response has started. you'd only use this if you're writing to the response stream by yourself. Declaration public bool ResponseStarted { get; set; } Property Value Type Description System.Boolean User the current user principal Declaration public ClaimsPrincipal User { get; } Property Value Type Description System.Security.Claims.ClaimsPrincipal ValidationFailed indicates if there are any validation failures for the current request Declaration public bool ValidationFailed { get; } Property Value Type Description System.Boolean Methods AddError(Expression<Func<TRequest, Object>>, String, String, Severity) adds an error message for the specified property of the request dto Declaration protected void AddError(Expression<Func<TRequest, object>> property, string errorMessage, string errorCode = null, Severity severity = Severity.Error) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TRequest, System.Object >> property the property to add the error message for System.String errorMessage the error message System.String errorCode the error code associated with the error FluentValidation.Severity severity the severity of the error AddError(String, String, Severity) adds a \"GeneralError\" to the current list of validation failures Declaration protected void AddError(string message, string errorCode = null, Severity severity = Severity.Error) Parameters Type Name Description System.String message the error message System.String errorCode the error code associated with the error FluentValidation.Severity severity the severity of the error AllowAnonymous(Http[]) allow unauthenticated requests to this endpoint. optionally specify a set of verbs to allow unauthenticated access with. i.e. if the endpoint is listening to POST, PUT & PATCH and you specify AllowAnonymous(Http.POST), then only PUT & PATCH will require authentication. Declaration protected void AllowAnonymous(params Http[] verbs) Parameters Type Name Description Http [] verbs AllowAnonymous(String[]) allow unauthenticated requests to this endpoint for a specified set of http verbs. i.e. if the endpoint is listening to POST, PUT & PATCH and you specify AllowAnonymous(Http.POST), then only PUT & PATCH will require authentication. Declaration protected void AllowAnonymous(string[] verbs) Parameters Type Name Description System.String [] verbs AllowFileUploads(Boolean) enable file uploads with multipart/form-data content type Declaration protected void AllowFileUploads(bool dontAutoBindFormData = false) Parameters Type Name Description System.Boolean dontAutoBindFormData set 'true' to disable auto binding of form data which enables uploading and reading of large files without buffering to memory/disk. you can access the multipart sections for reading via the FormFileSectionsAsync() method. AllowFormData() enable multipart/form-data submissions Declaration protected void AllowFormData() AuthSchemes(String[]) specify which authentication schemes to use for authenticating requests to this endpoint Declaration protected void AuthSchemes(params string[] authSchemeNames) Parameters Type Name Description System.String [] authSchemeNames the authentication scheme names Claims(String[]) allows access if the claims principal has ANY of the given claim types Declaration protected void Claims(params string[] claimTypes) Parameters Type Name Description System.String [] claimTypes the claim types ClaimsAll(String[]) allows access if the claims principal has ALL of the given claim types Declaration protected void ClaimsAll(params string[] claimTypes) Parameters Type Name Description System.String [] claimTypes the claim types CreateScope() use this base class for defining endpoints that use both request and response dtos. Declaration public IServiceScope CreateScope() Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceScope CreateTokenWith<TService>(String, Action<UserPrivileges>) create the access/refresh token pair response with a given refresh-token service. Declaration protected Task<TResponse> CreateTokenWith<TService>(string userId, Action<UserPrivileges> userPrivileges) where TService : IRefreshTokenService<TResponse> Parameters Type Name Description System.String userId the id of the user for which the tokens will be generated for System.Action < UserPrivileges > userPrivileges the user priviledges to be embeded in the jwt such as roles/claims/permissions Returns Type Description System.Threading.Tasks.Task <TResponse> Type Parameters Name Description TService Delete(String, Expression<Func<TRequest, Object>>) specify a DELETE route pattern using a replacement expression. Declaration protected void Delete(string routePattern, Expression<Func<TRequest, object>> members) Parameters Type Name Description System.String routePattern the words prefixed with @ will be replaced by property names of the new expression in the order they are specified. the replacement words do not have to match the request dto property names. /invoice/{@id}/soft-delete System.Linq.Expressions.Expression < System.Func <TRequest, System.Object >> members r => new { r.InvoiceID } Delete(String[]) specify to listen for DELETE requests on one or more routes. Declaration protected void Delete(params string[] routePatterns) Parameters Type Name Description System.String [] routePatterns Description(Action<RouteHandlerBuilder>, Boolean) describe openapi metadata for this endpoint. optionaly specify whether or not you want to clear the default Accepts/Produces metadata. EXAMPLE: b => b.Accepts<Request>(\"text/plain\") Declaration protected void Description(Action<RouteHandlerBuilder> builder, bool clearDefaults = false) Parameters Type Name Description System.Action < Microsoft.AspNetCore.Builder.RouteHandlerBuilder > builder the route handler builder for this endpoint System.Boolean clearDefaults set to true if the defaults should be cleared DontAutoTag() if swagger auto tagging based on path segment is enabled, calling this method will prevent a tag from being added to this endpoint. Declaration protected void DontAutoTag() DontCatchExceptions() use this only if you have your own exception catching middleware. if this method is called in config, an automatic error response will not be sent to the client by the library. all exceptions will be thrown and it would be the responsibility of your exeception catching middleware to handle them. Declaration protected void DontCatchExceptions() DontThrowIfValidationFails() disable auto validation failure responses (400 bad request with error details) for this endpoint. HINT: this only applies to request dto validation. Declaration protected void DontThrowIfValidationFails() ExecuteAsync(TRequest, CancellationToken) the handler method for the endpoint that returns the response dto. this method is called for each request received. Declaration public virtual Task<TResponse> ExecuteAsync(TRequest req, CancellationToken ct) Parameters Type Name Description TRequest req the request dto System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task <TResponse> FormFileSectionsAsync(CancellationToken) gets a stream of nullable FileMultipartSections from the incoming multipart/form-data without buffering the whole file to memory/disk as done with IFormFile Declaration public async IAsyncEnumerable<FileMultipartSection> FormFileSectionsAsync(CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellation optional cancellation token Returns Type Description System.Collections.Generic.IAsyncEnumerable < Microsoft.AspNetCore.WebUtilities.FileMultipartSection > Get(String, Expression<Func<TRequest, Object>>) specify a GET route pattern using a replacement expression. Declaration protected void Get(string routePattern, Expression<Func<TRequest, object>> members) Parameters Type Name Description System.String routePattern the words prefixed with @ will be replaced by property names of the new expression in the order they are specified. the replacement words do not have to match the request dto property names. /invoice/{@id}/print/{@pageNum} System.Linq.Expressions.Expression < System.Func <TRequest, System.Object >> members r => new { r.InvoiceID, r.PageNumber } Get(String[]) specify to listen for GET requests on one or more routes. Declaration protected void Get(params string[] routePatterns) Parameters Type Name Description System.String [] routePatterns Group<TEndpointGroup>() if this endpoint is part of an endpoint group, specify the type of the Group concrete class where the common configuration for the group is specified. WARNING: this method can only be called after the endpoint route has been specified. Declaration protected sealed override void Group<TEndpointGroup>() where TEndpointGroup : Group, new() Type Parameters Name Description TEndpointGroup the type of your Group concrete class Overrides BaseEndpoint.Group<TEndpointGroup>() Exceptions Type Condition System.InvalidOperationException thrown if endpoint route hasn't yet been specified HandleAsync(TRequest, CancellationToken) the handler method for the endpoint. this method is called for each request received. Declaration public virtual Task HandleAsync(TRequest req, CancellationToken ct) Parameters Type Name Description TRequest req the request dto System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task Head(String, Expression<Func<TRequest, Object>>) specify a HEAD route pattern using a replacement expression. Declaration protected void Head(string routePattern, Expression<Func<TRequest, object>> members) Parameters Type Name Description System.String routePattern the words prefixed with @ will be replaced by property names of the new expression in the order they are specified. the replacement words do not have to match the request dto property names. /invoice/{@id}/print/{@pageNum} System.Linq.Expressions.Expression < System.Func <TRequest, System.Object >> members r => new { r.InvoiceID, r.PageNumber } Head(String[]) specify to listen for HEAD requests on one or more routes. Declaration protected void Head(params string[] routePatterns) Parameters Type Name Description System.String [] routePatterns OnAfterHandle(TRequest, TResponse) override this method if you'd like to do something after the handler is executed. Declaration public virtual void OnAfterHandle(TRequest req, TResponse res) Parameters Type Name Description TRequest req the request dto TResponse res the response dto that was sent to the client OnAfterHandleAsync(TRequest, TResponse, CancellationToken) override this method if you'd like to do something after the handler is executed. Declaration public virtual Task OnAfterHandleAsync(TRequest req, TResponse res, CancellationToken ct) Parameters Type Name Description TRequest req the request dto TResponse res the response dto that was sent to the client System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task OnAfterValidate(TRequest) override this method if you'd like to do something to the request dto after it gets validated. Declaration public virtual void OnAfterValidate(TRequest req) Parameters Type Name Description TRequest req the request dto OnAfterValidateAsync(TRequest, CancellationToken) override this method if you'd like to do something to the request dto after it gets validated. Declaration public virtual Task OnAfterValidateAsync(TRequest req, CancellationToken ct) Parameters Type Name Description TRequest req the request dto System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task OnBeforeHandle(TRequest) override this method if you'd like to do something to the request dto before the handler is executed. Declaration public virtual void OnBeforeHandle(TRequest req) Parameters Type Name Description TRequest req the request dto OnBeforeHandleAsync(TRequest, CancellationToken) override this method if you'd like to do something to the request dto before the handler is executed. Declaration public virtual Task OnBeforeHandleAsync(TRequest req, CancellationToken ct) Parameters Type Name Description TRequest req the request dto System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task OnBeforeValidate(TRequest) override this method if you'd like to do something to the request dto before it gets validated. Declaration public virtual void OnBeforeValidate(TRequest req) Parameters Type Name Description TRequest req the request dto OnBeforeValidateAsync(TRequest, CancellationToken) override this method if you'd like to do something to the request dto before it gets validated. Declaration public virtual Task OnBeforeValidateAsync(TRequest req, CancellationToken ct) Parameters Type Name Description TRequest req the request dto System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task OnValidationFailed() override this method if you'd like to do something when a validation failure occurs. Declaration public virtual void OnValidationFailed() OnValidationFailedAsync(CancellationToken) override this method if you'd like to do something when a validation failure occurs. Declaration public virtual Task OnValidationFailedAsync(CancellationToken ct) Parameters Type Name Description System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task Options(Action<RouteHandlerBuilder>) set endpoint configurations options using an endpoint builder action /// Declaration protected void Options(Action<RouteHandlerBuilder> builder) Parameters Type Name Description System.Action < Microsoft.AspNetCore.Builder.RouteHandlerBuilder > builder the builder for this endpoint Patch(String, Expression<Func<TRequest, Object>>) specify a PATCH route pattern using a replacement expression. Declaration protected void Patch(string routePattern, Expression<Func<TRequest, object>> members) Parameters Type Name Description System.String routePattern the words prefixed with @ will be replaced by property names of the new expression in the order they are specified. the replacement words do not have to match the request dto property names. /invoice/{@id} System.Linq.Expressions.Expression < System.Func <TRequest, System.Object >> members r => new { r.InvoiceID } Patch(String[]) specify to listen for PATCH requests on one or more routes. Declaration protected void Patch(params string[] routePatterns) Parameters Type Name Description System.String [] routePatterns Permissions(String[]) allows access if the claims principal has ANY of the given permissions Declaration protected void Permissions(params string[] permissions) Parameters Type Name Description System.String [] permissions the permissions PermissionsAll(String[]) allows access if the claims principal has ALL of the given permissions Declaration protected void PermissionsAll(params string[] permissions) Parameters Type Name Description System.String [] permissions the permissions Policies(String[]) specify one or more authorization policy names you have added to the middleware pipeline during app startup/ service configuration that should be applied to this endpoint. Declaration protected void Policies(params string[] policyNames) Parameters Type Name Description System.String [] policyNames one or more policy names (must have been added to the pipeline on startup) Post(String, Expression<Func<TRequest, Object>>) specify a POST route pattern using a replacement expression. Declaration protected void Post(string routePattern, Expression<Func<TRequest, object>> members) Parameters Type Name Description System.String routePattern the words prefixed with @ will be replaced by property names of the new expression in the order they are specified. the replacement words do not have to match the request dto property names. /invoice/{@id}/page/{@pageNum} System.Linq.Expressions.Expression < System.Func <TRequest, System.Object >> members r => new { r.InvoiceID, r.PageNumber } Post(String[]) specify to listen for POST requests on one or more routes. Declaration protected void Post(params string[] routePatterns) Parameters Type Name Description System.String [] routePatterns PostProcessors(IPostProcessor<TRequest, TResponse>[]) configure a collection of post-processors to be executed after the main handler function is done. processors are executed in the order they are defined here. Declaration protected void PostProcessors(params IPostProcessor<TRequest, TResponse>[] postProcessors) Parameters Type Name Description IPostProcessor <TRequest, TResponse>[] postProcessors the post processors to be executed PreProcessors(IPreProcessor<TRequest>[]) configure a collection of pre-processors to be executed before the main handler function is called. processors are executed in the order they are defined here. Declaration protected void PreProcessors(params IPreProcessor<TRequest>[] preProcessors) Parameters Type Name Description IPreProcessor <TRequest>[] preProcessors the pre processors to be executed PublishAsync<TEvent>(TEvent, Mode, CancellationToken) use this base class for defining endpoints that use both request and response dtos. Declaration public Task PublishAsync<TEvent>(TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description TEvent eventModel Mode waitMode System.Threading.CancellationToken cancellation Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TEvent Put(String, Expression<Func<TRequest, Object>>) specify a PUT route pattern using a replacement expression. Declaration protected void Put(string routePattern, Expression<Func<TRequest, object>> members) Parameters Type Name Description System.String routePattern the words prefixed with @ will be replaced by property names of the new expression in the order they are specified. the replacement words do not have to match the request dto property names. /invoice/{@id}/page/{@pageNum} System.Linq.Expressions.Expression < System.Func <TRequest, System.Object >> members r => new { r.InvoiceID, r.PageNumber } Put(String[]) specify to listen for PUT requests on one or more routes. Declaration protected void Put(params string[] routePatterns) Parameters Type Name Description System.String [] routePatterns Query<T>(String, Boolean) get the value of a given query parameter by specifying the resulting type and query parameter name. NOTE: an automatic validation error is sent to the client when value retrieval is not successful. Declaration protected T Query<T>(string paramName, bool isRequired = true) Parameters Type Name Description System.String paramName query parameter name System.Boolean isRequired set to false for disabling the automatic validation error Returns Type Description T the value if retrieval is successful or null if isRequired is set to false Type Parameters Name Description T type of the result RequestBinder(IRequestBinder<TRequest>) configure custom model binding for this endpoint by supplying an IRequestBinder implementation. by calling this method, you're completely bypassing the built-in model binding and taking things into your own hands for this endpoint. Declaration protected void RequestBinder(IRequestBinder<TRequest> binder) Parameters Type Name Description IRequestBinder <TRequest> binder custom model binder implementation to use for this endpoint Resolve(Type) use this base class for defining endpoints that use both request and response dtos. Declaration public object Resolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object Resolve<TService>() use this base class for defining endpoints that use both request and response dtos. Declaration public TService Resolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) specify response caching settings for this endpoint Declaration protected void ResponseCache(int durationSeconds, ResponseCacheLocation location = ResponseCacheLocation.Any, bool noStore = false, string varyByHeader = null, string[] varyByQueryKeys = null) Parameters Type Name Description System.Int32 durationSeconds the duration in seconds for which the response is cached Microsoft.AspNetCore.Mvc.ResponseCacheLocation location the location where the data from a particular URL must be cached System.Boolean noStore specify whether the data should be stored or not System.String varyByHeader the value for the Vary response header System.String [] varyByQueryKeys the query keys to vary by ResponseInterceptor(IResponseInterceptor) configure a response interceptor to be called before the SendAsync response is sent to the browser. this will override any globally configured interceptor. if you return a response to the browser, then the rest of the SendAsync method will be skipped. Declaration protected void ResponseInterceptor(IResponseInterceptor responseInterceptor) Parameters Type Name Description IResponseInterceptor responseInterceptor the response interceptor to be executed Roles(String[]) allows access if the claims principal has ANY of the given roles Declaration protected void Roles(params string[] rolesNames) Parameters Type Name Description System.String [] rolesNames one or more roles that has access Route<T>(String, Boolean) get the value of a given route parameter by specifying the resulting type and param name. NOTE: an automatic validation error is sent to the client when value retrieval is not successful. Declaration protected T Route<T>(string paramName, bool isRequired = true) Parameters Type Name Description System.String paramName route parameter name System.Boolean isRequired set to false for disabling the automatic validation error Returns Type Description T the value if retrieval is successful or null if isRequired is set to false Type Parameters Name Description T type of the result RoutePrefixOverride(String) specify an override route prefix for this endpoint if a global route prefix is enabled. this is ignored if a global route prefix is not configured. global prefix can be ignored by setting string.Empty Declaration protected void RoutePrefixOverride(string routePrefix) Parameters Type Name Description System.String routePrefix route prefix value Routes(String[]) specify one or more route patterns this endpoint should be listening for Declaration protected void Routes(params string[] patterns) Parameters Type Name Description System.String [] patterns SendAsync(TResponse, Int32, CancellationToken) send the supplied response dto serialized as json to the client. Declaration protected Task SendAsync(TResponse response, int statusCode = 200, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description TResponse response the object to serialize to json System.Int32 statusCode optional custom http status code System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) send a byte array to the client Declaration protected Task SendBytesAsync(byte[] bytes, string fileName = null, string contentType = \"application/octet-stream\", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Byte [] bytes the bytes to send System.String fileName System.String contentType optional content type to set on the http response System.Nullable < System.DateTimeOffset > lastModified optional last modified date-time-offset for the data stream System.Boolean enableRangeProcessing optional switch for enabling range processing System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken) send a 201 created response with a location header containing where the resource can be retrieved from. WARNING: this method is only supported on single verb/route endpoints. it will not produce a `Location` header if used in a multi verb or multi route endpoint. Declaration protected Task SendCreatedAtAsync(string endpointName, object routeValues, TResponse responseBody, bool generateAbsoluteUrl = false, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.String endpointName the name of the endpoint to use for link generation (openapi route id) System.Object routeValues a route values object with key/value pairs of route information TResponse responseBody the content to be serialized in the response body System.Boolean generateAbsoluteUrl set to true for generating a absolute url instead of relative url for the location header System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken) send a 201 created response with a location header containing where the resource can be retrieved from. HINT: if pointing to an endpoint with multiple verbs, make sure to specify the 'verb' argument and if pointing to a multi route endpoint, specify the 'routeNumber' argument. WARNING: this overload will not add a location header if you've set a custom endpoint name using .WithName() method. use the other overload that accepts a string endpoint name instead. Declaration protected Task SendCreatedAtAsync<TEndpoint>(object routeValues, TResponse responseBody, Http? verb = null, int? routeNumber = null, bool generateAbsoluteUrl = false, CancellationToken cancellation = default(CancellationToken)) where TEndpoint : IEndpoint Parameters Type Name Description System.Object routeValues a route values object with key/value pairs of route information TResponse responseBody the content to be serialized in the response body System.Nullable < Http > verb only useful when pointing to a multi verb endpoint System.Nullable < System.Int32 > routeNumber only useful when pointing to a multi route endpoint System.Boolean generateAbsoluteUrl set to true for generating a absolute url instead of relative url for the location header System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TEndpoint the type of the endpoint where the resource can be retrieved from SendEmptyJsonObject(CancellationToken) send an empty json object in the body Declaration protected Task SendEmptyJsonObject(CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendErrorsAsync(Int32, CancellationToken) send a 400 bad request with error details of the current validation failures Declaration protected Task SendErrorsAsync(int statusCode = 400, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Int32 statusCode the status code for the error response System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken) start a \"server-sent-events\" data stream for the client asynchronously without blocking any threads Declaration protected Task SendEventStreamAsync<T>(string eventName, IAsyncEnumerable<T> eventStream, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.String eventName the name of the event stream System.Collections.Generic.IAsyncEnumerable <T> eventStream an IAsyncEnumerable that is the source of the data System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description T the type of the objects being sent in the event stream SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) send a file to the client Declaration protected Task SendFileAsync(FileInfo fileInfo, string contentType = \"application/octet-stream\", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.IO.FileInfo fileInfo System.String contentType optional content type to set on the http response System.Nullable < System.DateTimeOffset > lastModified optional last modified date-time-offset for the data stream System.Boolean enableRangeProcessing optional switch for enabling range processing System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendForbiddenAsync(CancellationToken) send a 403 unauthorized response Declaration protected Task SendForbiddenAsync(CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken) send headers in response to a HEAD request Declaration protected Task SendHeadersAsync(Action<IHeaderDictionary> headers, int statusCode = 200, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Action < Microsoft.AspNetCore.Http.IHeaderDictionary > headers an action to be performed on the headers dictionary of the response System.Int32 statusCode optional custom http status code System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendInterceptedAsync(Object, Int32, CancellationToken) sends an object serialized as json to the client. if a response interceptor has been defined, then that will be executed before the normal response is sent. Declaration protected async Task SendInterceptedAsync(object response, int statusCode = 200, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Object response the object to serialize to json System.Int32 statusCode optional custom http status code System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task Exceptions Type Condition System.InvalidOperationException will throw if an interceptor has not been defined against the endpoint or globally SendNoContentAsync(CancellationToken) send a 204 no content response Declaration protected Task SendNoContentAsync(CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendNotFoundAsync(CancellationToken) send a 404 not found response Declaration protected Task SendNotFoundAsync(CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendOkAsync(TResponse, CancellationToken) send an http 200 ok response with the supplied response dto serialized as json to the client. Declaration protected Task SendOkAsync(TResponse response, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description TResponse response the object to serialize to json System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendOkAsync(CancellationToken) send an http 200 ok response without any body Declaration protected Task SendOkAsync(CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendRedirectAsync(String, Boolean, CancellationToken) send a 301/302 redirect response Declaration protected Task SendRedirectAsync(string location, bool isPermanant = false, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.String location the location to redirect to System.Boolean isPermanant set to true for a 302 redirect. 301 is the default. System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) send the contents of a stream to the client Declaration protected Task SendStreamAsync(Stream stream, string fileName = null, long? fileLengthBytes = null, string contentType = \"application/octet-stream\", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.IO.Stream stream the stream to read the data from System.String fileName and optional file name to set in the content-disposition header System.Nullable < System.Int64 > fileLengthBytes optional total size of the file/stream System.String contentType optional content type to set on the http response System.Nullable < System.DateTimeOffset > lastModified optional last modified date-time-offset for the data stream System.Boolean enableRangeProcessing optional switch for enabling range processing System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendStringAsync(String, Int32, String, CancellationToken) send the supplied string content to the client. Declaration protected Task SendStringAsync(string content, int statusCode = 200, string contentType = \"text/plain\", CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.String content the string to write to the response body System.Int32 statusCode optional custom http status code System.String contentType optional content type header value System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SendUnauthorizedAsync(CancellationToken) send a 401 unauthorized response Declaration protected Task SendUnauthorizedAsync(CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used Returns Type Description System.Threading.Tasks.Task SerializerContext<TContext>(TContext) specify the json serializer context if code generation for request/response dtos is being used Declaration protected void SerializerContext<TContext>(TContext serializerContext) where TContext : JsonSerializerContext Parameters Type Name Description TContext serializerContext Type Parameters Name Description TContext the type of the json serializer context for this endpoint Summary(EndpointSummary) provide a summary/description for this endpoint to be used in swagger/ openapi Declaration protected void Summary(EndpointSummary endpointSummary) Parameters Type Name Description EndpointSummary endpointSummary an endpoint summary instance Summary(Action<EndpointSummary<TRequest>>) provide a summary/description for this endpoint to be used in swagger/ openapi Declaration protected void Summary(Action<EndpointSummary<TRequest>> endpointSummary) Parameters Type Name Description System.Action < EndpointSummary <TRequest>> endpointSummary an action that sets values of an endpoint summary object Summary(Action<EndpointSummary>) provide a summary/description for this endpoint to be used in swagger/ openapi Declaration protected void Summary(Action<EndpointSummary> endpointSummary) Parameters Type Name Description System.Action < EndpointSummary > endpointSummary an action that sets values of an endpoint summary object Tags(String[]) specify one or more string tags for this endpoint so they can be used in the exclusion filter during registration. HINT: these tags have nothing to do with swagger tags! Declaration protected void Tags(params string[] endpointTags) Parameters Type Name Description System.String [] endpointTags the tag values to associate with this endpoint Throttle(Int32, Double, String) rate limit requests to this endpoint based on a request http header sent by the client. Declaration protected void Throttle(int hitLimit, double durationSeconds, string headerName = null) Parameters Type Name Description System.Int32 hitLimit how many requests are allowed within the given duration System.Double durationSeconds the frequency in seconds where the accrued hit count should be reset System.String headerName the name of the request header used to uniquely identify clients. header name can also be configured globally using app.UseFastEndpoints(c=> c.ThrottleOptions...) not specifying a header name will first look for 'X-Forwarded-For' header and if not present, will use HttpContext.Connection.RemoteIpAddress . ThrowError(Expression<Func<TRequest, Object>>, String) adds an error message for the specified property of the request dto and sends back a 400 bad request with error details immediately interrupting handler execution flow. no execution will continue past this call. Declaration protected void ThrowError(Expression<Func<TRequest, object>> property, string errorMessage) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TRequest, System.Object >> property the property to add the error message for System.String errorMessage the error message ThrowError(String) add a \"GeneralError\" to the validation failure list and send back a 400 bad request with error details immediately interrupting handler execution flow. if there are any vallidation failures, no execution will continue past this call. Declaration protected void ThrowError(string message) Parameters Type Name Description System.String message the error message ThrowIfAnyErrors() interrupt the flow of handler execution and send a 400 bad request with error details if there are any validation failures in the current request. if there are no validation failures, execution will continue past this call. Declaration protected void ThrowIfAnyErrors() TryResolve(Type) use this base class for defining endpoints that use both request and response dtos. Declaration public object TryResolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object TryResolve<TService>() use this base class for defining endpoints that use both request and response dtos. Declaration public TService TryResolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService Validator<TValidator>() specify the validator that should be used for this endpoint. TIP: you only need to call this method if you have more than one validator for the same request dto in the solution or if you just want to be explicit about what validator is used by the endpoint. Declaration protected void Validator<TValidator>() where TValidator : IValidator Type Parameters Name Description TValidator the type of the validator Verbs(Http[]) specify one or more http method verbs this endpoint should be accepting requests for Declaration protected void Verbs(params Http[] methods) Parameters Type Name Description Http [] methods Verbs(String[]) specify one or more http method verbs this endpoint should be accepting requests for Declaration public sealed override void Verbs(params string[] methods) Parameters Type Name Description System.String [] methods Overrides BaseEndpoint.Verbs(String[]) Version(Int32, Nullable<Int32>) specify the version of the endpoint if versioning is enabled Declaration protected void Version(int version, int? deprecateAt = null) Parameters Type Name Description System.Int32 version the version of this endpoint System.Nullable < System.Int32 > deprecateAt the version group number starting at which this endpoint should not be included in swagger document Implements IEndpoint IEventBus IServiceResolverBase"
  },
  "api/FastEndpoints.Endpoint-3.html": {
    "href": "api/FastEndpoints.Endpoint-3.html",
    "title": "Class Endpoint<TRequest, TResponse, TMapper> | FastEndpoints",
    "keywords": "Class Endpoint<TRequest, TResponse, TMapper> use this base class for defining endpoints that use both request and response dtos as well as require mapping to and from a domain entity using a seperate entity mapper. Inheritance System.Object BaseEndpoint Endpoint <TRequest, TResponse> Endpoint<TRequest, TResponse, TMapper> Implements IEndpoint IEventBus IServiceResolverBase IHasMapper <TMapper> IHasMapper Inherited Members Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.ExecuteAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.TryResolve<TService>() Endpoint<TRequest, TResponse>.TryResolve(Type) Endpoint<TRequest, TResponse>.Resolve<TService>() Endpoint<TRequest, TResponse>.Resolve(Type) Endpoint<TRequest, TResponse>.CreateScope() Endpoint<TRequest, TResponse>.Route<T>(String, Boolean) Endpoint<TRequest, TResponse>.Query<T>(String, Boolean) Endpoint<TRequest, TResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<TRequest, TResponse>.CreateTokenWith<TService>(String, Action<UserPrivileges>) Endpoint<TRequest, TResponse>.OnBeforeValidate(TRequest) Endpoint<TRequest, TResponse>.OnBeforeValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.OnAfterValidate(TRequest) Endpoint<TRequest, TResponse>.OnAfterValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.OnBeforeHandle(TRequest) Endpoint<TRequest, TResponse>.OnBeforeHandleAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.OnAfterHandle(TRequest, TResponse) Endpoint<TRequest, TResponse>.OnAfterHandleAsync(TRequest, TResponse, CancellationToken) Endpoint<TRequest, TResponse>.OnValidationFailed() Endpoint<TRequest, TResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<TRequest, TResponse>.ValidationFailed Endpoint<TRequest, TResponse>.User Endpoint<TRequest, TResponse>.Response Endpoint<TRequest, TResponse>.Config Endpoint<TRequest, TResponse>.Env Endpoint<TRequest, TResponse>.Logger Endpoint<TRequest, TResponse>.BaseURL Endpoint<TRequest, TResponse>.HttpMethod Endpoint<TRequest, TResponse>.Form Endpoint<TRequest, TResponse>.Files Endpoint<TRequest, TResponse>.ResponseStarted Endpoint<TRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendInterceptedAsync(Object, Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendStringAsync(String, Int32, String, CancellationToken) Endpoint<TRequest, TResponse>.SendOkAsync(TResponse, CancellationToken) Endpoint<TRequest, TResponse>.SendOkAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendErrorsAsync(Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendNoContentAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendNotFoundAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendForbiddenAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendRedirectAsync(String, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken) Endpoint<TRequest, TResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<TRequest, TResponse>.AllowAnonymous(Http[]) Endpoint<TRequest, TResponse>.AllowAnonymous(String[]) Endpoint<TRequest, TResponse>.AllowFileUploads(Boolean) Endpoint<TRequest, TResponse>.AllowFormData() Endpoint<TRequest, TResponse>.AuthSchemes(String[]) Endpoint<TRequest, TResponse>.Claims(String[]) Endpoint<TRequest, TResponse>.ClaimsAll(String[]) Endpoint<TRequest, TResponse>.Delete(String[]) Endpoint<TRequest, TResponse>.Delete(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Description(Action<RouteHandlerBuilder>, Boolean) Endpoint<TRequest, TResponse>.DontAutoTag() Endpoint<TRequest, TResponse>.DontCatchExceptions() Endpoint<TRequest, TResponse>.DontThrowIfValidationFails() Endpoint<TRequest, TResponse>.Get(String[]) Endpoint<TRequest, TResponse>.Get(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Group<TEndpointGroup>() Endpoint<TRequest, TResponse>.Head(String[]) Endpoint<TRequest, TResponse>.Head(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<TRequest, TResponse>.Patch(String[]) Endpoint<TRequest, TResponse>.Patch(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Permissions(String[]) Endpoint<TRequest, TResponse>.PermissionsAll(String[]) Endpoint<TRequest, TResponse>.Policies(String[]) Endpoint<TRequest, TResponse>.Post(String[]) Endpoint<TRequest, TResponse>.Post(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.PostProcessors(IPostProcessor<TRequest, TResponse>[]) Endpoint<TRequest, TResponse>.PreProcessors(IPreProcessor<TRequest>[]) Endpoint<TRequest, TResponse>.Put(String[]) Endpoint<TRequest, TResponse>.Put(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.RequestBinder(IRequestBinder<TRequest>) Endpoint<TRequest, TResponse>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) Endpoint<TRequest, TResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<TRequest, TResponse>.Roles(String[]) Endpoint<TRequest, TResponse>.RoutePrefixOverride(String) Endpoint<TRequest, TResponse>.Routes(String[]) Endpoint<TRequest, TResponse>.SerializerContext<TContext>(TContext) Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary>) Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary<TRequest>>) Endpoint<TRequest, TResponse>.Summary(EndpointSummary) Endpoint<TRequest, TResponse>.Tags(String[]) Endpoint<TRequest, TResponse>.Throttle(Int32, Double, String) Endpoint<TRequest, TResponse>.Validator<TValidator>() Endpoint<TRequest, TResponse>.Verbs(Http[]) Endpoint<TRequest, TResponse>.Verbs(String[]) Endpoint<TRequest, TResponse>.Version(Int32, Nullable<Int32>) Endpoint<TRequest, TResponse>.AddError(String, String, Severity) Endpoint<TRequest, TResponse>.AddError(Expression<Func<TRequest, Object>>, String, String, Severity) Endpoint<TRequest, TResponse>.ThrowIfAnyErrors() Endpoint<TRequest, TResponse>.ThrowError(String) Endpoint<TRequest, TResponse>.ThrowError(Expression<Func<TRequest, Object>>, String) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures BaseEndpoint.Configure() BaseEndpoint.Verbs(String[]) BaseEndpoint.Group<TEndpointGroup>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class Endpoint<TRequest, TResponse, TMapper> : Endpoint<TRequest, TResponse>, IEndpoint, IEventBus, IServiceResolverBase, IHasMapper<TMapper>, IHasMapper where TRequest : new() where TMapper : IMapper Type Parameters Name Description TRequest the type of the request dto TResponse the type of the response dto TMapper the type of the entity mapper Properties Map the entity mapper for the endpoint HINT: entity mappers are singletons for performance reasons. do not maintain state in the mappers. Declaration public TMapper Map { get; set; } Property Value Type Description TMapper Implements IEndpoint IEventBus IServiceResolverBase IHasMapper<TMapper> IHasMapper"
  },
  "api/FastEndpoints.EndpointDefinition.html": {
    "href": "api/FastEndpoints.EndpointDefinition.html",
    "title": "Class EndpointDefinition | FastEndpoints",
    "keywords": "Class EndpointDefinition represents the configuration settings of an endpoint Inheritance System.Object EndpointDefinition Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public sealed class EndpointDefinition Properties AllowAnyClaim represents the configuration settings of an endpoint Declaration public bool AllowAnyClaim { get; } Property Value Type Description System.Boolean AllowAnyPermission represents the configuration settings of an endpoint Declaration public bool AllowAnyPermission { get; } Property Value Type Description System.Boolean AllowedClaimTypes represents the configuration settings of an endpoint Declaration public List<string> AllowedClaimTypes { get; } Property Value Type Description System.Collections.Generic.List < System.String > AllowedPermissions represents the configuration settings of an endpoint Declaration public List<string> AllowedPermissions { get; } Property Value Type Description System.Collections.Generic.List < System.String > AllowedRoles represents the configuration settings of an endpoint Declaration public List<string> AllowedRoles { get; } Property Value Type Description System.Collections.Generic.List < System.String > AnonymousVerbs represents the configuration settings of an endpoint Declaration public string[] AnonymousVerbs { get; } Property Value Type Description System.String [] AuthSchemeNames represents the configuration settings of an endpoint Declaration public List<string> AuthSchemeNames { get; } Property Value Type Description System.Collections.Generic.List < System.String > DoNotCatchExceptions represents the configuration settings of an endpoint Declaration public bool DoNotCatchExceptions { get; } Property Value Type Description System.Boolean DontAutoTagEndpoints represents the configuration settings of an endpoint Declaration public bool DontAutoTagEndpoints { get; } Property Value Type Description System.Boolean DontBindFormData represents the configuration settings of an endpoint Declaration public bool DontBindFormData { get; } Property Value Type Description System.Boolean EndpointSummary represents the configuration settings of an endpoint Declaration public EndpointSummary EndpointSummary { get; } Property Value Type Description EndpointSummary EndpointTags represents the configuration settings of an endpoint Declaration public List<string> EndpointTags { get; } Property Value Type Description System.Collections.Generic.List < System.String > EndpointType represents the configuration settings of an endpoint Declaration public Type EndpointType { get; } Property Value Type Description System.Type FormDataAllowed represents the configuration settings of an endpoint Declaration public bool FormDataAllowed { get; } Property Value Type Description System.Boolean MapperType represents the configuration settings of an endpoint Declaration public Type MapperType { get; } Property Value Type Description System.Type OverriddenRoutePrefix represents the configuration settings of an endpoint Declaration public string OverriddenRoutePrefix { get; } Property Value Type Description System.String PreBuiltUserPolicies represents the configuration settings of an endpoint Declaration public List<string> PreBuiltUserPolicies { get; } Property Value Type Description System.Collections.Generic.List < System.String > ReqDtoType represents the configuration settings of an endpoint Declaration public Type ReqDtoType { get; } Property Value Type Description System.Type Routes represents the configuration settings of an endpoint Declaration public string[] Routes { get; } Property Value Type Description System.String [] SecurityPolicyName represents the configuration settings of an endpoint Declaration public string SecurityPolicyName { get; } Property Value Type Description System.String ThrowIfValidationFails represents the configuration settings of an endpoint Declaration public bool ThrowIfValidationFails { get; } Property Value Type Description System.Boolean ValidatorType represents the configuration settings of an endpoint Declaration public Type ValidatorType { get; } Property Value Type Description System.Type Verbs represents the configuration settings of an endpoint Declaration public string[] Verbs { get; } Property Value Type Description System.String [] Version represents the configuration settings of an endpoint Declaration public EpVersion Version { get; } Property Value Type Description EpVersion Methods AllowAnonymous(Http[]) allow unauthenticated requests to this endpoint. optionally specify a set of verbs to allow unauthenticated access with. i.e. if the endpoint is listening to POST, PUT & PATCH and you specify AllowAnonymous(Http.POST), then only PUT & PATCH will require authentication. Declaration public void AllowAnonymous(params Http[] verbs) Parameters Type Name Description Http [] verbs AllowAnonymous(String[]) allow unauthenticated requests to this endpoint for a specified set of http verbs. Declaration public void AllowAnonymous(string[] verbs) Parameters Type Name Description System.String [] verbs AllowFileUploads(Boolean) enable file uploads with multipart/form-data content type Declaration public void AllowFileUploads(bool dontAutoBindFormData = false) Parameters Type Name Description System.Boolean dontAutoBindFormData set 'true' to disable auto binding of form data which enables uploading and reading of large files without buffering to memory/disk. you can access the multipart sections for reading via the FormFileSectionsAsync() method. AllowFormData() enable multipart/form-data submissions Declaration public void AllowFormData() AuthSchemes(String[]) specify which authentication schemes to use for authenticating requests to this endpoint HINT: these auth schemes will be applied in addition to endpoint level auth schemes if there's any Declaration public void AuthSchemes(params string[] authSchemeNames) Parameters Type Name Description System.String [] authSchemeNames the authentication scheme names Claims(String[]) allows access if the claims principal has ANY of the given claim types HINT: these claims will be applied in addition to endpoint level claims if there's any Declaration public void Claims(params string[] claimTypes) Parameters Type Name Description System.String [] claimTypes the claim types ClaimsAll(String[]) allows access if the claims principal has ALL of the given claim types HINT: these claims will be applied in addition to endpoint level claims if there's any Declaration public void ClaimsAll(params string[] claimTypes) Parameters Type Name Description System.String [] claimTypes the claim types Description(Action<RouteHandlerBuilder>, Boolean) describe openapi metadata for this endpoint. optionaly specify whether or not you want to clear the default Accepts/Produces metadata. EXAMPLE: b => b.Accepts<Request>(\"text/plain\") Declaration public void Description(Action<RouteHandlerBuilder> builder, bool clearDefaults = false) Parameters Type Name Description System.Action < Microsoft.AspNetCore.Builder.RouteHandlerBuilder > builder the route handler builder for this endpoint System.Boolean clearDefaults set to true if the defaults should be cleared DontAutoTag() if swagger auto tagging based on path segment is enabled, calling this method will prevent a tag from being added to this endpoint. Declaration public void DontAutoTag() DontCatchExceptions() use this only if you have your own exception catching middleware. if this method is called in config, an automatic error response will not be sent to the client by the library. all exceptions will be thrown and it would be your exeception catching middleware to handle them. Declaration public void DontCatchExceptions() DontThrowIfValidationFails() disable auto validation failure responses (400 bad request with error details) for this endpoint. HINT: this only applies to request dto validation. Declaration public void DontThrowIfValidationFails() EndpointVersion(Int32, Nullable<Int32>) specify the version of the endpoint if versioning is enabled Declaration public void EndpointVersion(int version, int? deprecateAt = null) Parameters Type Name Description System.Int32 version the version of this endpoint System.Nullable < System.Int32 > deprecateAt the version group number starting at which this endpoint should not be included in swagger document Options(Action<RouteHandlerBuilder>) set endpoint configurations options using an endpoint builder action /// Declaration public void Options(Action<RouteHandlerBuilder> builder) Parameters Type Name Description System.Action < Microsoft.AspNetCore.Builder.RouteHandlerBuilder > builder the builder for this endpoint Permissions(String[]) allows access if the claims principal has ANY of the given permissions HINT: these permissions will be applied in addition to endpoint level permissions if there's any Declaration public void Permissions(params string[] permissions) Parameters Type Name Description System.String [] permissions the permissions PermissionsAll(String[]) allows access if the claims principal has ALL of the given permissions HINT: these permissions will be applied in addition to endpoint level permissions if there's any Declaration public void PermissionsAll(params string[] permissions) Parameters Type Name Description System.String [] permissions the permissions Policies(String[]) specify one or more authorization policy names you have added to the middleware pipeline during app startup/ service configuration that should be applied to this endpoint. HINT: these policies will be applied in addition to endpoint level policies if there's any Declaration public void Policies(params string[] policyNames) Parameters Type Name Description System.String [] policyNames one or more policy names (must have been added to the pipeline on startup) PostProcessors(Order, IGlobalPostProcessor[]) adds global post-processors to an endpoint definition which are to be executed in addition to the ones configured at the endpoint level. Declaration public void PostProcessors(Order order, params IGlobalPostProcessor[] postProcessors) Parameters Type Name Description Order order set to Before if the global post-processors should be executed before endpoint post-processors. After will execute global processors after endpoint level processors IGlobalPostProcessor [] postProcessors the post-processors to add PreProcessors(Order, IGlobalPreProcessor[]) adds global pre-processors to an endpoint definition which are to be executed in addition to the ones configured at the endpoint level. Declaration public void PreProcessors(Order order, params IGlobalPreProcessor[] preProcessors) Parameters Type Name Description Order order set to Before if the global pre-processors should be executed before endpoint pre-processors. After will execute global processors after endpoint level processors IGlobalPreProcessor [] preProcessors the pre-processors to add ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) specify response caching settings for this endpoint Declaration public void ResponseCache(int durationSeconds, ResponseCacheLocation location = ResponseCacheLocation.Any, bool noStore = false, string varyByHeader = null, string[] varyByQueryKeys = null) Parameters Type Name Description System.Int32 durationSeconds the duration in seconds for which the response is cached Microsoft.AspNetCore.Mvc.ResponseCacheLocation location the location where the data from a particular URL must be cached System.Boolean noStore specify whether the data should be stored or not System.String varyByHeader the value for the Vary response header System.String [] varyByQueryKeys the query keys to vary by ResponseInterceptor(IResponseInterceptor) configure a response interceptor to be called before any SendAsync() methods are called. if the interceptor sends a response to the client, the SendAsync() will be ignored. Declaration public void ResponseInterceptor(IResponseInterceptor responseInterceptor) Parameters Type Name Description IResponseInterceptor responseInterceptor the response interceptor to be configured for the endpoint Roles(String[]) allows access if the claims principal has ANY of the given roles HINT: these roles will be applied in addition to endpoint level roles if there's any Declaration public void Roles(params string[] rolesNames) Parameters Type Name Description System.String [] rolesNames one or more roles that has access RoutePrefixOverride(String) specify an override route prefix for this endpoint if a global route prefix is enabled. this is ignored if a global route prefix is not configured. global prefix can be ignored by setting string.Empty WARNING: setting a route prefix override globally makes the endpoint level override ineffective. i.e. RoutePrefixOverride() method call on endpoint level will be ignored. Declaration public void RoutePrefixOverride(string routePrefix) Parameters Type Name Description System.String routePrefix route prefix value Summary(EndpointSummary) provide a summary/description for this endpoint to be used in swagger/ openapi Declaration public void Summary(EndpointSummary endpointSummary) Parameters Type Name Description EndpointSummary endpointSummary an endpoint summary instance Summary(Action<EndpointSummary>) provide a summary/description for this endpoint to be used in swagger/ openapi Declaration public void Summary(Action<EndpointSummary> endpointSummary) Parameters Type Name Description System.Action < EndpointSummary > endpointSummary an action that sets values of an endpoint summary object Summary<TRequest>(Action<EndpointSummary<TRequest>>) provide a summary/description for this endpoint to be used in swagger/ openapi Declaration public void Summary<TRequest>(Action<EndpointSummary<TRequest>> endpointSummary) where TRequest : new() Parameters Type Name Description System.Action < EndpointSummary <TRequest>> endpointSummary an action that sets values of an endpoint summary object Type Parameters Name Description TRequest Tags(String[]) specify one or more string tags for this endpoint so they can be used in the exclusion filter during registration. HINT: these tags will be applied in addition to endpoint level tags if there's any TIP: these tags have nothing to do with swagger tags! Declaration public void Tags(params string[] endpointTags) Parameters Type Name Description System.String [] endpointTags the tag values to associate with this endpoint Throttle(Int32, Double, String) rate limit requests to this endpoint based on a request http header sent by the client. Declaration public void Throttle(int hitLimit, double durationSeconds, string headerName = null) Parameters Type Name Description System.Int32 hitLimit how many requests are allowed within the given duration System.Double durationSeconds the frequency in seconds where the accrued hit count should be reset System.String headerName the name of the request header used to uniquely identify clients. header name can also be configured globally using app.UseFastEndpoints(c=> c.Throttle...) not specifying a header name will first look for 'X-Forwarded-For' header and if not present, will use HttpContext.Connection.RemoteIpAddress . Validator<TValidator>() validator that should be used for this endpoint Declaration public void Validator<TValidator>() where TValidator : IValidator Type Parameters Name Description TValidator the type of the validator"
  },
  "api/FastEndpoints.EndpointDiscoveryOptions.html": {
    "href": "api/FastEndpoints.EndpointDiscoveryOptions.html",
    "title": "Class EndpointDiscoveryOptions | FastEndpoints",
    "keywords": "Class EndpointDiscoveryOptions defines how endpoint discovery and registration should be done at startup Inheritance System.Object EndpointDiscoveryOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class EndpointDiscoveryOptions Properties Assemblies an optional collection of assemblies to discover endpoints from. if DisableAutoDiscovery is set to true, this must be provided. NOTE: not applicable when using FastEndpoints.Generator package Declaration public IEnumerable<Assembly> Assemblies { set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Reflection.Assembly > AssemblyFilter an optional predicate to filter out the final collection of assemblies before scanning for endpoints. NOTE: not applicable when using FastEndpoints.Generator package Declaration public Func<Assembly, bool> AssemblyFilter { set; } Property Value Type Description System.Func < System.Reflection.Assembly , System.Boolean > DisableAutoDiscovery set to true if only the provided Assemblies should be scanned for endpoints. if the Assemblies property is null and this is set to true, an exception will be thrown. NOTE: not applicable when using FastEndpoints.Generator package Declaration public bool DisableAutoDiscovery { set; } Property Value Type Description System.Boolean Filter a function to filter out types from auto discovery. the function you set here will be executed for each discovered type during startup. return 'false' from the function if you want to exclude a type from discovery. return 'true' to include. Declaration public Func<Type, bool> Filter { set; } Property Value Type Description System.Func < System.Type , System.Boolean > IncludeAbstractValidators by default only validators inheriting Validator<TRequest> are auto registered. if you'd like to also include validators inheriting FluentValidation.AbstractValidator<T> , set this to true. Declaration public bool IncludeAbstractValidators { set; } Property Value Type Description System.Boolean SourceGeneratorDiscoveredTypes if using the FastEndpoints.Generator package, assign DiscoveredTypes.All to this property. doing so will use the types discovered during source generation instead of reflection based type discovery. Declaration public Type[] SourceGeneratorDiscoveredTypes { set; } Property Value Type Description System.Type []"
  },
  "api/FastEndpoints.EndpointFactory.html": {
    "href": "api/FastEndpoints.EndpointFactory.html",
    "title": "Class EndpointFactory | FastEndpoints",
    "keywords": "Class EndpointFactory the default endpoint factory. it creates an instance of the endpoint and injects both constructor and property dependencies. Inheritance System.Object EndpointFactory Implements IEndpointFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class EndpointFactory : IEndpointFactory Methods Create(EndpointDefinition, HttpContext) this method is called per each request. Declaration public BaseEndpoint Create(EndpointDefinition definition, HttpContext ctx) Parameters Type Name Description EndpointDefinition definition the endpoint definition Microsoft.AspNetCore.Http.HttpContext ctx the http context for the current request Returns Type Description BaseEndpoint Implements IEndpointFactory"
  },
  "api/FastEndpoints.EndpointOptions.html": {
    "href": "api/FastEndpoints.EndpointOptions.html",
    "title": "Class EndpointOptions | FastEndpoints",
    "keywords": "Class EndpointOptions endpoint registration options Inheritance System.Object EndpointOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class EndpointOptions Properties Configurator a configuration action to be performed on each endpoint definition during startup. some of the same methods you use inside Configure() method are available to be called on the EndpointDefinition parameter. this can be used to apply a set of common configuration settings globally to all endpoints. i.e. apply globally applicable settings here and specify only the settings applicable to individual endpoints from within each endpoints' Configure() method. app.UseFastEndpoints(c => c.GlobalEndpointConfig = ep => { ep.AllowAnonymous(); ep.Description(b => b.Produces<ErrorResponse>(400)); }); Declaration public Action<EndpointDefinition> Configurator { set; } Property Value Type Description System.Action < EndpointDefinition > Filter a function to filter out endpoints from auto registration. the function you set here will be executed for each endpoint during startup. you can inspect the EndpointSettings to check what the current endpoint is, if needed. return 'false' from the function if you want to exclude an endpoint from registration. return 'true' to include. this function will executed for each endpoint that has been discovered during startup. Declaration public Func<EndpointDefinition, bool> Filter { set; } Property Value Type Description System.Func < EndpointDefinition , System.Boolean > RoutePrefix prefix for all routes (example 'api'). Declaration public string RoutePrefix { set; } Property Value Type Description System.String ShortNames set to true if you'd like the endpoint names/ swagger operation ids to be just the endpoint class names instead of the full names including namespace. Declaration public bool ShortNames { set; } Property Value Type Description System.Boolean"
  },
  "api/FastEndpoints.EndpointSummary-1.html": {
    "href": "api/FastEndpoints.EndpointSummary-1.html",
    "title": "Class EndpointSummary<TRequest> | FastEndpoints",
    "keywords": "Class EndpointSummary<TRequest> Inheritance System.Object EndpointSummary EndpointSummary<TRequest> Summary<TEndpoint, TRequest> Inherited Members EndpointSummary.Item[Int32] EndpointSummary.Summary EndpointSummary.Description EndpointSummary.ExampleRequest EndpointSummary.Params EndpointSummary.Responses EndpointSummary.ResponseExamples EndpointSummary.ResponseParam<TResponse>(Int32, Expression<Func<TResponse, Object>>, String) EndpointSummary.ResponseParam<TResponse>(Expression<Func<TResponse, Object>>, String) EndpointSummary.Response<TResponse>(Int32, String, String, TResponse) EndpointSummary.Response(Int32, String, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class EndpointSummary<TRequest> : EndpointSummary where TRequest : new() Type Parameters Name Description TRequest the type of the request dto Methods RequestParam(Expression<Func<TRequest, Object>>, String) add a description for a request param for a given property of the request dto Declaration public void RequestParam(Expression<Func<TRequest, object>> property, string description) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TRequest, System.Object >> property a member expression for specifying which property the description is for System.String description the description text"
  },
  "api/FastEndpoints.EndpointSummary.html": {
    "href": "api/FastEndpoints.EndpointSummary.html",
    "title": "Class EndpointSummary | FastEndpoints",
    "keywords": "Class EndpointSummary a class used for providing a textual description about an endpoint for swagger Inheritance System.Object EndpointSummary EndpointSummary<TRequest> Summary<TEndpoint> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class EndpointSummary Properties Description the long description of the endpoint Declaration public string Description { get; set; } Property Value Type Description System.String ExampleRequest an example request object to be used in swagger/ openapi. Declaration public object ExampleRequest { get; set; } Property Value Type Description System.Object Item[Int32] indexer for the response descriptions Declaration public string this[int statusCode] { get; set; } Parameters Type Name Description System.Int32 statusCode the status code of the response you want to access Property Value Type Description System.String the text description Params the descriptions for endpoint paramaters. you can add descriptions for route/query params and request dto properties. what you specify here will take precedence over xml comments of dto classes (if they are also specified). Declaration public Dictionary<string, string> Params { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > ResponseExamples the response examples for each status code Declaration public Dictionary<int, object> ResponseExamples { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.Int32 , System.Object > Responses the descriptions of the different responses/ status codes an endpoint can return Declaration public Dictionary<int, string> Responses { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.Int32 , System.String > Summary the short summary of the endpoint Declaration public string Summary { get; set; } Property Value Type Description System.String Methods Response(Int32, String, String) add a response description that doesn't have a response dto to the swagger document NOTE: if you use the this method, the default 200 response is automatically removed, and you'd have to specify the 200 response yourself if it applies to your endpoint. Declaration public void Response(int statusCode = 200, string description = null, string contentType = null) Parameters Type Name Description System.Int32 statusCode http status code System.String description the description of the response System.String contentType the media/content type of the response Response<TResponse>(Int32, String, String, TResponse) add a response description to the swagger document NOTE: if you use the this method, the default 200 response is automatically removed, and you'd have to specify the 200 response yourself if it applies to your endpoint. Declaration public void Response<TResponse>(int statusCode = 200, string description = null, string contentType = \"application/json\", TResponse example = null) Parameters Type Name Description System.Int32 statusCode http status code System.String description the description of the response System.String contentType the media/content type of the response TResponse example and example response dto instance Type Parameters Name Description TResponse the type of the response dto ResponseParam<TResponse>(Int32, Expression<Func<TResponse, Object>>, String) add a description for a given property of a given response dto Declaration public void ResponseParam<TResponse>(int statusCode, Expression<Func<TResponse, object>> property, string description) Parameters Type Name Description System.Int32 statusCode the status code of the response you want to add the descriptions for System.Linq.Expressions.Expression < System.Func <TResponse, System.Object >> property a member expression for specifying which property the description is for System.String description the description text Type Parameters Name Description TResponse ResponseParam<TResponse>(Expression<Func<TResponse, Object>>, String) add a description for a given property of the 200 response dto Declaration public void ResponseParam<TResponse>(Expression<Func<TResponse, object>> property, string description) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TResponse, System.Object >> property a member expression for specifying which property the description is for System.String description the description text Type Parameters Name Description TResponse"
  },
  "api/FastEndpoints.EndpointWithMapper-2.html": {
    "href": "api/FastEndpoints.EndpointWithMapper-2.html",
    "title": "Class EndpointWithMapper<TRequest, TMapper> | FastEndpoints",
    "keywords": "Class EndpointWithMapper<TRequest, TMapper> use this base class for defining endpoints that only use a request dto and don't use a response dto but uses a request mapper. Inheritance System.Object BaseEndpoint Endpoint <TRequest, System.Object > EndpointWithMapper<TRequest, TMapper> Implements IEndpoint IEventBus IServiceResolverBase IHasMapper <TMapper> IHasMapper Inherited Members Endpoint<TRequest, Object>.HandleAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.ExecuteAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.TryResolve<TService>() Endpoint<TRequest, Object>.TryResolve(Type) Endpoint<TRequest, Object>.Resolve<TService>() Endpoint<TRequest, Object>.Resolve(Type) Endpoint<TRequest, Object>.CreateScope() Endpoint<TRequest, Object>.Route<T>(String, Boolean) Endpoint<TRequest, Object>.Query<T>(String, Boolean) Endpoint<TRequest, Object>.FormFileSectionsAsync(CancellationToken) Endpoint<TRequest, Object>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<TRequest, Object>.CreateTokenWith<TService>(String, Action<UserPrivileges>) Endpoint<TRequest, Object>.OnBeforeValidate(TRequest) Endpoint<TRequest, Object>.OnBeforeValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.OnAfterValidate(TRequest) Endpoint<TRequest, Object>.OnAfterValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.OnBeforeHandle(TRequest) Endpoint<TRequest, Object>.OnBeforeHandleAsync(TRequest, CancellationToken) Endpoint<TRequest, Object>.OnAfterHandle(TRequest, Object) Endpoint<TRequest, Object>.OnAfterHandleAsync(TRequest, Object, CancellationToken) Endpoint<TRequest, Object>.OnValidationFailed() Endpoint<TRequest, Object>.OnValidationFailedAsync(CancellationToken) Endpoint<TRequest, Object>.ValidationFailed Endpoint<TRequest, Object>.User Endpoint<TRequest, Object>.Response Endpoint<TRequest, Object>.Config Endpoint<TRequest, Object>.Env Endpoint<TRequest, Object>.Logger Endpoint<TRequest, Object>.BaseURL Endpoint<TRequest, Object>.HttpMethod Endpoint<TRequest, Object>.Form Endpoint<TRequest, Object>.Files Endpoint<TRequest, Object>.ResponseStarted Endpoint<TRequest, Object>.SendAsync(Object, Int32, CancellationToken) Endpoint<TRequest, Object>.SendInterceptedAsync(Object, Int32, CancellationToken) Endpoint<TRequest, Object>.SendCreatedAtAsync<TEndpoint>(Object, Object, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendCreatedAtAsync(String, Object, Object, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendStringAsync(String, Int32, String, CancellationToken) Endpoint<TRequest, Object>.SendOkAsync(Object, CancellationToken) Endpoint<TRequest, Object>.SendOkAsync(CancellationToken) Endpoint<TRequest, Object>.SendErrorsAsync(Int32, CancellationToken) Endpoint<TRequest, Object>.SendNoContentAsync(CancellationToken) Endpoint<TRequest, Object>.SendNotFoundAsync(CancellationToken) Endpoint<TRequest, Object>.SendUnauthorizedAsync(CancellationToken) Endpoint<TRequest, Object>.SendForbiddenAsync(CancellationToken) Endpoint<TRequest, Object>.SendRedirectAsync(String, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken) Endpoint<TRequest, Object>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, Object>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken) Endpoint<TRequest, Object>.SendEmptyJsonObject(CancellationToken) Endpoint<TRequest, Object>.AllowAnonymous(Http[]) Endpoint<TRequest, Object>.AllowAnonymous(String[]) Endpoint<TRequest, Object>.AllowFileUploads(Boolean) Endpoint<TRequest, Object>.AllowFormData() Endpoint<TRequest, Object>.AuthSchemes(String[]) Endpoint<TRequest, Object>.Claims(String[]) Endpoint<TRequest, Object>.ClaimsAll(String[]) Endpoint<TRequest, Object>.Delete(String[]) Endpoint<TRequest, Object>.Delete(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.Description(Action<RouteHandlerBuilder>, Boolean) Endpoint<TRequest, Object>.DontAutoTag() Endpoint<TRequest, Object>.DontCatchExceptions() Endpoint<TRequest, Object>.DontThrowIfValidationFails() Endpoint<TRequest, Object>.Get(String[]) Endpoint<TRequest, Object>.Get(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.Group<TEndpointGroup>() Endpoint<TRequest, Object>.Head(String[]) Endpoint<TRequest, Object>.Head(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.Options(Action<RouteHandlerBuilder>) Endpoint<TRequest, Object>.Patch(String[]) Endpoint<TRequest, Object>.Patch(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.Permissions(String[]) Endpoint<TRequest, Object>.PermissionsAll(String[]) Endpoint<TRequest, Object>.Policies(String[]) Endpoint<TRequest, Object>.Post(String[]) Endpoint<TRequest, Object>.Post(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.PostProcessors(IPostProcessor<TRequest, Object>[]) Endpoint<TRequest, Object>.PreProcessors(IPreProcessor<TRequest>[]) Endpoint<TRequest, Object>.Put(String[]) Endpoint<TRequest, Object>.Put(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, Object>.RequestBinder(IRequestBinder<TRequest>) Endpoint<TRequest, Object>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) Endpoint<TRequest, Object>.ResponseInterceptor(IResponseInterceptor) Endpoint<TRequest, Object>.Roles(String[]) Endpoint<TRequest, Object>.RoutePrefixOverride(String) Endpoint<TRequest, Object>.Routes(String[]) Endpoint<TRequest, Object>.SerializerContext<TContext>(TContext) Endpoint<TRequest, Object>.Summary(Action<EndpointSummary>) Endpoint<TRequest, Object>.Summary(Action<EndpointSummary<TRequest>>) Endpoint<TRequest, Object>.Summary(EndpointSummary) Endpoint<TRequest, Object>.Tags(String[]) Endpoint<TRequest, Object>.Throttle(Int32, Double, String) Endpoint<TRequest, Object>.Validator<TValidator>() Endpoint<TRequest, Object>.Verbs(Http[]) Endpoint<TRequest, Object>.Verbs(String[]) Endpoint<TRequest, Object>.Version(Int32, Nullable<Int32>) Endpoint<TRequest, Object>.AddError(String, String, Severity) Endpoint<TRequest, Object>.AddError(Expression<Func<TRequest, Object>>, String, String, Severity) Endpoint<TRequest, Object>.ThrowIfAnyErrors() Endpoint<TRequest, Object>.ThrowError(String) Endpoint<TRequest, Object>.ThrowError(Expression<Func<TRequest, Object>>, String) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures BaseEndpoint.Configure() BaseEndpoint.Verbs(String[]) BaseEndpoint.Group<TEndpointGroup>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class EndpointWithMapper<TRequest, TMapper> : Endpoint<TRequest, object>, IEndpoint, IEventBus, IServiceResolverBase, IHasMapper<TMapper>, IHasMapper where TRequest : new() where TMapper : IRequestMapper Type Parameters Name Description TRequest the type of the request dto TMapper the type of the entity mapper Properties Map the entity mapper for the endpoint HINT: entity mappers are singletons for performance reasons. do not maintain state in the mappers. Declaration public TMapper Map { get; set; } Property Value Type Description TMapper Implements IEndpoint IEventBus IServiceResolverBase IHasMapper<TMapper> IHasMapper"
  },
  "api/FastEndpoints.EndpointWithMapping-3.html": {
    "href": "api/FastEndpoints.EndpointWithMapping-3.html",
    "title": "Class EndpointWithMapping<TRequest, TResponse, TEntity> | FastEndpoints",
    "keywords": "Class EndpointWithMapping<TRequest, TResponse, TEntity> use this base class for defining endpoints that use both request and response dtos as well as require mapping to and from a domain entity. Inheritance System.Object BaseEndpoint Endpoint <TRequest, TResponse> EndpointWithMapping<TRequest, TResponse, TEntity> Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.ExecuteAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.TryResolve<TService>() Endpoint<TRequest, TResponse>.TryResolve(Type) Endpoint<TRequest, TResponse>.Resolve<TService>() Endpoint<TRequest, TResponse>.Resolve(Type) Endpoint<TRequest, TResponse>.CreateScope() Endpoint<TRequest, TResponse>.Route<T>(String, Boolean) Endpoint<TRequest, TResponse>.Query<T>(String, Boolean) Endpoint<TRequest, TResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<TRequest, TResponse>.CreateTokenWith<TService>(String, Action<UserPrivileges>) Endpoint<TRequest, TResponse>.OnBeforeValidate(TRequest) Endpoint<TRequest, TResponse>.OnBeforeValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.OnAfterValidate(TRequest) Endpoint<TRequest, TResponse>.OnAfterValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.OnBeforeHandle(TRequest) Endpoint<TRequest, TResponse>.OnBeforeHandleAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.OnAfterHandle(TRequest, TResponse) Endpoint<TRequest, TResponse>.OnAfterHandleAsync(TRequest, TResponse, CancellationToken) Endpoint<TRequest, TResponse>.OnValidationFailed() Endpoint<TRequest, TResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<TRequest, TResponse>.ValidationFailed Endpoint<TRequest, TResponse>.User Endpoint<TRequest, TResponse>.Response Endpoint<TRequest, TResponse>.Config Endpoint<TRequest, TResponse>.Env Endpoint<TRequest, TResponse>.Logger Endpoint<TRequest, TResponse>.BaseURL Endpoint<TRequest, TResponse>.HttpMethod Endpoint<TRequest, TResponse>.Form Endpoint<TRequest, TResponse>.Files Endpoint<TRequest, TResponse>.ResponseStarted Endpoint<TRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendInterceptedAsync(Object, Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendStringAsync(String, Int32, String, CancellationToken) Endpoint<TRequest, TResponse>.SendOkAsync(TResponse, CancellationToken) Endpoint<TRequest, TResponse>.SendOkAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendErrorsAsync(Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendNoContentAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendNotFoundAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendForbiddenAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendRedirectAsync(String, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken) Endpoint<TRequest, TResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<TRequest, TResponse>.AllowAnonymous(Http[]) Endpoint<TRequest, TResponse>.AllowAnonymous(String[]) Endpoint<TRequest, TResponse>.AllowFileUploads(Boolean) Endpoint<TRequest, TResponse>.AllowFormData() Endpoint<TRequest, TResponse>.AuthSchemes(String[]) Endpoint<TRequest, TResponse>.Claims(String[]) Endpoint<TRequest, TResponse>.ClaimsAll(String[]) Endpoint<TRequest, TResponse>.Delete(String[]) Endpoint<TRequest, TResponse>.Delete(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Description(Action<RouteHandlerBuilder>, Boolean) Endpoint<TRequest, TResponse>.DontAutoTag() Endpoint<TRequest, TResponse>.DontCatchExceptions() Endpoint<TRequest, TResponse>.DontThrowIfValidationFails() Endpoint<TRequest, TResponse>.Get(String[]) Endpoint<TRequest, TResponse>.Get(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Group<TEndpointGroup>() Endpoint<TRequest, TResponse>.Head(String[]) Endpoint<TRequest, TResponse>.Head(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<TRequest, TResponse>.Patch(String[]) Endpoint<TRequest, TResponse>.Patch(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Permissions(String[]) Endpoint<TRequest, TResponse>.PermissionsAll(String[]) Endpoint<TRequest, TResponse>.Policies(String[]) Endpoint<TRequest, TResponse>.Post(String[]) Endpoint<TRequest, TResponse>.Post(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.PostProcessors(IPostProcessor<TRequest, TResponse>[]) Endpoint<TRequest, TResponse>.PreProcessors(IPreProcessor<TRequest>[]) Endpoint<TRequest, TResponse>.Put(String[]) Endpoint<TRequest, TResponse>.Put(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.RequestBinder(IRequestBinder<TRequest>) Endpoint<TRequest, TResponse>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) Endpoint<TRequest, TResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<TRequest, TResponse>.Roles(String[]) Endpoint<TRequest, TResponse>.RoutePrefixOverride(String) Endpoint<TRequest, TResponse>.Routes(String[]) Endpoint<TRequest, TResponse>.SerializerContext<TContext>(TContext) Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary>) Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary<TRequest>>) Endpoint<TRequest, TResponse>.Summary(EndpointSummary) Endpoint<TRequest, TResponse>.Tags(String[]) Endpoint<TRequest, TResponse>.Throttle(Int32, Double, String) Endpoint<TRequest, TResponse>.Validator<TValidator>() Endpoint<TRequest, TResponse>.Verbs(Http[]) Endpoint<TRequest, TResponse>.Verbs(String[]) Endpoint<TRequest, TResponse>.Version(Int32, Nullable<Int32>) Endpoint<TRequest, TResponse>.AddError(String, String, Severity) Endpoint<TRequest, TResponse>.AddError(Expression<Func<TRequest, Object>>, String, String, Severity) Endpoint<TRequest, TResponse>.ThrowIfAnyErrors() Endpoint<TRequest, TResponse>.ThrowError(String) Endpoint<TRequest, TResponse>.ThrowError(Expression<Func<TRequest, Object>>, String) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures BaseEndpoint.Configure() BaseEndpoint.Verbs(String[]) BaseEndpoint.Group<TEndpointGroup>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class EndpointWithMapping<TRequest, TResponse, TEntity> : Endpoint<TRequest, TResponse>, IEndpoint, IEventBus, IServiceResolverBase where TRequest : new() Type Parameters Name Description TRequest the type of the request dto TResponse the type of the response dto TEntity the type of domain entity that will be mapped to/from Methods MapFromEntity(TEntity) override this method and place the logic for mapping a domain entity to a response dto Declaration public virtual TResponse MapFromEntity(TEntity e) Parameters Type Name Description TEntity e the domain entity to map from Returns Type Description TResponse MapFromEntityAsync(TEntity, CancellationToken) override this method and place the logic for mapping a domain entity to a response dto Declaration public virtual Task<TResponse> MapFromEntityAsync(TEntity e, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description TEntity e the domain entity to map from System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task <TResponse> MapToEntity(TRequest) override this method and place the logic for mapping the request dto to the desired domain entity Declaration public virtual TEntity MapToEntity(TRequest r) Parameters Type Name Description TRequest r the request dto Returns Type Description TEntity MapToEntityAsync(TRequest, CancellationToken) override this method and place the logic for mapping the request dto to the desired domain entity Declaration public virtual Task<TEntity> MapToEntityAsync(TRequest r, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description TRequest r the request dto to map from System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task <TEntity> Implements IEndpoint IEventBus IServiceResolverBase"
  },
  "api/FastEndpoints.EndpointWithoutRequest-1.html": {
    "href": "api/FastEndpoints.EndpointWithoutRequest-1.html",
    "title": "Class EndpointWithoutRequest<TResponse> | FastEndpoints",
    "keywords": "Class EndpointWithoutRequest<TResponse> use this base class for defining endpoints that doesn't need a request dto but return a response dto. Inheritance System.Object BaseEndpoint Endpoint < EmptyRequest , TResponse> EndpointWithoutRequest<TResponse> EndpointWithoutRequest<TResponse, TMapper> Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<EmptyRequest, TResponse>.HandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.ExecuteAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.TryResolve<TService>() Endpoint<EmptyRequest, TResponse>.TryResolve(Type) Endpoint<EmptyRequest, TResponse>.Resolve<TService>() Endpoint<EmptyRequest, TResponse>.Resolve(Type) Endpoint<EmptyRequest, TResponse>.CreateScope() Endpoint<EmptyRequest, TResponse>.Route<T>(String, Boolean) Endpoint<EmptyRequest, TResponse>.Query<T>(String, Boolean) Endpoint<EmptyRequest, TResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<EmptyRequest, TResponse>.CreateTokenWith<TService>(String, Action<UserPrivileges>) Endpoint<EmptyRequest, TResponse>.OnBeforeValidate(EmptyRequest) Endpoint<EmptyRequest, TResponse>.OnBeforeValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.OnAfterValidate(EmptyRequest) Endpoint<EmptyRequest, TResponse>.OnAfterValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.OnBeforeHandle(EmptyRequest) Endpoint<EmptyRequest, TResponse>.OnBeforeHandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.OnAfterHandle(EmptyRequest, TResponse) Endpoint<EmptyRequest, TResponse>.OnAfterHandleAsync(EmptyRequest, TResponse, CancellationToken) Endpoint<EmptyRequest, TResponse>.OnValidationFailed() Endpoint<EmptyRequest, TResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.ValidationFailed Endpoint<EmptyRequest, TResponse>.User Endpoint<EmptyRequest, TResponse>.Response Endpoint<EmptyRequest, TResponse>.Config Endpoint<EmptyRequest, TResponse>.Env Endpoint<EmptyRequest, TResponse>.Logger Endpoint<EmptyRequest, TResponse>.BaseURL Endpoint<EmptyRequest, TResponse>.HttpMethod Endpoint<EmptyRequest, TResponse>.Form Endpoint<EmptyRequest, TResponse>.Files Endpoint<EmptyRequest, TResponse>.ResponseStarted Endpoint<EmptyRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendInterceptedAsync(Object, Int32, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendStringAsync(String, Int32, String, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendOkAsync(TResponse, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendOkAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendErrorsAsync(Int32, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendNoContentAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendNotFoundAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendForbiddenAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendRedirectAsync(String, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<EmptyRequest, TResponse>.AllowAnonymous(Http[]) Endpoint<EmptyRequest, TResponse>.AllowAnonymous(String[]) Endpoint<EmptyRequest, TResponse>.AllowFileUploads(Boolean) Endpoint<EmptyRequest, TResponse>.AllowFormData() Endpoint<EmptyRequest, TResponse>.AuthSchemes(String[]) Endpoint<EmptyRequest, TResponse>.Claims(String[]) Endpoint<EmptyRequest, TResponse>.ClaimsAll(String[]) Endpoint<EmptyRequest, TResponse>.Delete(String[]) Endpoint<EmptyRequest, TResponse>.Delete(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.Description(Action<RouteHandlerBuilder>, Boolean) Endpoint<EmptyRequest, TResponse>.DontAutoTag() Endpoint<EmptyRequest, TResponse>.DontCatchExceptions() Endpoint<EmptyRequest, TResponse>.DontThrowIfValidationFails() Endpoint<EmptyRequest, TResponse>.Get(String[]) Endpoint<EmptyRequest, TResponse>.Get(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.Group<TEndpointGroup>() Endpoint<EmptyRequest, TResponse>.Head(String[]) Endpoint<EmptyRequest, TResponse>.Head(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<EmptyRequest, TResponse>.Patch(String[]) Endpoint<EmptyRequest, TResponse>.Patch(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.Permissions(String[]) Endpoint<EmptyRequest, TResponse>.PermissionsAll(String[]) Endpoint<EmptyRequest, TResponse>.Policies(String[]) Endpoint<EmptyRequest, TResponse>.Post(String[]) Endpoint<EmptyRequest, TResponse>.Post(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.PostProcessors(IPostProcessor<EmptyRequest, TResponse>[]) Endpoint<EmptyRequest, TResponse>.PreProcessors(IPreProcessor<EmptyRequest>[]) Endpoint<EmptyRequest, TResponse>.Put(String[]) Endpoint<EmptyRequest, TResponse>.Put(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.RequestBinder(IRequestBinder<EmptyRequest>) Endpoint<EmptyRequest, TResponse>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) Endpoint<EmptyRequest, TResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<EmptyRequest, TResponse>.Roles(String[]) Endpoint<EmptyRequest, TResponse>.RoutePrefixOverride(String) Endpoint<EmptyRequest, TResponse>.Routes(String[]) Endpoint<EmptyRequest, TResponse>.SerializerContext<TContext>(TContext) Endpoint<EmptyRequest, TResponse>.Summary(Action<EndpointSummary>) Endpoint<EmptyRequest, TResponse>.Summary(Action<EndpointSummary<EmptyRequest>>) Endpoint<EmptyRequest, TResponse>.Summary(EndpointSummary) Endpoint<EmptyRequest, TResponse>.Tags(String[]) Endpoint<EmptyRequest, TResponse>.Throttle(Int32, Double, String) Endpoint<EmptyRequest, TResponse>.Validator<TValidator>() Endpoint<EmptyRequest, TResponse>.Verbs(Http[]) Endpoint<EmptyRequest, TResponse>.Verbs(String[]) Endpoint<EmptyRequest, TResponse>.Version(Int32, Nullable<Int32>) Endpoint<EmptyRequest, TResponse>.AddError(String, String, Severity) Endpoint<EmptyRequest, TResponse>.AddError(Expression<Func<EmptyRequest, Object>>, String, String, Severity) Endpoint<EmptyRequest, TResponse>.ThrowIfAnyErrors() Endpoint<EmptyRequest, TResponse>.ThrowError(String) Endpoint<EmptyRequest, TResponse>.ThrowError(Expression<Func<EmptyRequest, Object>>, String) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures BaseEndpoint.Configure() BaseEndpoint.Verbs(String[]) BaseEndpoint.Group<TEndpointGroup>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class EndpointWithoutRequest<TResponse> : Endpoint<EmptyRequest, TResponse>, IEndpoint, IEventBus, IServiceResolverBase Type Parameters Name Description TResponse the type of the response dto Methods ExecuteAsync(EmptyRequest, CancellationToken) override the ExecuteAsync(CancellationToken ct) method instead of using this method! Declaration public sealed override Task<TResponse> ExecuteAsync(EmptyRequest _, CancellationToken ct) Parameters Type Name Description EmptyRequest _ System.Threading.CancellationToken ct Returns Type Description System.Threading.Tasks.Task <TResponse> Overrides FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ExecuteAsync(FastEndpoints.EmptyRequest, System.Threading.CancellationToken) ExecuteAsync(CancellationToken) the handler method for the endpoint that returns the response dto. this method is called for each request received. Declaration public virtual Task<TResponse> ExecuteAsync(CancellationToken ct) Parameters Type Name Description System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task <TResponse> HandleAsync(EmptyRequest, CancellationToken) override the HandleAsync(CancellationToken ct) method instead of using this method! Declaration public sealed override Task HandleAsync(EmptyRequest _, CancellationToken ct) Parameters Type Name Description EmptyRequest _ System.Threading.CancellationToken ct Returns Type Description System.Threading.Tasks.Task Overrides FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.HandleAsync(FastEndpoints.EmptyRequest, System.Threading.CancellationToken) HandleAsync(CancellationToken) the handler method for the endpoint. this method is called for each request received. Declaration public virtual Task HandleAsync(CancellationToken ct) Parameters Type Name Description System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task Implements IEndpoint IEventBus IServiceResolverBase"
  },
  "api/FastEndpoints.EndpointWithoutRequest-2.html": {
    "href": "api/FastEndpoints.EndpointWithoutRequest-2.html",
    "title": "Class EndpointWithoutRequest<TResponse, TMapper> | FastEndpoints",
    "keywords": "Class EndpointWithoutRequest<TResponse, TMapper> use this base class for defining endpoints that doesn't need a request dto but return a response dto and uses a response mapper. Inheritance System.Object BaseEndpoint Endpoint < EmptyRequest , TResponse> EndpointWithoutRequest <TResponse> EndpointWithoutRequest<TResponse, TMapper> Implements IEndpoint IEventBus IServiceResolverBase IHasMapper <TMapper> IHasMapper Inherited Members EndpointWithoutRequest<TResponse>.HandleAsync(CancellationToken) EndpointWithoutRequest<TResponse>.HandleAsync(EmptyRequest, CancellationToken) EndpointWithoutRequest<TResponse>.ExecuteAsync(CancellationToken) EndpointWithoutRequest<TResponse>.ExecuteAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.HandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.ExecuteAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.TryResolve<TService>() Endpoint<EmptyRequest, TResponse>.TryResolve(Type) Endpoint<EmptyRequest, TResponse>.Resolve<TService>() Endpoint<EmptyRequest, TResponse>.Resolve(Type) Endpoint<EmptyRequest, TResponse>.CreateScope() Endpoint<EmptyRequest, TResponse>.Route<T>(String, Boolean) Endpoint<EmptyRequest, TResponse>.Query<T>(String, Boolean) Endpoint<EmptyRequest, TResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<EmptyRequest, TResponse>.CreateTokenWith<TService>(String, Action<UserPrivileges>) Endpoint<EmptyRequest, TResponse>.OnBeforeValidate(EmptyRequest) Endpoint<EmptyRequest, TResponse>.OnBeforeValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.OnAfterValidate(EmptyRequest) Endpoint<EmptyRequest, TResponse>.OnAfterValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.OnBeforeHandle(EmptyRequest) Endpoint<EmptyRequest, TResponse>.OnBeforeHandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, TResponse>.OnAfterHandle(EmptyRequest, TResponse) Endpoint<EmptyRequest, TResponse>.OnAfterHandleAsync(EmptyRequest, TResponse, CancellationToken) Endpoint<EmptyRequest, TResponse>.OnValidationFailed() Endpoint<EmptyRequest, TResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.ValidationFailed Endpoint<EmptyRequest, TResponse>.User Endpoint<EmptyRequest, TResponse>.Response Endpoint<EmptyRequest, TResponse>.Config Endpoint<EmptyRequest, TResponse>.Env Endpoint<EmptyRequest, TResponse>.Logger Endpoint<EmptyRequest, TResponse>.BaseURL Endpoint<EmptyRequest, TResponse>.HttpMethod Endpoint<EmptyRequest, TResponse>.Form Endpoint<EmptyRequest, TResponse>.Files Endpoint<EmptyRequest, TResponse>.ResponseStarted Endpoint<EmptyRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendInterceptedAsync(Object, Int32, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendStringAsync(String, Int32, String, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendOkAsync(TResponse, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendOkAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendErrorsAsync(Int32, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendNoContentAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendNotFoundAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendForbiddenAsync(CancellationToken) Endpoint<EmptyRequest, TResponse>.SendRedirectAsync(String, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken) Endpoint<EmptyRequest, TResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<EmptyRequest, TResponse>.AllowAnonymous(Http[]) Endpoint<EmptyRequest, TResponse>.AllowAnonymous(String[]) Endpoint<EmptyRequest, TResponse>.AllowFileUploads(Boolean) Endpoint<EmptyRequest, TResponse>.AllowFormData() Endpoint<EmptyRequest, TResponse>.AuthSchemes(String[]) Endpoint<EmptyRequest, TResponse>.Claims(String[]) Endpoint<EmptyRequest, TResponse>.ClaimsAll(String[]) Endpoint<EmptyRequest, TResponse>.Delete(String[]) Endpoint<EmptyRequest, TResponse>.Delete(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.Description(Action<RouteHandlerBuilder>, Boolean) Endpoint<EmptyRequest, TResponse>.DontAutoTag() Endpoint<EmptyRequest, TResponse>.DontCatchExceptions() Endpoint<EmptyRequest, TResponse>.DontThrowIfValidationFails() Endpoint<EmptyRequest, TResponse>.Get(String[]) Endpoint<EmptyRequest, TResponse>.Get(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.Group<TEndpointGroup>() Endpoint<EmptyRequest, TResponse>.Head(String[]) Endpoint<EmptyRequest, TResponse>.Head(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<EmptyRequest, TResponse>.Patch(String[]) Endpoint<EmptyRequest, TResponse>.Patch(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.Permissions(String[]) Endpoint<EmptyRequest, TResponse>.PermissionsAll(String[]) Endpoint<EmptyRequest, TResponse>.Policies(String[]) Endpoint<EmptyRequest, TResponse>.Post(String[]) Endpoint<EmptyRequest, TResponse>.Post(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.PostProcessors(IPostProcessor<EmptyRequest, TResponse>[]) Endpoint<EmptyRequest, TResponse>.PreProcessors(IPreProcessor<EmptyRequest>[]) Endpoint<EmptyRequest, TResponse>.Put(String[]) Endpoint<EmptyRequest, TResponse>.Put(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, TResponse>.RequestBinder(IRequestBinder<EmptyRequest>) Endpoint<EmptyRequest, TResponse>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) Endpoint<EmptyRequest, TResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<EmptyRequest, TResponse>.Roles(String[]) Endpoint<EmptyRequest, TResponse>.RoutePrefixOverride(String) Endpoint<EmptyRequest, TResponse>.Routes(String[]) Endpoint<EmptyRequest, TResponse>.SerializerContext<TContext>(TContext) Endpoint<EmptyRequest, TResponse>.Summary(Action<EndpointSummary>) Endpoint<EmptyRequest, TResponse>.Summary(Action<EndpointSummary<EmptyRequest>>) Endpoint<EmptyRequest, TResponse>.Summary(EndpointSummary) Endpoint<EmptyRequest, TResponse>.Tags(String[]) Endpoint<EmptyRequest, TResponse>.Throttle(Int32, Double, String) Endpoint<EmptyRequest, TResponse>.Validator<TValidator>() Endpoint<EmptyRequest, TResponse>.Verbs(Http[]) Endpoint<EmptyRequest, TResponse>.Verbs(String[]) Endpoint<EmptyRequest, TResponse>.Version(Int32, Nullable<Int32>) Endpoint<EmptyRequest, TResponse>.AddError(String, String, Severity) Endpoint<EmptyRequest, TResponse>.AddError(Expression<Func<EmptyRequest, Object>>, String, String, Severity) Endpoint<EmptyRequest, TResponse>.ThrowIfAnyErrors() Endpoint<EmptyRequest, TResponse>.ThrowError(String) Endpoint<EmptyRequest, TResponse>.ThrowError(Expression<Func<EmptyRequest, Object>>, String) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures BaseEndpoint.Configure() BaseEndpoint.Verbs(String[]) BaseEndpoint.Group<TEndpointGroup>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class EndpointWithoutRequest<TResponse, TMapper> : EndpointWithoutRequest<TResponse>, IEndpoint, IEventBus, IServiceResolverBase, IHasMapper<TMapper>, IHasMapper where TMapper : IResponseMapper Type Parameters Name Description TResponse the type of the response dto TMapper the type of the entity mapper Properties Map the entity mapper for the endpoint HINT: entity mappers are singletons for performance reasons. do not maintain state in the mappers. Declaration public TMapper Map { get; set; } Property Value Type Description TMapper Implements IEndpoint IEventBus IServiceResolverBase IHasMapper<TMapper> IHasMapper"
  },
  "api/FastEndpoints.EndpointWithoutRequest.html": {
    "href": "api/FastEndpoints.EndpointWithoutRequest.html",
    "title": "Class EndpointWithoutRequest | FastEndpoints",
    "keywords": "Class EndpointWithoutRequest use this base class for defining endpoints that doesn't need a request dto. usually used for routes that doesn't have any parameters. Inheritance System.Object BaseEndpoint Endpoint < EmptyRequest , System.Object > EndpointWithoutRequest Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<EmptyRequest, Object>.HandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, Object>.ExecuteAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, Object>.TryResolve<TService>() Endpoint<EmptyRequest, Object>.TryResolve(Type) Endpoint<EmptyRequest, Object>.Resolve<TService>() Endpoint<EmptyRequest, Object>.Resolve(Type) Endpoint<EmptyRequest, Object>.CreateScope() Endpoint<EmptyRequest, Object>.Route<T>(String, Boolean) Endpoint<EmptyRequest, Object>.Query<T>(String, Boolean) Endpoint<EmptyRequest, Object>.FormFileSectionsAsync(CancellationToken) Endpoint<EmptyRequest, Object>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<EmptyRequest, Object>.CreateTokenWith<TService>(String, Action<UserPrivileges>) Endpoint<EmptyRequest, Object>.OnBeforeValidate(EmptyRequest) Endpoint<EmptyRequest, Object>.OnBeforeValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, Object>.OnAfterValidate(EmptyRequest) Endpoint<EmptyRequest, Object>.OnAfterValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, Object>.OnBeforeHandle(EmptyRequest) Endpoint<EmptyRequest, Object>.OnBeforeHandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, Object>.OnAfterHandle(EmptyRequest, Object) Endpoint<EmptyRequest, Object>.OnAfterHandleAsync(EmptyRequest, Object, CancellationToken) Endpoint<EmptyRequest, Object>.OnValidationFailed() Endpoint<EmptyRequest, Object>.OnValidationFailedAsync(CancellationToken) Endpoint<EmptyRequest, Object>.ValidationFailed Endpoint<EmptyRequest, Object>.User Endpoint<EmptyRequest, Object>.Response Endpoint<EmptyRequest, Object>.Config Endpoint<EmptyRequest, Object>.Env Endpoint<EmptyRequest, Object>.Logger Endpoint<EmptyRequest, Object>.BaseURL Endpoint<EmptyRequest, Object>.HttpMethod Endpoint<EmptyRequest, Object>.Form Endpoint<EmptyRequest, Object>.Files Endpoint<EmptyRequest, Object>.ResponseStarted Endpoint<EmptyRequest, Object>.SendAsync(Object, Int32, CancellationToken) Endpoint<EmptyRequest, Object>.SendInterceptedAsync(Object, Int32, CancellationToken) Endpoint<EmptyRequest, Object>.SendCreatedAtAsync<TEndpoint>(Object, Object, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken) Endpoint<EmptyRequest, Object>.SendCreatedAtAsync(String, Object, Object, Boolean, CancellationToken) Endpoint<EmptyRequest, Object>.SendStringAsync(String, Int32, String, CancellationToken) Endpoint<EmptyRequest, Object>.SendOkAsync(Object, CancellationToken) Endpoint<EmptyRequest, Object>.SendOkAsync(CancellationToken) Endpoint<EmptyRequest, Object>.SendErrorsAsync(Int32, CancellationToken) Endpoint<EmptyRequest, Object>.SendNoContentAsync(CancellationToken) Endpoint<EmptyRequest, Object>.SendNotFoundAsync(CancellationToken) Endpoint<EmptyRequest, Object>.SendUnauthorizedAsync(CancellationToken) Endpoint<EmptyRequest, Object>.SendForbiddenAsync(CancellationToken) Endpoint<EmptyRequest, Object>.SendRedirectAsync(String, Boolean, CancellationToken) Endpoint<EmptyRequest, Object>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken) Endpoint<EmptyRequest, Object>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<EmptyRequest, Object>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<EmptyRequest, Object>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<EmptyRequest, Object>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken) Endpoint<EmptyRequest, Object>.SendEmptyJsonObject(CancellationToken) Endpoint<EmptyRequest, Object>.AllowAnonymous(Http[]) Endpoint<EmptyRequest, Object>.AllowAnonymous(String[]) Endpoint<EmptyRequest, Object>.AllowFileUploads(Boolean) Endpoint<EmptyRequest, Object>.AllowFormData() Endpoint<EmptyRequest, Object>.AuthSchemes(String[]) Endpoint<EmptyRequest, Object>.Claims(String[]) Endpoint<EmptyRequest, Object>.ClaimsAll(String[]) Endpoint<EmptyRequest, Object>.Delete(String[]) Endpoint<EmptyRequest, Object>.Delete(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, Object>.Description(Action<RouteHandlerBuilder>, Boolean) Endpoint<EmptyRequest, Object>.DontAutoTag() Endpoint<EmptyRequest, Object>.DontCatchExceptions() Endpoint<EmptyRequest, Object>.DontThrowIfValidationFails() Endpoint<EmptyRequest, Object>.Get(String[]) Endpoint<EmptyRequest, Object>.Get(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, Object>.Group<TEndpointGroup>() Endpoint<EmptyRequest, Object>.Head(String[]) Endpoint<EmptyRequest, Object>.Head(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, Object>.Options(Action<RouteHandlerBuilder>) Endpoint<EmptyRequest, Object>.Patch(String[]) Endpoint<EmptyRequest, Object>.Patch(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, Object>.Permissions(String[]) Endpoint<EmptyRequest, Object>.PermissionsAll(String[]) Endpoint<EmptyRequest, Object>.Policies(String[]) Endpoint<EmptyRequest, Object>.Post(String[]) Endpoint<EmptyRequest, Object>.Post(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, Object>.PostProcessors(IPostProcessor<EmptyRequest, Object>[]) Endpoint<EmptyRequest, Object>.PreProcessors(IPreProcessor<EmptyRequest>[]) Endpoint<EmptyRequest, Object>.Put(String[]) Endpoint<EmptyRequest, Object>.Put(String, Expression<Func<EmptyRequest, Object>>) Endpoint<EmptyRequest, Object>.RequestBinder(IRequestBinder<EmptyRequest>) Endpoint<EmptyRequest, Object>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) Endpoint<EmptyRequest, Object>.ResponseInterceptor(IResponseInterceptor) Endpoint<EmptyRequest, Object>.Roles(String[]) Endpoint<EmptyRequest, Object>.RoutePrefixOverride(String) Endpoint<EmptyRequest, Object>.Routes(String[]) Endpoint<EmptyRequest, Object>.SerializerContext<TContext>(TContext) Endpoint<EmptyRequest, Object>.Summary(Action<EndpointSummary>) Endpoint<EmptyRequest, Object>.Summary(Action<EndpointSummary<EmptyRequest>>) Endpoint<EmptyRequest, Object>.Summary(EndpointSummary) Endpoint<EmptyRequest, Object>.Tags(String[]) Endpoint<EmptyRequest, Object>.Throttle(Int32, Double, String) Endpoint<EmptyRequest, Object>.Validator<TValidator>() Endpoint<EmptyRequest, Object>.Verbs(Http[]) Endpoint<EmptyRequest, Object>.Verbs(String[]) Endpoint<EmptyRequest, Object>.Version(Int32, Nullable<Int32>) Endpoint<EmptyRequest, Object>.AddError(String, String, Severity) Endpoint<EmptyRequest, Object>.AddError(Expression<Func<EmptyRequest, Object>>, String, String, Severity) Endpoint<EmptyRequest, Object>.ThrowIfAnyErrors() Endpoint<EmptyRequest, Object>.ThrowError(String) Endpoint<EmptyRequest, Object>.ThrowError(Expression<Func<EmptyRequest, Object>>, String) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures BaseEndpoint.Configure() BaseEndpoint.Verbs(String[]) BaseEndpoint.Group<TEndpointGroup>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class EndpointWithoutRequest : Endpoint<EmptyRequest, object>, IEndpoint, IEventBus, IServiceResolverBase Methods ExecuteAsync(EmptyRequest, CancellationToken) override the ExecuteAsync(CancellationToken ct) method instead of using this method! Declaration public sealed override Task<object> ExecuteAsync(EmptyRequest _, CancellationToken ct) Parameters Type Name Description EmptyRequest _ System.Threading.CancellationToken ct Returns Type Description System.Threading.Tasks.Task < System.Object > Overrides FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, System.Object>.ExecuteAsync(FastEndpoints.EmptyRequest, System.Threading.CancellationToken) ExecuteAsync(CancellationToken) the handler method for the endpoint. this method is called for each request received. Declaration public virtual Task<object> ExecuteAsync(CancellationToken ct) Parameters Type Name Description System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task < System.Object > HandleAsync(EmptyRequest, CancellationToken) override the HandleAsync(CancellationToken ct) method instead of using this method! Declaration public sealed override Task HandleAsync(EmptyRequest _, CancellationToken ct) Parameters Type Name Description EmptyRequest _ System.Threading.CancellationToken ct Returns Type Description System.Threading.Tasks.Task Overrides FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, System.Object>.HandleAsync(FastEndpoints.EmptyRequest, System.Threading.CancellationToken) HandleAsync(CancellationToken) the handler method for the endpoint. this method is called for each request received. Declaration public virtual Task HandleAsync(CancellationToken ct) Parameters Type Name Description System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task Implements IEndpoint IEventBus IServiceResolverBase"
  },
  "api/FastEndpoints.EpVersion.html": {
    "href": "api/FastEndpoints.EpVersion.html",
    "title": "Class EpVersion | FastEndpoints",
    "keywords": "Class EpVersion represents an enpoint version Inheritance System.Object EpVersion Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public sealed class EpVersion Properties Current represents an enpoint version Declaration public int Current { get; } Property Value Type Description System.Int32 DeprecatedAt represents an enpoint version Declaration public int DeprecatedAt { get; } Property Value Type Description System.Int32"
  },
  "api/FastEndpoints.ErrorOptions.html": {
    "href": "api/FastEndpoints.ErrorOptions.html",
    "title": "Class ErrorOptions | FastEndpoints",
    "keywords": "Class ErrorOptions error response customization settings Inheritance System.Object ErrorOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class ErrorOptions Properties ResponseBuilder a function for transforming validation errors to an error response dto. set it to any func that returns an object that can be serialized to json. this function will be run everytime an error response needs to be sent to the client. the arguments for the func will be a list of validation failures, the http context and an http status code. Declaration public Func<List<ValidationFailure>, HttpContext, int, object> ResponseBuilder { set; } Property Value Type Description System.Func < System.Collections.Generic.List < FluentValidation.Results.ValidationFailure >, Microsoft.AspNetCore.Http.HttpContext , System.Int32 , System.Object > StatusCode this http status code will be used for all automatically sent validation failure responses. defaults to 400. Declaration public int StatusCode { set; } Property Value Type Description System.Int32"
  },
  "api/FastEndpoints.ErrorResponse.html": {
    "href": "api/FastEndpoints.ErrorResponse.html",
    "title": "Class ErrorResponse | FastEndpoints",
    "keywords": "Class ErrorResponse the dto used to send an error response to the client Inheritance System.Object ErrorResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public sealed class ErrorResponse Constructors ErrorResponse() instantiate a new error response without any errors Declaration public ErrorResponse() ErrorResponse(List<ValidationFailure>, Int32) instantiate an error response with the given collection validation failures Declaration public ErrorResponse(List<ValidationFailure> failures, int statusCode = 400) Parameters Type Name Description System.Collections.Generic.List < FluentValidation.Results.ValidationFailure > failures System.Int32 statusCode Properties Errors the collection of errors for the current context Declaration public Dictionary<string, List<string>> Errors { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Collections.Generic.List < System.String >> Message the message for the error response Declaration public string Message { get; set; } Property Value Type Description System.String StatusCode the http status code sent to the client. default is 400. Declaration public int StatusCode { get; set; } Property Value Type Description System.Int32"
  },
  "api/FastEndpoints.Event-1.html": {
    "href": "api/FastEndpoints.Event-1.html",
    "title": "Class Event<TEvent> | FastEndpoints",
    "keywords": "Class Event<TEvent> event notification bus which uses an in-process pub/sub messaging system Inheritance System.Object EventBase Event<TEvent> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class Event<TEvent> : EventBase Type Parameters Name Description TEvent the type of notification event dto Constructors Event(IEnumerable<IEventHandler<TEvent>>) instantiates an event bus for the given event dto type. Declaration public Event(IEnumerable<IEventHandler<TEvent>> eventHandlers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < IEventHandler <TEvent>> eventHandlers a collection of concrete event handler implementations that should receive notifications from this event bus Methods PublishAsync(TEvent, Mode, CancellationToken) publish the given model/dto to all the subscribers of the event notification Declaration public Task PublishAsync(TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description TEvent eventModel the notification event model/dto to publish Mode waitMode specify whether to wait for none, any or all of the subscribers to complete their work System.Threading.CancellationToken cancellation an optional cancellation token Returns Type Description System.Threading.Tasks.Task a Task that matches the wait mode specified. WaitForNone returns an already completed Task (fire and forget). WaitForAny returns a Task that will complete when any of the subscribers complete their work. WaitForAll return a Task that will complete only when all of the subscribers complete their work."
  },
  "api/FastEndpoints.EventBase.html": {
    "href": "api/FastEndpoints.EventBase.html",
    "title": "Class EventBase | FastEndpoints",
    "keywords": "Class EventBase base class for the event bus Inheritance System.Object EventBase Event<TEvent> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class EventBase"
  },
  "api/FastEndpoints.EventExtensions.html": {
    "href": "api/FastEndpoints.EventExtensions.html",
    "title": "Class EventExtensions | FastEndpoints",
    "keywords": "Class EventExtensions Inheritance System.Object EventExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class EventExtensions Methods PublishAsync<TEvent>(TEvent, Mode, CancellationToken) publish the event to all subscribers registered to handle this type of event. Declaration public static Task PublishAsync<TEvent>(this TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default(CancellationToken)) where TEvent : IEvent Parameters Type Name Description TEvent eventModel the notification event model/dto to publish Mode waitMode specify whether to wait for none, any or all of the subscribers to complete their work System.Threading.CancellationToken cancellation an optional cancellation token Returns Type Description System.Threading.Tasks.Task a Task that matches the wait mode specified. WaitForNone returns an already completed Task (fire and forget). WaitForAny returns a Task that will complete when any of the subscribers complete their work. WaitForAll return a Task that will complete only when all of the subscribers complete their work. Type Parameters Name Description TEvent the type of the event model"
  },
  "api/FastEndpoints.ExceptionHandlerExtensions.html": {
    "href": "api/FastEndpoints.ExceptionHandlerExtensions.html",
    "title": "Class ExceptionHandlerExtensions | FastEndpoints",
    "keywords": "Class ExceptionHandlerExtensions extensions for global exception handling Inheritance System.Object ExceptionHandlerExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class ExceptionHandlerExtensions Methods UseDefaultExceptionHandler(IApplicationBuilder, ILogger, Boolean) registers the default global exception handler which will log the exceptions on the server and return a user-friendly json response to the client when unhandled exceptions occur. TIP: when using this exception handler, you may want to turn off the asp.net core exception middleware logging to avoid duplication like so: \"Logging\": { \"LogLevel\": { \"Default\": \"Warning\", \"Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware\": \"None\" } } Declaration public static IApplicationBuilder UseDefaultExceptionHandler(this IApplicationBuilder app, ILogger logger = null, bool logStructuredException = false) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Microsoft.Extensions.Logging.ILogger logger an optional logger instance System.Boolean logStructuredException set to true if you'd like to log the error in a structured manner Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder"
  },
  "api/FastEndpoints.Factory.html": {
    "href": "api/FastEndpoints.Factory.html",
    "title": "Class Factory | FastEndpoints",
    "keywords": "Class Factory a factory for instantiaing endpoints for testing purposes Inheritance System.Object Factory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class Factory Methods Create<TEndpoint>(DefaultHttpContext, Object[]) get an instance of an endpoint suitable for unit testing Declaration public static TEndpoint Create<TEndpoint>(DefaultHttpContext httpContext, params object[] dependencies) where TEndpoint : class, IEndpoint Parameters Type Name Description Microsoft.AspNetCore.Http.DefaultHttpContext httpContext a default http context object System.Object [] dependencies the dependencies of the endpoint if it has injected dependencies Returns Type Description TEndpoint Type Parameters Name Description TEndpoint the type of the endpoint to create an instance of Create<TEndpoint>(Action<DefaultHttpContext>, Object[]) get an instance of an endpoint suitable for unit testing Declaration public static TEndpoint Create<TEndpoint>(Action<DefaultHttpContext> httpContext, params object[] dependencies) where TEndpoint : class, IEndpoint Parameters Type Name Description System.Action < Microsoft.AspNetCore.Http.DefaultHttpContext > httpContext an action for configuring the default http context object System.Object [] dependencies the dependencies of the endpoint if it has any constructor injected arguments Returns Type Description TEndpoint Type Parameters Name Description TEndpoint the type of the endpoint to create an instance of Create<TEndpoint>(Object[]) get an instance of an endpoint suitable for unit testing Declaration public static TEndpoint Create<TEndpoint>(params object[] dependencies) where TEndpoint : class, IEndpoint Parameters Type Name Description System.Object [] dependencies the dependencies of the endpoint if it has any constructor injected arguments Returns Type Description TEndpoint Type Parameters Name Description TEndpoint the type of the endpoint to create an instance of"
  },
  "api/FastEndpoints.FromAttribute.html": {
    "href": "api/FastEndpoints.FromAttribute.html",
    "title": "Class FromAttribute | FastEndpoints",
    "keywords": "Class FromAttribute properties decorated with this attribute will have their values auto bound from the relevant claim of the current user principal. this is a shorter alias for the [FromClaim] attribute. Inheritance System.Object System.Attribute FromClaimAttribute FromAttribute Inherited Members FromClaimAttribute.ClaimType FromClaimAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class FromAttribute : FromClaimAttribute Constructors FromAttribute(String, Boolean) properties decorated with this attribute will have their values auto bound from the relevant claim of the current user principal. this is a shorter alias for the [FromClaim] attribute. Declaration public FromAttribute(string claimType, bool isRequired = true) Parameters Type Name Description System.String claimType the claim type to auto bind System.Boolean isRequired set to true if a validation error should be thrown when the current user principal doesn't have the specified claim"
  },
  "api/FastEndpoints.FromBodyAttribute.html": {
    "href": "api/FastEndpoints.FromBodyAttribute.html",
    "title": "Class FromBodyAttribute | FastEndpoints",
    "keywords": "Class FromBodyAttribute properties decorated with this attribute will have their values auto bound from the incoming request's json body. HINT: no other binding sources will be used for binding that property. Inheritance System.Object System.Attribute FromBodyAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class FromBodyAttribute : Attribute"
  },
  "api/FastEndpoints.FromClaimAttribute.html": {
    "href": "api/FastEndpoints.FromClaimAttribute.html",
    "title": "Class FromClaimAttribute | FastEndpoints",
    "keywords": "Class FromClaimAttribute properties decorated with this attribute will have their values auto bound from the relevant claim of the current user principal Inheritance System.Object System.Attribute FromClaimAttribute FromAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class FromClaimAttribute : Attribute Constructors FromClaimAttribute(Boolean) properties decorated with this attribute will have their values auto bound from the relevant claim of the current user principal Declaration public FromClaimAttribute(bool isRequired) Parameters Type Name Description System.Boolean isRequired set to false if a validation error shouldn't be thrown when the current user principal doesn't have a claim type matching the property name being bound to. FromClaimAttribute(String, Boolean) properties decorated with this attribute will have their values auto bound from the relevant claim of the current user principal Declaration public FromClaimAttribute(string claimType = null, bool isRequired = true) Parameters Type Name Description System.String claimType optionally specify the claim type to bind from. if not specified, the claim type of the user principal must match the name of the property being bound to. System.Boolean isRequired set to false if a validation error shouldn't be thrown when the current user principal doesn't have the specified claim type Properties ClaimType the claim type to auto bind Declaration public string ClaimType { get; set; } Property Value Type Description System.String IsRequired set to true if a validation error should be thrown when the current user principal doesn't have the specified claim Declaration public bool IsRequired { get; set; } Property Value Type Description System.Boolean"
  },
  "api/FastEndpoints.FromHeaderAttribute.html": {
    "href": "api/FastEndpoints.FromHeaderAttribute.html",
    "title": "Class FromHeaderAttribute | FastEndpoints",
    "keywords": "Class FromHeaderAttribute properties decorated with this attribute will have their values auto bound from the relevant http header of the current request. Inheritance System.Object System.Attribute FromHeaderAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class FromHeaderAttribute : Attribute Constructors FromHeaderAttribute(Boolean) properties decorated with this attribute will have their values auto bound from the relevant http header of the current request. Declaration public FromHeaderAttribute(bool isRequired) Parameters Type Name Description System.Boolean isRequired set to false if a validation error shouldn't be thrown when the current user request doesn't have a header matching the property name being bound to. FromHeaderAttribute(String, Boolean) properties decorated with this attribute will have their values auto bound from the relevant http header of the current request. Declaration public FromHeaderAttribute(string headerName = null, bool isRequired = true) Parameters Type Name Description System.String headerName optionally specify the header name to bind from. if not specified, the header name must match the name of the property being bound to. System.Boolean isRequired set to false if a validation error shouldn't be thrown when the current request doesn't have the specified header. Properties HeaderName the header name to auto bind from Declaration public string HeaderName { get; set; } Property Value Type Description System.String IsRequired set to true if a validation error should be thrown when the current request doesn't have the specified header Declaration public bool IsRequired { get; set; } Property Value Type Description System.Boolean"
  },
  "api/FastEndpoints.FromQueryParamsAttribute.html": {
    "href": "api/FastEndpoints.FromQueryParamsAttribute.html",
    "title": "Class FromQueryParamsAttribute | FastEndpoints",
    "keywords": "Class FromQueryParamsAttribute properties decorated with this attribute will be bound by obtaining the values from query string parameters with matching names. WARNING: valid only on complex types with at least one public property. only one dto property can be decorated with this attribute. Inheritance System.Object System.Attribute QueryParamAttribute FromQueryParamsAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)] public class FromQueryParamsAttribute : QueryParamAttribute"
  },
  "api/FastEndpoints.Generator.EndpointsDiscoveryGenerator.html": {
    "href": "api/FastEndpoints.Generator.EndpointsDiscoveryGenerator.html",
    "title": "Class EndpointsDiscoveryGenerator | FastEndpoints",
    "keywords": "Class EndpointsDiscoveryGenerator Inheritance System.Object EndpointsDiscoveryGenerator Implements Microsoft.CodeAnalysis.ISourceGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Generator Assembly : FastEndpoints.Generator.dll Syntax [Generator] public class EndpointsDiscoveryGenerator : ISourceGenerator Methods Execute(GeneratorExecutionContext) Declaration public void Execute(GeneratorExecutionContext ctx) Parameters Type Name Description Microsoft.CodeAnalysis.GeneratorExecutionContext ctx Initialize(GeneratorInitializationContext) Declaration public void Initialize(GeneratorInitializationContext context) Parameters Type Name Description Microsoft.CodeAnalysis.GeneratorInitializationContext context Implements Microsoft.CodeAnalysis.ISourceGenerator"
  },
  "api/FastEndpoints.Generator.html": {
    "href": "api/FastEndpoints.Generator.html",
    "title": "Namespace FastEndpoints.Generator | FastEndpoints",
    "keywords": "Namespace FastEndpoints.Generator Classes EndpointsDiscoveryGenerator"
  },
  "api/FastEndpoints.Group.html": {
    "href": "api/FastEndpoints.Group.html",
    "title": "Class Group | FastEndpoints",
    "keywords": "Class Group common configuration for a group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. Inheritance System.Object Group SubGroup<TParent> Implements IServiceResolverBase Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class Group : IServiceResolverBase Methods Configure(String, Action<EndpointDefinition>) call this method in the constructor in order to configure the endpoint group. Declaration protected virtual void Configure(string routePrefix, Action<EndpointDefinition> ep) Parameters Type Name Description System.String routePrefix the route prefix for the group System.Action < EndpointDefinition > ep the configuration action to be performed on the EndpointDefinition CreateScope() common configuration for a group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. Declaration public IServiceScope CreateScope() Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceScope Resolve(Type) common configuration for a group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. Declaration public object Resolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object Resolve<TService>() common configuration for a group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. Declaration public TService Resolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService TryResolve(Type) common configuration for a group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. Declaration public object TryResolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object TryResolve<TService>() common configuration for a group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. Declaration public TService TryResolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService Implements IServiceResolverBase"
  },
  "api/FastEndpoints.HasPermissionAttribute.html": {
    "href": "api/FastEndpoints.HasPermissionAttribute.html",
    "title": "Class HasPermissionAttribute | FastEndpoints",
    "keywords": "Class HasPermissionAttribute boolean properties decorated with this attribute will have their values set to true if the current principal has the specified permission. Inheritance System.Object System.Attribute HasPermissionAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class HasPermissionAttribute : Attribute Constructors HasPermissionAttribute(String, Boolean) boolean properties decorated with this attribute will have their values set to true if the current principal has the specified permission. Declaration public HasPermissionAttribute(string permission, bool isRequired = true) Parameters Type Name Description System.String permission the permission to check for System.Boolean isRequired set to false if a validation error shouldn't be thrown when the current principal doesn't have the specified permission. Properties IsRequired set to true if a validation error should be thrown when the current user principal doesn't have the specified permission Declaration public bool IsRequired { get; set; } Property Value Type Description System.Boolean Permission the permission to check for Declaration public string Permission { get; set; } Property Value Type Description System.String"
  },
  "api/FastEndpoints.HideFromDocsAttribute.html": {
    "href": "api/FastEndpoints.HideFromDocsAttribute.html",
    "title": "Class HideFromDocsAttribute | FastEndpoints",
    "keywords": "Class HideFromDocsAttribute attribute used to mark classes that should be hidden from public api Inheritance System.Object System.Attribute HideFromDocsAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.All, AllowMultiple = false)] public class HideFromDocsAttribute : Attribute"
  },
  "api/FastEndpoints.html": {
    "href": "api/FastEndpoints.html",
    "title": "Namespace FastEndpoints | FastEndpoints",
    "keywords": "Namespace FastEndpoints Classes BaseEndpoint the base class all fast endpoints inherit from BindFromAttribute use this attribute to specify the name of route param, query param, or form field if it's different from the name of the property being bound to. BindingOptions request binding options CommandExtensions Config global configuration settings for FastEndpoints DontInjectAttribute endpoint properties marked with this attribute will disable property injection for that property Endpoint<TRequest> use this base class for defining endpoints that only use a request dto and don't use a response dto. Endpoint<TRequest, TResponse> use this base class for defining endpoints that use both request and response dtos. Endpoint<TRequest, TResponse, TMapper> use this base class for defining endpoints that use both request and response dtos as well as require mapping to and from a domain entity using a seperate entity mapper. EndpointDefinition represents the configuration settings of an endpoint EndpointDiscoveryOptions defines how endpoint discovery and registration should be done at startup EndpointFactory the default endpoint factory. it creates an instance of the endpoint and injects both constructor and property dependencies. EndpointOptions endpoint registration options EndpointSummary a class used for providing a textual description about an endpoint for swagger EndpointSummary<TRequest> EndpointWithMapper<TRequest, TMapper> use this base class for defining endpoints that only use a request dto and don't use a response dto but uses a request mapper. EndpointWithMapping<TRequest, TResponse, TEntity> use this base class for defining endpoints that use both request and response dtos as well as require mapping to and from a domain entity. EndpointWithoutRequest use this base class for defining endpoints that doesn't need a request dto. usually used for routes that doesn't have any parameters. EndpointWithoutRequest<TResponse> use this base class for defining endpoints that doesn't need a request dto but return a response dto. EndpointWithoutRequest<TResponse, TMapper> use this base class for defining endpoints that doesn't need a request dto but return a response dto and uses a response mapper. EpVersion represents an enpoint version ErrorOptions error response customization settings ErrorResponse the dto used to send an error response to the client Event<TEvent> event notification bus which uses an in-process pub/sub messaging system EventBase base class for the event bus EventExtensions ExceptionHandlerExtensions extensions for global exception handling Factory a factory for instantiaing endpoints for testing purposes FromAttribute properties decorated with this attribute will have their values auto bound from the relevant claim of the current user principal. this is a shorter alias for the [FromClaim] attribute. FromBodyAttribute properties decorated with this attribute will have their values auto bound from the incoming request's json body. HINT: no other binding sources will be used for binding that property. FromClaimAttribute properties decorated with this attribute will have their values auto bound from the relevant claim of the current user principal FromHeaderAttribute properties decorated with this attribute will have their values auto bound from the relevant http header of the current request. FromQueryParamsAttribute properties decorated with this attribute will be bound by obtaining the values from query string parameters with matching names. WARNING: valid only on complex types with at least one public property. only one dto property can be decorated with this attribute. Group common configuration for a group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. HasPermissionAttribute boolean properties decorated with this attribute will have their values set to true if the current principal has the specified permission. HideFromDocsAttribute attribute used to mark classes that should be hidden from public api HttpAttribute base http attribute class HttpClientExtensions a set of extensions to the httpclient in order to facilitate route-less integration testing HttpContextExtensions HttpDeleteAttribute use this attribute to specify a DELETE route for an endpoint HttpGetAttribute use this attribute to specify a GET route for an endpoint HttpPatchAttribute use this attribute to specify a PATCH route for an endpoint HttpPostAttribute use this attribute to specify a POST route for an endpoint HttpPutAttribute use this attribute to specify a PUT route for an endpoint HttpResponseExtensions InternalErrorResponse the dto used to send an error response to the client when an unhandled exception occurs on the server MainExtensions provides extensions to easily bootstrap fastendpoints in the asp.net middleware pipeline Mapper<TRequest, TResponse, TEntity> use this base class to define domain entity mappers for your endpoints. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. PlainTextRequest use this dto if you need to model bind the raw content body of an incoming http request or you may implement the IPlainTextRequest interface on your own request dto. QueryParamAttribute properties decorated with this attribute will have a corresponding request parameter added to the swagger schema RequestBinder<TRequest> the default request binder for a given request dto type RequestMapper<TRequest, TEntity> use this base class to define a domain entity mapper for your endpoints that only has a request dto and no response dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. ResponseMapper<TResponse, TEntity> use this base class to define a domain entity mapper for your endpoints that only has a response dto and no request dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. RouteHandlerBuilderExtensions SecurityOptions global security options SerializerOptions serialization options for the endpoints ServiceScopeExtensions SubGroup<TParent> common configuration for a sub group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. Summary<TEndpoint> Summary<TEndpoint, TRequest> ThrottleAttribute rate limit requests to this endpoint based on a request http header sent by the client. ThrottleOptions global settings for throttling UserPrivileges the priviledges of the user which will be embedded in the jwt ValidationFailureException the exception thrown when validation failure occurs. inspect the Failures property for details. Validator<TRequest> inherit from this base class to define your dto validators HINT: validators are registered as singletons. i.e. the same validator instance is used to validate each request for best performance. hance, do not maintain state in your validators. VersioningOptions global endpoint versioning options Structs BinderContext binder context supplied to custom request binders. EmptyRequest a request dto that doesn't have any properties EmptyResponse a response dto that doesn't have any properties ParseResult dto used to hold the result of a value parsing operation Interfaces ICommand interface for a command that does not return anything ICommand<TResult> interface for a command that returns a result ICommandHandler marker interface for all command handlers ICommandHandler<TCommand> interface to be implemented by a command handler for a given command type that does not return a result ICommandHandler<TCommand, TResult> interface to be implemented by a command handler for a given command type that returns a result IEndpoint the common interface implemented by all endpoints IEndpointFactory interface for the creation of endpoints. IEvent marker interface for an event model IEventBus interface to be implemented by an event bus IEventHandler marker interface for all event handlers IEventHandler<TEvent> interface to be implemented by event handlers IGlobalPostProcessor interface for defining global post-processors to be executed after the main endpoint handler is done IGlobalPreProcessor interface for defining global pre-processors to be executed before the main endpoint handler is called IHasMapper marker interface for endpoints that has a mapper IHasMapper<TMapper> marker/constraint for endpoints that have a mapper generic argument IMapper marker interface for entity mappers IPlainTextRequest implement this interface on your request dto if you need to model bind the raw content body of an incoming http request IPostProcessor<TRequest, TResponse> interface for defining post-processors to be executed after the main endpoint handler is done IPreProcessor<TRequest> interface for defining pre-processors to be executed before the main endpoint handler is called IRequestBinder<TRequest> create custom request binders by implementing this interface. by registering a custom modelbinder for an endpoint will completely disable the built-in model binding and completely depend on your implementation of the custom binder to return a correctly populated request dto for the endpoint. IRequestMapper marker interface for request only mappers IResponseInterceptor interface for defining a response interceptor to be executed before the main endpoint handler executes IResponseMapper marker interface for response only mappers IServiceResolver interface used by fastendpoints for resolving services from the DI container. implement this interface and register the implementation in MS DI for customizing service resolving. IServiceResolverBase interface used by fastendpoints for resolving services from the DI container. implement this interface and register the implementation in MS DI for customizing service resolving. Enums BindingSource enum for choosing which binding sources the default request binder should use Http enum for specifying a http verb Mode enum for specifying the waiting mode for event notifications Order enum used to specify whether to execute global pre/post processors before endpoint level processors"
  },
  "api/FastEndpoints.Http.html": {
    "href": "api/FastEndpoints.Http.html",
    "title": "Enum Http | FastEndpoints",
    "keywords": "Enum Http enum for specifying a http verb Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax public enum Http Fields Name Description DELETE remove a record GET retrieve a record HEAD retrieve only headers PATCH partially update a record POST create a record PUT replace a record"
  },
  "api/FastEndpoints.HttpAttribute.html": {
    "href": "api/FastEndpoints.HttpAttribute.html",
    "title": "Class HttpAttribute | FastEndpoints",
    "keywords": "Class HttpAttribute base http attribute class Inheritance System.Object System.Attribute HttpAttribute HttpDeleteAttribute HttpGetAttribute HttpPatchAttribute HttpPostAttribute HttpPutAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = true, AllowMultiple = false)] public abstract class HttpAttribute : Attribute Constructors HttpAttribute(Http, String) constructor Declaration protected HttpAttribute(Http verb, string route) Parameters Type Name Description Http verb verb System.String route route HttpAttribute(Http, String[]) constructor Declaration protected HttpAttribute(Http verb, params string[] routes) Parameters Type Name Description Http verb verb System.String [] routes routes"
  },
  "api/FastEndpoints.HttpClientExtensions.html": {
    "href": "api/FastEndpoints.HttpClientExtensions.html",
    "title": "Class HttpClientExtensions | FastEndpoints",
    "keywords": "Class HttpClientExtensions a set of extensions to the httpclient in order to facilitate route-less integration testing Inheritance System.Object HttpClientExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class HttpClientExtensions Methods DELETEAsync<TEndpoint, TRequest>(HttpClient, TRequest) make a DELETE request to an endpoint using auto route discovery using a request dto that does not send back a response dto. Declaration public static async Task<HttpResponseMessage> DELETEAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.Net.Http.HttpResponseMessage > Type Parameters Name Description TEndpoint the type of the endpoint TRequest the type of the request dto DELETEAsync<TRequest, TResponse>(HttpClient, String, TRequest) make a DELETE request using a request dto and get back a response dto. Declaration public static async Task<(HttpResponseMessage response, TResponse result)> DELETEAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request) Parameters Type Name Description System.Net.Http.HttpClient client System.String requestUri the route url to post to TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TRequest type of the requet dto TResponse type of the response dto Exceptions Type Condition System.InvalidOperationException thrown when the response body cannot be deserialized in to specified response dto type DELETEAsync<TEndpoint, TResponse>(HttpClient) make a DELETE request to an endpoint using auto route discovery without a request dto and get back a typed response dto. Declaration public static Task<(HttpResponseMessage response, TResponse result)> DELETEAsync<TEndpoint, TResponse>(this HttpClient client) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TEndpoint the type of the endpoint TResponse the type of the response dto DELETEAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest) make a DELETE request to an endpoint using auto route discovery using a request dto and get back a response dto. Declaration public static Task<(HttpResponseMessage response, TResponse result)> DELETEAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TEndpoint the type of the endpoint TRequest the type of the request dto TResponse the type of the response dto GETAsync<TEndpoint, TRequest>(HttpClient, TRequest) make a GET request to an endpoint using auto route discovery using a request dto that does not send back a response dto. Declaration public static async Task<HttpResponseMessage> GETAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.Net.Http.HttpResponseMessage > Type Parameters Name Description TEndpoint the type of the endpoint TRequest the type of the request dto GETAsync<TRequest, TResponse>(HttpClient, String, TRequest) make a GET request using a request dto and get back a response dto. Declaration public static async Task<(HttpResponseMessage response, TResponse result)> GETAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request) Parameters Type Name Description System.Net.Http.HttpClient client System.String requestUri the route url to post to TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TRequest type of the requet dto TResponse type of the response dto Exceptions Type Condition System.InvalidOperationException thrown when the response body cannot be deserialized in to specified response dto type GETAsync<TEndpoint, TResponse>(HttpClient) make a GET request to an endpoint using auto route discovery without a request dto and get back a typed response dto. Declaration public static Task<(HttpResponseMessage response, TResponse result)> GETAsync<TEndpoint, TResponse>(this HttpClient client) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TEndpoint the type of the endpoint TResponse the type of the response dto GETAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest) make a GET request to an endpoint using auto route discovery using a request dto and get back a response dto. Declaration public static Task<(HttpResponseMessage response, TResponse result)> GETAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TEndpoint the type of the endpoint TRequest the type of the request dto TResponse the type of the response dto POSTAsync<TEndpoint, TRequest>(HttpClient, TRequest) make a POST request to an endpoint using auto route discovery using a request dto that does not send back a response dto. Declaration public static async Task<HttpResponseMessage> POSTAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.Net.Http.HttpResponseMessage > Type Parameters Name Description TEndpoint the type of the endpoint TRequest the type of the request dto POSTAsync<TRequest, TResponse>(HttpClient, String, TRequest) make a POST request using a request dto and get back a response dto. Declaration public static async Task<(HttpResponseMessage response, TResponse result)> POSTAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request) Parameters Type Name Description System.Net.Http.HttpClient client System.String requestUri the route url to post to TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TRequest type of the requet dto TResponse type of the response dto Exceptions Type Condition System.InvalidOperationException thrown when the response body cannot be deserialized in to specified response dto type POSTAsync<TEndpoint, TResponse>(HttpClient) make a POST request to an endpoint using auto route discovery without a request dto and get back a typed response dto. Declaration public static Task<(HttpResponseMessage response, TResponse result)> POSTAsync<TEndpoint, TResponse>(this HttpClient client) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TEndpoint the type of the endpoint TResponse the type of the response dto POSTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest) make a POST request to an endpoint using auto route discovery using a request dto and get back a response dto. Declaration public static Task<(HttpResponseMessage response, TResponse result)> POSTAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TEndpoint the type of the endpoint TRequest the type of the request dto TResponse the type of the response dto PUTAsync<TEndpoint, TRequest>(HttpClient, TRequest) make a PUT request to an endpoint using auto route discovery using a request dto that does not send back a response dto. Declaration public static async Task<HttpResponseMessage> PUTAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.Net.Http.HttpResponseMessage > Type Parameters Name Description TEndpoint the type of the endpoint TRequest the type of the request dto PUTAsync<TRequest, TResponse>(HttpClient, String, TRequest) make a PUT request using a request dto and get back a response dto. Declaration public static async Task<(HttpResponseMessage response, TResponse result)> PUTAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request) Parameters Type Name Description System.Net.Http.HttpClient client System.String requestUri the route url to post to TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TRequest type of the requet dto TResponse type of the response dto Exceptions Type Condition System.InvalidOperationException thrown when the response body cannot be deserialized in to specified response dto type PUTAsync<TEndpoint, TResponse>(HttpClient) make a PUT request to an endpoint using auto route discovery without a request dto and get back a typed response dto. Declaration public static Task<(HttpResponseMessage response, TResponse result)> PUTAsync<TEndpoint, TResponse>(this HttpClient client) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TEndpoint the type of the endpoint TResponse the type of the response dto PUTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest) make a PUT request to an endpoint using auto route discovery using a request dto and get back a response dto. Declaration public static Task<(HttpResponseMessage response, TResponse result)> PUTAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint Parameters Type Name Description System.Net.Http.HttpClient client TRequest request the request dto Returns Type Description System.Threading.Tasks.Task < System.ValueTuple < System.Net.Http.HttpResponseMessage , TResponse>> Type Parameters Name Description TEndpoint the type of the endpoint TRequest the type of the request dto TResponse the type of the response dto"
  },
  "api/FastEndpoints.HttpContextExtensions.html": {
    "href": "api/FastEndpoints.HttpContextExtensions.html",
    "title": "Class HttpContextExtensions | FastEndpoints",
    "keywords": "Class HttpContextExtensions Inheritance System.Object HttpContextExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class HttpContextExtensions Methods MarkResponseStart(HttpContext) marks the current response as started so that ResponseStarted(HttpContext) can return the correct result. Declaration public static void MarkResponseStart(this HttpContext ctx) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext ctx Resolve(HttpContext, Type) resolve an instance for the given type from the dependency injection container. will throw if unresolvable. Declaration public static object Resolve(this HttpContext _, Type typeOfService) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext _ System.Type typeOfService the type of the service to resolve Returns Type Description System.Object Exceptions Type Condition System.InvalidOperationException Thrown if requested service cannot be resolved Resolve<TService>(HttpContext) resolve an instance for the given type from the dependency injection container. will throw if unresolvable. Declaration public static TService Resolve<TService>(this HttpContext _) where TService : class Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext _ Returns Type Description TService Type Parameters Name Description TService the type of the service to resolve Exceptions Type Condition System.InvalidOperationException Thrown if requested service cannot be resolved ResponseStarted(HttpContext) check if the current response has already started or not. Declaration public static bool ResponseStarted(this HttpContext ctx) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext ctx Returns Type Description System.Boolean TryResolve(HttpContext, Type) try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable. Declaration public static object TryResolve(this HttpContext _, Type typeOfService) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext _ System.Type typeOfService the type of the service to resolve Returns Type Description System.Object TryResolve<TService>(HttpContext) try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable. Declaration public static TService TryResolve<TService>(this HttpContext _) where TService : class Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext _ Returns Type Description TService Type Parameters Name Description TService the type of the service to resolve"
  },
  "api/FastEndpoints.HttpDeleteAttribute.html": {
    "href": "api/FastEndpoints.HttpDeleteAttribute.html",
    "title": "Class HttpDeleteAttribute | FastEndpoints",
    "keywords": "Class HttpDeleteAttribute use this attribute to specify a DELETE route for an endpoint Inheritance System.Object System.Attribute HttpAttribute HttpDeleteAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class HttpDeleteAttribute : HttpAttribute Constructors HttpDeleteAttribute(String[]) use this attribute to specify a DELETE route for an endpoint Declaration public HttpDeleteAttribute(params string[] routes) Parameters Type Name Description System.String [] routes the routes for the endpoint"
  },
  "api/FastEndpoints.HttpGetAttribute.html": {
    "href": "api/FastEndpoints.HttpGetAttribute.html",
    "title": "Class HttpGetAttribute | FastEndpoints",
    "keywords": "Class HttpGetAttribute use this attribute to specify a GET route for an endpoint Inheritance System.Object System.Attribute HttpAttribute HttpGetAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class HttpGetAttribute : HttpAttribute Constructors HttpGetAttribute(String[]) use this attribute to specify a GET route for an endpoint Declaration public HttpGetAttribute(params string[] routes) Parameters Type Name Description System.String [] routes the routes for the endpoint"
  },
  "api/FastEndpoints.HttpPatchAttribute.html": {
    "href": "api/FastEndpoints.HttpPatchAttribute.html",
    "title": "Class HttpPatchAttribute | FastEndpoints",
    "keywords": "Class HttpPatchAttribute use this attribute to specify a PATCH route for an endpoint Inheritance System.Object System.Attribute HttpAttribute HttpPatchAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class HttpPatchAttribute : HttpAttribute Constructors HttpPatchAttribute(String[]) use this attribute to specify a PATCH route for an endpoint Declaration public HttpPatchAttribute(params string[] routes) Parameters Type Name Description System.String [] routes the routes for the endpoint"
  },
  "api/FastEndpoints.HttpPostAttribute.html": {
    "href": "api/FastEndpoints.HttpPostAttribute.html",
    "title": "Class HttpPostAttribute | FastEndpoints",
    "keywords": "Class HttpPostAttribute use this attribute to specify a POST route for an endpoint Inheritance System.Object System.Attribute HttpAttribute HttpPostAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class HttpPostAttribute : HttpAttribute Constructors HttpPostAttribute(String[]) use this attribute to specify a POST route for an endpoint Declaration public HttpPostAttribute(params string[] routes) Parameters Type Name Description System.String [] routes the routes for the endpoint"
  },
  "api/FastEndpoints.HttpPutAttribute.html": {
    "href": "api/FastEndpoints.HttpPutAttribute.html",
    "title": "Class HttpPutAttribute | FastEndpoints",
    "keywords": "Class HttpPutAttribute use this attribute to specify a PUT route for an endpoint Inheritance System.Object System.Attribute HttpAttribute HttpPutAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class HttpPutAttribute : HttpAttribute Constructors HttpPutAttribute(String[]) use this attribute to specify a PUT route for an endpoint Declaration public HttpPutAttribute(params string[] routes) Parameters Type Name Description System.String [] routes the routes for the endpoint"
  },
  "api/FastEndpoints.HttpResponseExtensions.html": {
    "href": "api/FastEndpoints.HttpResponseExtensions.html",
    "title": "Class HttpResponseExtensions | FastEndpoints",
    "keywords": "Class HttpResponseExtensions Inheritance System.Object HttpResponseExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class HttpResponseExtensions Methods SendAsync<TResponse>(HttpResponse, TResponse, Int32, JsonSerializerContext, CancellationToken) send the supplied response dto serialized as json to the client. Declaration public static Task SendAsync<TResponse>(this HttpResponse rsp, TResponse response, int statusCode = 200, JsonSerializerContext jsonSerializerContext = null, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp TResponse response the object to serialize to json System.Int32 statusCode optional custom http status code System.Text.Json.Serialization.JsonSerializerContext jsonSerializerContext json serializer context if code generation is used System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TResponse SendBytesAsync(HttpResponse, Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) send a byte array to the client Declaration public static async Task SendBytesAsync(this HttpResponse rsp, byte[] bytes, string fileName = null, string contentType = \"application/octet-stream\", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Byte [] bytes the bytes to send System.String fileName System.String contentType optional content type to set on the http response System.Nullable < System.DateTimeOffset > lastModified optional last modified date-time-offset for the data stream System.Boolean enableRangeProcessing optional switch for enabling range processing System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendCreatedAtAsync(HttpResponse, String, Object, Object, JsonSerializerContext, Boolean, CancellationToken) send a 201 created response with a location header containing where the resource can be retrieved from. WARNING: this method is only supported on single verb/route endpoints. it will not produce a `Location` header if used in a multi verb or multi route endpoint. Declaration public static Task SendCreatedAtAsync(this HttpResponse rsp, string endpointName, object routeValues, object responseBody, JsonSerializerContext jsonSerializerContext = null, bool generateAbsoluteUrl = false, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.String endpointName the name of the endpoint to use for link generation (openapi route id) System.Object routeValues a route values object with key/value pairs of route information System.Object responseBody the content to be serialized in the response body System.Text.Json.Serialization.JsonSerializerContext jsonSerializerContext json serializer context if code generation is used System.Boolean generateAbsoluteUrl set to true for generating a absolute url instead of relative url for the location header System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendCreatedAtAsync<TEndpoint>(HttpResponse, Object, Object, Nullable<Http>, Nullable<Int32>, JsonSerializerContext, Boolean, CancellationToken) send a 201 created response with a location header containing where the resource can be retrieved from. HINT: if pointing to an endpoint with multiple verbs, make sure to specify the 'verb' argument and if pointing to a multi route endpoint, specify the 'routeNumber' argument. WARNING: this overload will not add a location header if you've set a custom endpoint name using .WithName() method. use the other overload that accepts a string endpoint name instead. Declaration public static Task SendCreatedAtAsync<TEndpoint>(this HttpResponse rsp, object routeValues, object responseBody, Http? verb = null, int? routeNumber = null, JsonSerializerContext jsonSerializerContext = null, bool generateAbsoluteUrl = false, CancellationToken cancellation = default(CancellationToken)) where TEndpoint : IEndpoint Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Object routeValues a route values object with key/value pairs of route information System.Object responseBody the content to be serialized in the response body System.Nullable < Http > verb only useful when pointing to a multi verb endpoint System.Nullable < System.Int32 > routeNumber only useful when pointing to a multi route endpoint System.Text.Json.Serialization.JsonSerializerContext jsonSerializerContext json serializer context if code generation is used System.Boolean generateAbsoluteUrl set to true for generating a absolute url instead of relative url for the location header System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TEndpoint the type of the endpoint where the resource can be retrieved from SendEmptyJsonObject(HttpResponse, JsonSerializerContext, CancellationToken) send an empty json object in the body Declaration public static Task SendEmptyJsonObject(this HttpResponse rsp, JsonSerializerContext jsonSerializerContext = null, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Text.Json.Serialization.JsonSerializerContext jsonSerializerContext json serializer context if code generation is used System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendErrorsAsync(HttpResponse, List<ValidationFailure>, Int32, JsonSerializerContext, CancellationToken) send a 400 bad request with error details of the current validation failures Declaration public static Task SendErrorsAsync(this HttpResponse rsp, List<ValidationFailure> failures, int statusCode = 400, JsonSerializerContext jsonSerializerContext = null, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Collections.Generic.List < FluentValidation.Results.ValidationFailure > failures the collection of failures System.Int32 statusCode the http status code for the error response System.Text.Json.Serialization.JsonSerializerContext jsonSerializerContext json serializer context if code generation is used System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendEventStreamAsync<T>(HttpResponse, String, IAsyncEnumerable<T>, CancellationToken) start a \"server-sent-events\" data stream for the client asynchronously without blocking any threads Declaration public static async Task SendEventStreamAsync<T>(this HttpResponse rsp, string eventName, IAsyncEnumerable<T> eventStream, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.String eventName the name of the event stream System.Collections.Generic.IAsyncEnumerable <T> eventStream an IAsyncEnumerable that is the source of the data System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description T the type of the objects being sent in the event stream SendFileAsync(HttpResponse, FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) send a file to the client Declaration public static Task SendFileAsync(this HttpResponse rsp, FileInfo fileInfo, string contentType = \"application/octet-stream\", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.IO.FileInfo fileInfo System.String contentType optional content type to set on the http response System.Nullable < System.DateTimeOffset > lastModified optional last modified date-time-offset for the data stream System.Boolean enableRangeProcessing optional switch for enabling range processing System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendForbiddenAsync(HttpResponse, CancellationToken) send a 403 unauthorized response Declaration public static Task SendForbiddenAsync(this HttpResponse rsp, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendHeadersAsync(HttpResponse, Action<IHeaderDictionary>, Int32, CancellationToken) send headers in response to a HEAD request Declaration public static Task SendHeadersAsync(this HttpResponse rsp, Action<IHeaderDictionary> headers, int statusCode = 200, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Action < Microsoft.AspNetCore.Http.IHeaderDictionary > headers an action to be performed on the headers dictionary of the response System.Int32 statusCode optional custom http status code System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendNoContentAsync(HttpResponse, CancellationToken) send a 204 no content response Declaration public static Task SendNoContentAsync(this HttpResponse rsp, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendNotFoundAsync(HttpResponse, CancellationToken) send a 404 not found response Declaration public static Task SendNotFoundAsync(this HttpResponse rsp, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendOkAsync(HttpResponse, CancellationToken) send an http 200 ok response without any body Declaration public static Task SendOkAsync(this HttpResponse rsp, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendOkAsync<TResponse>(HttpResponse, TResponse, JsonSerializerContext, CancellationToken) send an http 200 ok response with the supplied response dto serialized as json to the client. Declaration public static Task SendOkAsync<TResponse>(this HttpResponse rsp, TResponse response, JsonSerializerContext jsonSerializerContext = null, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp TResponse response the object to serialize to json System.Text.Json.Serialization.JsonSerializerContext jsonSerializerContext json serializer context if code generation is used System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TResponse SendRedirectAsync(HttpResponse, String, Boolean, CancellationToken) send a 301/302 redirect response Declaration public static Task SendRedirectAsync(this HttpResponse rsp, string location, bool isPermanant, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.String location the location to redirect to System.Boolean isPermanant set to true for a 302 redirect. 301 is the default. System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendStreamAsync(HttpResponse, Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) send the contents of a stream to the client Declaration public static async Task SendStreamAsync(this HttpResponse rsp, Stream stream, string fileName = null, long? fileLengthBytes = null, string contentType = \"application/octet-stream\", DateTimeOffset? lastModified = null, bool enableRangeProcessing = false, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.IO.Stream stream the stream to read the data from System.String fileName and optional file name to set in the content-disposition header System.Nullable < System.Int64 > fileLengthBytes optional total size of the file/stream System.String contentType optional content type to set on the http response System.Nullable < System.DateTimeOffset > lastModified optional last modified date-time-offset for the data stream System.Boolean enableRangeProcessing optional switch for enabling range processing System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendStringAsync(HttpResponse, String, Int32, String, CancellationToken) send the supplied string content to the client. Declaration public static Task SendStringAsync(this HttpResponse rsp, string content, int statusCode = 200, string contentType = \"text/plain\", CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.String content the string to write to the response body System.Int32 statusCode optional custom http status code System.String contentType optional content type header value System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task SendUnauthorizedAsync(HttpResponse, CancellationToken) send a 401 unauthorized response Declaration public static Task SendUnauthorizedAsync(this HttpResponse rsp, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse rsp System.Threading.CancellationToken cancellation optional cancellation token. if not specified, the HttpContext.RequestAborted token is used. Returns Type Description System.Threading.Tasks.Task"
  },
  "api/FastEndpoints.ICommand-1.html": {
    "href": "api/FastEndpoints.ICommand-1.html",
    "title": "Interface ICommand<TResult> | FastEndpoints",
    "keywords": "Interface ICommand<TResult> interface for a command that returns a result Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface ICommand<out TResult> Type Parameters Name Description TResult the type of the result that will be returned from the handler [ ICommand<TResult> ] of this command Extension Methods CommandExtensions.ExecuteAsync<TResult>(ICommand<TResult>, CancellationToken)"
  },
  "api/FastEndpoints.ICommand.html": {
    "href": "api/FastEndpoints.ICommand.html",
    "title": "Interface ICommand | FastEndpoints",
    "keywords": "Interface ICommand interface for a command that does not return anything Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface ICommand Extension Methods CommandExtensions.ExecuteAsync<TCommand>(TCommand, CancellationToken)"
  },
  "api/FastEndpoints.ICommandHandler-1.html": {
    "href": "api/FastEndpoints.ICommandHandler-1.html",
    "title": "Interface ICommandHandler<TCommand> | FastEndpoints",
    "keywords": "Interface ICommandHandler<TCommand> interface to be implemented by a command handler for a given command type that does not return a result Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface ICommandHandler<in TCommand> : ICommandHandler where TCommand : ICommand Type Parameters Name Description TCommand the type of the command Methods ExecuteAsync(TCommand, CancellationToken) accepts a command and does not return a result. Declaration Task ExecuteAsync(TCommand command, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description TCommand command the input command object System.Threading.CancellationToken ct optional cancellation token Returns Type Description System.Threading.Tasks.Task"
  },
  "api/FastEndpoints.ICommandHandler-2.html": {
    "href": "api/FastEndpoints.ICommandHandler-2.html",
    "title": "Interface ICommandHandler<TCommand, TResult> | FastEndpoints",
    "keywords": "Interface ICommandHandler<TCommand, TResult> interface to be implemented by a command handler for a given command type that returns a result Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface ICommandHandler<in TCommand, TResult> : ICommandHandler where TCommand : ICommand<TResult> Type Parameters Name Description TCommand the type of the input command TResult the type of the result returned Methods ExecuteAsync(TCommand, CancellationToken) accepts a command and returns a result. Declaration Task<TResult> ExecuteAsync(TCommand command, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description TCommand command the input command object System.Threading.CancellationToken ct optional cancellation token Returns Type Description System.Threading.Tasks.Task <TResult>"
  },
  "api/FastEndpoints.ICommandHandler.html": {
    "href": "api/FastEndpoints.ICommandHandler.html",
    "title": "Interface ICommandHandler | FastEndpoints",
    "keywords": "Interface ICommandHandler marker interface for all command handlers Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface ICommandHandler"
  },
  "api/FastEndpoints.IEndpoint.html": {
    "href": "api/FastEndpoints.IEndpoint.html",
    "title": "Interface IEndpoint | FastEndpoints",
    "keywords": "Interface IEndpoint the common interface implemented by all endpoints Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IEndpoint Properties Definition gets the endpoint definition which contains all the configuration info for the endpoint Declaration EndpointDefinition Definition { get; } Property Value Type Description EndpointDefinition HttpContext the http context of the current request Declaration HttpContext HttpContext { get; } Property Value Type Description Microsoft.AspNetCore.Http.HttpContext ValidationFailures validation failures collection for the endpoint Declaration List<ValidationFailure> ValidationFailures { get; } Property Value Type Description System.Collections.Generic.List < FluentValidation.Results.ValidationFailure > Methods TestURLFor<TEndpoint>() the common interface implemented by all endpoints Declaration static string TestURLFor<TEndpoint>() Returns Type Description System.String Type Parameters Name Description TEndpoint"
  },
  "api/FastEndpoints.IEndpointFactory.html": {
    "href": "api/FastEndpoints.IEndpointFactory.html",
    "title": "Interface IEndpointFactory | FastEndpoints",
    "keywords": "Interface IEndpointFactory interface for the creation of endpoints. Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IEndpointFactory Methods Create(EndpointDefinition, HttpContext) returns the instantiated fast endpoint from a given EndpointDefinition and Microsoft.AspNetCore.Http.HttpContext Declaration BaseEndpoint Create(EndpointDefinition definition, HttpContext ctx) Parameters Type Name Description EndpointDefinition definition the endpoint definition for the current request Microsoft.AspNetCore.Http.HttpContext ctx the http context of the current request Returns Type Description BaseEndpoint"
  },
  "api/FastEndpoints.IEvent.html": {
    "href": "api/FastEndpoints.IEvent.html",
    "title": "Interface IEvent | FastEndpoints",
    "keywords": "Interface IEvent marker interface for an event model Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IEvent Extension Methods EventExtensions.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)"
  },
  "api/FastEndpoints.IEventBus.html": {
    "href": "api/FastEndpoints.IEventBus.html",
    "title": "Interface IEventBus | FastEndpoints",
    "keywords": "Interface IEventBus interface to be implemented by an event bus Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IEventBus Methods PublishAsync<TEvent>(TEvent, Mode, CancellationToken) publishes a given event model to all subscribers registered to handle the that type of event. Declaration Task PublishAsync<TEvent>(TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default(CancellationToken)) Parameters Type Name Description TEvent eventModel the notification event model/dto to publish Mode waitMode specify whether to wait for none, any or all of the subscribers to complete their work System.Threading.CancellationToken cancellation an optional cancellation token Returns Type Description System.Threading.Tasks.Task a Task that matches the wait mode specified. WaitForNone returns an already completed Task (fire and forget). WaitForAny returns a Task that will complete when any of the subscribers complete their work. WaitForAll return a Task that will complete only when all of the subscribers complete their work. Type Parameters Name Description TEvent the type of the event model"
  },
  "api/FastEndpoints.IEventHandler-1.html": {
    "href": "api/FastEndpoints.IEventHandler-1.html",
    "title": "Interface IEventHandler<TEvent> | FastEndpoints",
    "keywords": "Interface IEventHandler<TEvent> interface to be implemented by event handlers Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IEventHandler<TEvent> : IEventHandler Type Parameters Name Description TEvent the type of the event model to be handled by this event handler Methods HandleAsync(TEvent, CancellationToken) the handler logic for the event handler Declaration Task HandleAsync(TEvent eventModel, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description TEvent eventModel the input event model System.Threading.CancellationToken ct optional cancellation token Returns Type Description System.Threading.Tasks.Task"
  },
  "api/FastEndpoints.IEventHandler.html": {
    "href": "api/FastEndpoints.IEventHandler.html",
    "title": "Interface IEventHandler | FastEndpoints",
    "keywords": "Interface IEventHandler marker interface for all event handlers Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IEventHandler"
  },
  "api/FastEndpoints.IGlobalPostProcessor.html": {
    "href": "api/FastEndpoints.IGlobalPostProcessor.html",
    "title": "Interface IGlobalPostProcessor | FastEndpoints",
    "keywords": "Interface IGlobalPostProcessor interface for defining global post-processors to be executed after the main endpoint handler is done Inherited Members IPostProcessor<Object, Object>.PostProcessAsync(Object, Object, HttpContext, IReadOnlyCollection<ValidationFailure>, CancellationToken) Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IGlobalPostProcessor : IPostProcessor<object, object>"
  },
  "api/FastEndpoints.IGlobalPreProcessor.html": {
    "href": "api/FastEndpoints.IGlobalPreProcessor.html",
    "title": "Interface IGlobalPreProcessor | FastEndpoints",
    "keywords": "Interface IGlobalPreProcessor interface for defining global pre-processors to be executed before the main endpoint handler is called Inherited Members IPreProcessor<Object>.PreProcessAsync(Object, HttpContext, List<ValidationFailure>, CancellationToken) Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IGlobalPreProcessor : IPreProcessor<object>"
  },
  "api/FastEndpoints.IHasMapper-1.html": {
    "href": "api/FastEndpoints.IHasMapper-1.html",
    "title": "Interface IHasMapper<TMapper> | FastEndpoints",
    "keywords": "Interface IHasMapper<TMapper> marker/constraint for endpoints that have a mapper generic argument Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IHasMapper<TMapper> : IHasMapper where TMapper : IMapper Type Parameters Name Description TMapper the type of the mapper Properties Map the mapper property Declaration TMapper Map { get; set; } Property Value Type Description TMapper"
  },
  "api/FastEndpoints.IHasMapper.html": {
    "href": "api/FastEndpoints.IHasMapper.html",
    "title": "Interface IHasMapper | FastEndpoints",
    "keywords": "Interface IHasMapper marker interface for endpoints that has a mapper Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IHasMapper"
  },
  "api/FastEndpoints.IMapper.html": {
    "href": "api/FastEndpoints.IMapper.html",
    "title": "Interface IMapper | FastEndpoints",
    "keywords": "Interface IMapper marker interface for entity mappers Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IMapper"
  },
  "api/FastEndpoints.InternalErrorResponse.html": {
    "href": "api/FastEndpoints.InternalErrorResponse.html",
    "title": "Class InternalErrorResponse | FastEndpoints",
    "keywords": "Class InternalErrorResponse the dto used to send an error response to the client when an unhandled exception occurs on the server Inheritance System.Object InternalErrorResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class InternalErrorResponse Properties Code http status code of the error response Declaration public int Code { get; set; } Property Value Type Description System.Int32 Note additional information or instructions Declaration public string Note { get; set; } Property Value Type Description System.String Reason the reason for the error Declaration public string Reason { get; set; } Property Value Type Description System.String Status error status Declaration public string Status { get; set; } Property Value Type Description System.String"
  },
  "api/FastEndpoints.IPlainTextRequest.html": {
    "href": "api/FastEndpoints.IPlainTextRequest.html",
    "title": "Interface IPlainTextRequest | FastEndpoints",
    "keywords": "Interface IPlainTextRequest implement this interface on your request dto if you need to model bind the raw content body of an incoming http request Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IPlainTextRequest Properties Content the request body content will be bound to this property Declaration string Content { get; set; } Property Value Type Description System.String"
  },
  "api/FastEndpoints.IPostProcessor-2.html": {
    "href": "api/FastEndpoints.IPostProcessor-2.html",
    "title": "Interface IPostProcessor<TRequest, TResponse> | FastEndpoints",
    "keywords": "Interface IPostProcessor<TRequest, TResponse> interface for defining post-processors to be executed after the main endpoint handler is done Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IPostProcessor<TRequest, TResponse> Type Parameters Name Description TRequest the type of the request dto TResponse the type of the response dto Methods PostProcessAsync(TRequest, TResponse, HttpContext, IReadOnlyCollection<ValidationFailure>, CancellationToken) interface for defining post-processors to be executed after the main endpoint handler is done Declaration Task PostProcessAsync(TRequest req, TResponse res, HttpContext ctx, IReadOnlyCollection<ValidationFailure> failures, CancellationToken ct) Parameters Type Name Description TRequest req TResponse res Microsoft.AspNetCore.Http.HttpContext ctx System.Collections.Generic.IReadOnlyCollection < FluentValidation.Results.ValidationFailure > failures System.Threading.CancellationToken ct Returns Type Description System.Threading.Tasks.Task"
  },
  "api/FastEndpoints.IPreProcessor-1.html": {
    "href": "api/FastEndpoints.IPreProcessor-1.html",
    "title": "Interface IPreProcessor<TRequest> | FastEndpoints",
    "keywords": "Interface IPreProcessor<TRequest> interface for defining pre-processors to be executed before the main endpoint handler is called Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IPreProcessor<TRequest> Type Parameters Name Description TRequest the type of the request dto Methods PreProcessAsync(TRequest, HttpContext, List<ValidationFailure>, CancellationToken) interface for defining pre-processors to be executed before the main endpoint handler is called Declaration Task PreProcessAsync(TRequest req, HttpContext ctx, List<ValidationFailure> failures, CancellationToken ct) Parameters Type Name Description TRequest req Microsoft.AspNetCore.Http.HttpContext ctx System.Collections.Generic.List < FluentValidation.Results.ValidationFailure > failures System.Threading.CancellationToken ct Returns Type Description System.Threading.Tasks.Task"
  },
  "api/FastEndpoints.IRequestBinder-1.html": {
    "href": "api/FastEndpoints.IRequestBinder-1.html",
    "title": "Interface IRequestBinder<TRequest> | FastEndpoints",
    "keywords": "Interface IRequestBinder<TRequest> create custom request binders by implementing this interface. by registering a custom modelbinder for an endpoint will completely disable the built-in model binding and completely depend on your implementation of the custom binder to return a correctly populated request dto for the endpoint. Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IRequestBinder<TRequest> where TRequest : new() Type Parameters Name Description TRequest the type of the request dto Methods BindAsync(BinderContext, CancellationToken) this method will be called by the library for binding the incoming request data and return a populated request dto object. access the incoming request data via the RequestBinderContext and populate a new request dto instance and return it from this method. Declaration ValueTask<TRequest> BindAsync(BinderContext ctx, CancellationToken ct) Parameters Type Name Description BinderContext ctx request binder context encapsulating the incoming http request context, a list of validation failures for the endpoint, and an optional json serializer context. System.Threading.CancellationToken ct cancellation token Returns Type Description System.Threading.Tasks.ValueTask <TRequest>"
  },
  "api/FastEndpoints.IRequestMapper.html": {
    "href": "api/FastEndpoints.IRequestMapper.html",
    "title": "Interface IRequestMapper | FastEndpoints",
    "keywords": "Interface IRequestMapper marker interface for request only mappers Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IRequestMapper : IMapper"
  },
  "api/FastEndpoints.IResponseInterceptor.html": {
    "href": "api/FastEndpoints.IResponseInterceptor.html",
    "title": "Interface IResponseInterceptor | FastEndpoints",
    "keywords": "Interface IResponseInterceptor interface for defining a response interceptor to be executed before the main endpoint handler executes Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IResponseInterceptor Methods InterceptResponseAsync(Object, Int32, HttpContext, IReadOnlyCollection<ValidationFailure>, CancellationToken) implement this method to intercept the http response with the use of SendInterceptedAsync() method. Declaration Task InterceptResponseAsync(object response, int statusCode, HttpContext ctx, IReadOnlyCollection<ValidationFailure> failures, CancellationToken ct) Parameters Type Name Description System.Object response the response object System.Int32 statusCode Microsoft.AspNetCore.Http.HttpContext ctx the http context of the current request System.Collections.Generic.IReadOnlyCollection < FluentValidation.Results.ValidationFailure > failures the collection of validation failures for the endpoint System.Threading.CancellationToken ct cancellation token Returns Type Description System.Threading.Tasks.Task"
  },
  "api/FastEndpoints.IResponseMapper.html": {
    "href": "api/FastEndpoints.IResponseMapper.html",
    "title": "Interface IResponseMapper | FastEndpoints",
    "keywords": "Interface IResponseMapper marker interface for response only mappers Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IResponseMapper : IMapper"
  },
  "api/FastEndpoints.IServiceResolver.html": {
    "href": "api/FastEndpoints.IServiceResolver.html",
    "title": "Interface IServiceResolver | FastEndpoints",
    "keywords": "Interface IServiceResolver interface used by fastendpoints for resolving services from the DI container. implement this interface and register the implementation in MS DI for customizing service resolving. Inherited Members IServiceResolverBase.CreateScope() IServiceResolverBase.TryResolve<TService>() IServiceResolverBase.TryResolve(Type) IServiceResolverBase.Resolve<TService>() IServiceResolverBase.Resolve(Type) Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IServiceResolver : IServiceResolverBase Methods CreateInstance(Type, IServiceProvider) create an instance of a given type (which may not be registered in the DI container). this method will be called repeatedly per request. so a cached delegate/compiled expression such as Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type,System.Type[]) should be used for instance creation. Declaration object CreateInstance(Type type, IServiceProvider serviceProvider = null) Parameters Type Name Description System.Type type the type to create an instance of System.IServiceProvider serviceProvider optional service provider Returns Type Description System.Object CreateSingleton(Type) create an instance of a given type (which may not be registered in the DI container) which will be used as a singleton. a utility such as Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(System.IServiceProvider,System.Type,System.Object[]) may be used. Declaration object CreateSingleton(Type type) Parameters Type Name Description System.Type type the type to create an instance of Returns Type Description System.Object"
  },
  "api/FastEndpoints.IServiceResolverBase.html": {
    "href": "api/FastEndpoints.IServiceResolverBase.html",
    "title": "Interface IServiceResolverBase | FastEndpoints",
    "keywords": "Interface IServiceResolverBase interface used by fastendpoints for resolving services from the DI container. implement this interface and register the implementation in MS DI for customizing service resolving. Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public interface IServiceResolverBase Methods CreateScope() if you'd like to resolve scoped or transient services from the MS DI container, obtain a service scope from this method and dispose the scope when the work is complete. using var scope = CreateScope(); var scopedService = scope.Resolve<MyService>(); Declaration IServiceScope CreateScope() Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceScope Resolve(Type) resolve an instance for the given type from the dependency injection container. will throw if unresolvable. Declaration object Resolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService the type of the service to resolve Returns Type Description System.Object Exceptions Type Condition System.InvalidOperationException Thrown if requested service cannot be resolved Resolve<TService>() resolve an instance for the given type from the dependency injection container. will throw if unresolvable. Declaration TService Resolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService the type of the service to resolve Exceptions Type Condition System.InvalidOperationException Thrown if requested service cannot be resolved TryResolve(Type) try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable. Declaration object TryResolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService the type of the service to resolve Returns Type Description System.Object TryResolve<TService>() try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable. Declaration TService TryResolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService the type of the service to resolve"
  },
  "api/FastEndpoints.MainExtensions.html": {
    "href": "api/FastEndpoints.MainExtensions.html",
    "title": "Class MainExtensions | FastEndpoints",
    "keywords": "Class MainExtensions provides extensions to easily bootstrap fastendpoints in the asp.net middleware pipeline Inheritance System.Object MainExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class MainExtensions Methods AddFastEndpoints(IServiceCollection, Action<EndpointDiscoveryOptions>) adds the FastEndpoints services to the ASP.Net middleware pipeline Declaration public static IServiceCollection AddFastEndpoints(this IServiceCollection services, Action<EndpointDiscoveryOptions> options = null) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services System.Action < EndpointDiscoveryOptions > options optionally specify the endpoint discovery options Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection MapFastEndpoints(IEndpointRouteBuilder, Action<Config>) provides extensions to easily bootstrap fastendpoints in the asp.net middleware pipeline Declaration public static IEndpointRouteBuilder MapFastEndpoints(this IEndpointRouteBuilder app, Action<Config> configAction = null) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder app System.Action < Config > configAction Returns Type Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder UseFastEndpoints(IApplicationBuilder, Action<Config>) finalizes auto discovery of endpoints and prepares FastEndpoints to start processing requests HINT: this is the combination of UseFastEndpoints(IApplicationBuilder, Action<Config>) and MapFastEndpoints(IEndpointRouteBuilder, Action<Config>) . you can use those two methods separately if you have some special requirement such as using \"Startup.cs\", etc. Declaration public static IApplicationBuilder UseFastEndpoints(this IApplicationBuilder app, Action<Config> configAction = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app System.Action < Config > configAction an optional action to configure FastEndpoints Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder Exceptions Type Condition System.InvalidCastException thrown when the app cannot be cast to Microsoft.AspNetCore.Routing.IEndpointRouteBuilder UseFastEndpointsMiddleware(IApplicationBuilder) provides extensions to easily bootstrap fastendpoints in the asp.net middleware pipeline Declaration public static IApplicationBuilder UseFastEndpointsMiddleware(this IApplicationBuilder app) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder"
  },
  "api/FastEndpoints.Mapper-3.html": {
    "href": "api/FastEndpoints.Mapper-3.html",
    "title": "Class Mapper<TRequest, TResponse, TEntity> | FastEndpoints",
    "keywords": "Class Mapper<TRequest, TResponse, TEntity> use this base class to define domain entity mappers for your endpoints. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Inheritance System.Object Mapper<TRequest, TResponse, TEntity> Implements IMapper IServiceResolverBase Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class Mapper<TRequest, TResponse, TEntity> : IMapper, IServiceResolverBase where TRequest : new() Type Parameters Name Description TRequest the type of request dto TResponse the type of response dto TEntity the type of domain entity to map to/from Methods CreateScope() use this base class to define domain entity mappers for your endpoints. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public IServiceScope CreateScope() Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceScope FromEntity(TEntity) override this method and place the logic for mapping a domain entity to a response dto Declaration public virtual TResponse FromEntity(TEntity e) Parameters Type Name Description TEntity e the domain entity to map from Returns Type Description TResponse FromEntityAsync(TEntity, CancellationToken) override this method and place the logic for mapping a domain entity to a response dto Declaration public virtual Task<TResponse> FromEntityAsync(TEntity e, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description TEntity e the domain entity to map from System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task <TResponse> Resolve(Type) use this base class to define domain entity mappers for your endpoints. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public object Resolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object Resolve<TService>() use this base class to define domain entity mappers for your endpoints. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public TService Resolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService ToEntity(TRequest) override this method and place the logic for mapping the request dto to the desired domain entity Declaration public virtual TEntity ToEntity(TRequest r) Parameters Type Name Description TRequest r the request dto Returns Type Description TEntity ToEntityAsync(TRequest, CancellationToken) override this method and place the logic for mapping the request dto to the desired domain entity Declaration public virtual Task<TEntity> ToEntityAsync(TRequest r, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description TRequest r the request dto to map from System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task <TEntity> TryResolve(Type) use this base class to define domain entity mappers for your endpoints. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public object TryResolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object TryResolve<TService>() use this base class to define domain entity mappers for your endpoints. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public TService TryResolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService UpdateEntity(TRequest, TEntity) override this method and place the logic for mapping the updated request dto to the desired domain entity Declaration public virtual TEntity UpdateEntity(TRequest r, TEntity e) Parameters Type Name Description TRequest r the request dto to update from TEntity e the domain entity to update Returns Type Description TEntity Implements IMapper IServiceResolverBase"
  },
  "api/FastEndpoints.Mode.html": {
    "href": "api/FastEndpoints.Mode.html",
    "title": "Enum Mode | FastEndpoints",
    "keywords": "Enum Mode enum for specifying the waiting mode for event notifications Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public enum Mode Fields Name Description WaitForAll return a Task that will complete only when all of the subscribers complete their work. HINT: exceptions can be captured by caller WaitForAny returns a Task that will complete when any of the subscribers complete their work WARNING: exceptions cannot be captured by caller WaitForNone returns an already completed Task (fire and forget) WARNING: exceptions cannot be captured by caller"
  },
  "api/FastEndpoints.Order.html": {
    "href": "api/FastEndpoints.Order.html",
    "title": "Enum Order | FastEndpoints",
    "keywords": "Enum Order enum used to specify whether to execute global pre/post processors before endpoint level processors Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public enum Order Fields Name Description After execute global processors after the endpoint level processors Before execute global processors before the endpoint level processors"
  },
  "api/FastEndpoints.ParseResult.html": {
    "href": "api/FastEndpoints.ParseResult.html",
    "title": "Struct ParseResult | FastEndpoints",
    "keywords": "Struct ParseResult dto used to hold the result of a value parsing operation Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public struct ParseResult Constructors ParseResult(Boolean, Object) constructor for initializsing a ParseResult instance Declaration public ParseResult(bool isSuccess, object value) Parameters Type Name Description System.Boolean isSuccess set to true of parsing was successful System.Object value set the value that was obtained from the parsing operation Properties IsSuccess will be true if the parsing operation was a success Declaration public bool IsSuccess { readonly get; set; } Property Value Type Description System.Boolean Value will hold the parsed value if the parsing was successful Declaration public object Value { readonly get; set; } Property Value Type Description System.Object"
  },
  "api/FastEndpoints.PlainTextRequest.html": {
    "href": "api/FastEndpoints.PlainTextRequest.html",
    "title": "Class PlainTextRequest | FastEndpoints",
    "keywords": "Class PlainTextRequest use this dto if you need to model bind the raw content body of an incoming http request or you may implement the IPlainTextRequest interface on your own request dto. Inheritance System.Object PlainTextRequest Implements IPlainTextRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class PlainTextRequest : IPlainTextRequest Properties Content the body content of the incoming request Declaration public string Content { get; set; } Property Value Type Description System.String Implements IPlainTextRequest"
  },
  "api/FastEndpoints.QueryParamAttribute.html": {
    "href": "api/FastEndpoints.QueryParamAttribute.html",
    "title": "Class QueryParamAttribute | FastEndpoints",
    "keywords": "Class QueryParamAttribute properties decorated with this attribute will have a corresponding request parameter added to the swagger schema Inheritance System.Object System.Attribute QueryParamAttribute FromQueryParamsAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)] public class QueryParamAttribute : Attribute"
  },
  "api/FastEndpoints.RequestBinder-1.html": {
    "href": "api/FastEndpoints.RequestBinder-1.html",
    "title": "Class RequestBinder<TRequest> | FastEndpoints",
    "keywords": "Class RequestBinder<TRequest> the default request binder for a given request dto type Inheritance System.Object RequestBinder<TRequest> Implements IRequestBinder <TRequest> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class RequestBinder<TRequest> : IRequestBinder<TRequest> where TRequest : new() Type Parameters Name Description TRequest the type of the request dto this binder will be dealing with Constructors RequestBinder() default constructor which enables all binding sources Declaration public RequestBinder() RequestBinder(BindingSource) constructor accepting a bitwise combination of enums which enables only the specified binding sources Declaration public RequestBinder(BindingSource enabledSources) Parameters Type Name Description BindingSource enabledSources a bitwise combination of enum values Methods BindAsync(BinderContext, CancellationToken) override this method to customize the request binding logic Declaration public virtual async ValueTask<TRequest> BindAsync(BinderContext ctx, CancellationToken cancellation) Parameters Type Name Description BinderContext ctx the request binder context which holds all the data required for binding the incoming request System.Threading.CancellationToken cancellation cancellation token Returns Type Description System.Threading.Tasks.ValueTask <TRequest> Exceptions Type Condition ValidationFailureException thrown if any failures occur during the binding process Implements IRequestBinder<TRequest>"
  },
  "api/FastEndpoints.RequestMapper-2.html": {
    "href": "api/FastEndpoints.RequestMapper-2.html",
    "title": "Class RequestMapper<TRequest, TEntity> | FastEndpoints",
    "keywords": "Class RequestMapper<TRequest, TEntity> use this base class to define a domain entity mapper for your endpoints that only has a request dto and no response dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Inheritance System.Object RequestMapper<TRequest, TEntity> Implements IRequestMapper IMapper IServiceResolverBase Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class RequestMapper<TRequest, TEntity> : IRequestMapper, IMapper, IServiceResolverBase where TRequest : new() Type Parameters Name Description TRequest the type of request dto TEntity the type of domain entity to map to/from Methods CreateScope() use this base class to define a domain entity mapper for your endpoints that only has a request dto and no response dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public IServiceScope CreateScope() Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceScope Resolve(Type) use this base class to define a domain entity mapper for your endpoints that only has a request dto and no response dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public object Resolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object Resolve<TService>() use this base class to define a domain entity mapper for your endpoints that only has a request dto and no response dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public TService Resolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService ToEntity(TRequest) override this method and place the logic for mapping the request dto to the desired domain entity Declaration public virtual TEntity ToEntity(TRequest r) Parameters Type Name Description TRequest r the request dto Returns Type Description TEntity ToEntityAsync(TRequest, CancellationToken) override this method and place the logic for mapping the request dto to the desired domain entity Declaration public virtual Task<TEntity> ToEntityAsync(TRequest r, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description TRequest r the request dto to map from System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task <TEntity> TryResolve(Type) use this base class to define a domain entity mapper for your endpoints that only has a request dto and no response dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public object TryResolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object TryResolve<TService>() use this base class to define a domain entity mapper for your endpoints that only has a request dto and no response dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public TService TryResolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService Implements IRequestMapper IMapper IServiceResolverBase"
  },
  "api/FastEndpoints.ResponseMapper-2.html": {
    "href": "api/FastEndpoints.ResponseMapper-2.html",
    "title": "Class ResponseMapper<TResponse, TEntity> | FastEndpoints",
    "keywords": "Class ResponseMapper<TResponse, TEntity> use this base class to define a domain entity mapper for your endpoints that only has a response dto and no request dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Inheritance System.Object ResponseMapper<TResponse, TEntity> Implements IResponseMapper IMapper IServiceResolverBase Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class ResponseMapper<TResponse, TEntity> : IResponseMapper, IMapper, IServiceResolverBase Type Parameters Name Description TResponse the type of response dto TEntity the type of domain entity to map to/from Methods CreateScope() use this base class to define a domain entity mapper for your endpoints that only has a response dto and no request dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public IServiceScope CreateScope() Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceScope FromEntity(TEntity) override this method and place the logic for mapping a domain entity to a response dto Declaration public virtual TResponse FromEntity(TEntity e) Parameters Type Name Description TEntity e the domain entity to map from Returns Type Description TResponse FromEntityAsync(TEntity, CancellationToken) override this method and place the logic for mapping a domain entity to a response dto Declaration public virtual Task<TResponse> FromEntityAsync(TEntity e, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description TEntity e the domain entity to map from System.Threading.CancellationToken ct a cancellation token Returns Type Description System.Threading.Tasks.Task <TResponse> Resolve(Type) use this base class to define a domain entity mapper for your endpoints that only has a response dto and no request dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public object Resolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object Resolve<TService>() use this base class to define a domain entity mapper for your endpoints that only has a response dto and no request dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public TService Resolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService TryResolve(Type) use this base class to define a domain entity mapper for your endpoints that only has a response dto and no request dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public object TryResolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object TryResolve<TService>() use this base class to define a domain entity mapper for your endpoints that only has a response dto and no request dto. HINT: entity mappers are used as singletons for performance reasons. do not maintain state in the mappers. Declaration public TService TryResolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService Implements IResponseMapper IMapper IServiceResolverBase"
  },
  "api/FastEndpoints.RouteHandlerBuilderExtensions.html": {
    "href": "api/FastEndpoints.RouteHandlerBuilderExtensions.html",
    "title": "Class RouteHandlerBuilderExtensions | FastEndpoints",
    "keywords": "Class RouteHandlerBuilderExtensions Inheritance System.Object RouteHandlerBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class RouteHandlerBuilderExtensions Methods ProducesProblemFE(RouteHandlerBuilder, Int32, String) Declaration public static RouteHandlerBuilder ProducesProblemFE(this RouteHandlerBuilder hb, int statusCode = 400, string contentType = \"application/problem+json\") Parameters Type Name Description Microsoft.AspNetCore.Builder.RouteHandlerBuilder hb System.Int32 statusCode System.String contentType Returns Type Description Microsoft.AspNetCore.Builder.RouteHandlerBuilder ProducesProblemFE<TResponse>(RouteHandlerBuilder, Int32, String) Declaration public static RouteHandlerBuilder ProducesProblemFE<TResponse>(this RouteHandlerBuilder hb, int statusCode = 400, string contentType = \"application/problem+json\") Parameters Type Name Description Microsoft.AspNetCore.Builder.RouteHandlerBuilder hb System.Int32 statusCode System.String contentType Returns Type Description Microsoft.AspNetCore.Builder.RouteHandlerBuilder Type Parameters Name Description TResponse"
  },
  "api/FastEndpoints.Security.AuthExtensions.html": {
    "href": "api/FastEndpoints.Security.AuthExtensions.html",
    "title": "Class AuthExtensions | FastEndpoints",
    "keywords": "Class AuthExtensions a set of auth related extensions Inheritance System.Object AuthExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Security Assembly : FastEndpoints.Security.dll Syntax public static class AuthExtensions Methods AddJWTBearerAuth(IServiceCollection, String, JWTBearer.TokenSigningStyle, Action<TokenValidationParameters>, Action<JwtBearerEvents>) configure and enable jwt bearer authentication Declaration public static IServiceCollection AddJWTBearerAuth(this IServiceCollection services, string tokenSigningKey, JWTBearer.TokenSigningStyle tokenSigningStyle = JWTBearer.TokenSigningStyle.Symmetric, Action<TokenValidationParameters> tokenValidation = null, Action<JwtBearerEvents> bearerEvents = null) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services System.String tokenSigningKey the secret key to use for verifying the jwt tokens JWTBearer.TokenSigningStyle tokenSigningStyle specify the token signing style System.Action < Microsoft.IdentityModel.Tokens.TokenValidationParameters > tokenValidation configuration action to specify additional token validation parameters System.Action < Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents > bearerEvents configuration action to specify custom jwt bearer events Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection ClaimValue(ClaimsPrincipal, String) get the claim value for a given claim type of the current user principal. if the user doesn't have the requested claim type, a null will be returned. Declaration public static string ClaimValue(this ClaimsPrincipal principal, string claimType) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal System.String claimType the claim type to look for Returns Type Description System.String HasClaimType(ClaimsPrincipal, String) determines if the current user principal has the given claim type Declaration public static bool HasClaimType(this ClaimsPrincipal principal, string claimType) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal System.String claimType the claim type to check for Returns Type Description System.Boolean HasPermission(ClaimsPrincipal, String) returns true of the current user principal has a given permission code. Declaration public static bool HasPermission(this ClaimsPrincipal principal, string permissionCode) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal System.String permissionCode the permission code to check for Returns Type Description System.Boolean"
  },
  "api/FastEndpoints.Security.html": {
    "href": "api/FastEndpoints.Security.html",
    "title": "Namespace FastEndpoints.Security | FastEndpoints",
    "keywords": "Namespace FastEndpoints.Security Classes AuthExtensions a set of auth related extensions JWTBearer static class for easy creation of jwt bearer auth tokens Permissions inherit from this class and define your applications permissions as public const string public const string Inventory_Create_Item = \"100\"; public const string Inventory_Retrieve_Item = \"101\"; public const string Inventory_Update_Item = \"102\"; public const string Inventory_Delete_Item = \"103\"; RefreshServiceOptions RefreshTokenService<TRequest, TResponse> implement this class to define your own refresh token endpoints. TokenRequest base dto for access/refresh token renewal requests TokenResponse base dto for access/refresh token responses Enums JWTBearer.TokenSigningStyle token signing style enum"
  },
  "api/FastEndpoints.Security.JWTBearer.html": {
    "href": "api/FastEndpoints.Security.JWTBearer.html",
    "title": "Class JWTBearer | FastEndpoints",
    "keywords": "Class JWTBearer static class for easy creation of jwt bearer auth tokens Inheritance System.Object JWTBearer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Security Assembly : FastEndpoints.Security.dll Syntax public static class JWTBearer Methods CreateToken(String, JWTBearer.TokenSigningStyle, String, String, Nullable<DateTime>, IEnumerable<String>, IEnumerable<String>, (String claimType, String claimValue)[]) generate a jwt token with the supplied parameters and token signing style Declaration public static string CreateToken(string signingKey, JWTBearer.TokenSigningStyle signingStyle, string issuer = null, string audience = null, DateTime? expireAt = null, IEnumerable<string> permissions = null, IEnumerable<string> roles = null, params (string claimType, string claimValue)[] claims) Parameters Type Name Description System.String signingKey the secret key to use for signing the tokens JWTBearer.TokenSigningStyle signingStyle the signing style to use (Symmertic or Asymmetric) System.String issuer the issue System.String audience the audience System.Nullable < System.DateTime > expireAt the expiry date System.Collections.Generic.IEnumerable < System.String > permissions one or more permissions to assign to the user principal System.Collections.Generic.IEnumerable < System.String > roles one or more roles to assign the user principal System.ValueTuple < System.String , System.String >[] claims one or more claims to assign to the user principal Returns Type Description System.String CreateToken(String, Nullable<DateTime>, IEnumerable<String>, IEnumerable<String>, IEnumerable<Claim>, String, String, JWTBearer.TokenSigningStyle) generate a jwt token with the supplied parameters Declaration public static string CreateToken(string signingKey, DateTime? expireAt = null, IEnumerable<string> permissions = null, IEnumerable<string> roles = null, IEnumerable<Claim> claims = null, string issuer = null, string audience = null, JWTBearer.TokenSigningStyle signingStyle = JWTBearer.TokenSigningStyle.Symmetric) Parameters Type Name Description System.String signingKey the secret key to use for signing the tokens System.Nullable < System.DateTime > expireAt the expiry date System.Collections.Generic.IEnumerable < System.String > permissions one or more permissions to assign to the user principal System.Collections.Generic.IEnumerable < System.String > roles one or more roles to assign the user principal System.Collections.Generic.IEnumerable < System.Security.Claims.Claim > claims one or more claims to assign to the user principal System.String issuer the issuer System.String audience the audience JWTBearer.TokenSigningStyle signingStyle the signing style to use (Symmertic or Asymmetric) Returns Type Description System.String CreateToken(String, Nullable<DateTime>, IEnumerable<String>, IEnumerable<String>, (String claimType, String claimValue)[]) generate a jwt token with the supplied parameters Declaration public static string CreateToken(string signingKey, DateTime? expireAt = null, IEnumerable<string> permissions = null, IEnumerable<string> roles = null, params (string claimType, string claimValue)[] claims) Parameters Type Name Description System.String signingKey the secret key to use for signing the tokens System.Nullable < System.DateTime > expireAt the expiry date System.Collections.Generic.IEnumerable < System.String > permissions one or more permissions to assign to the user principal System.Collections.Generic.IEnumerable < System.String > roles one or more roles to assign the user principal System.ValueTuple < System.String , System.String >[] claims one or more claims to assign to the user principal Returns Type Description System.String CreateToken(String, String, String, Nullable<DateTime>, IEnumerable<String>, IEnumerable<String>, (String claimType, String claimValue)[]) generate a jwt token with the supplied parameters Declaration public static string CreateToken(string signingKey, string issuer, string audience, DateTime? expireAt = null, IEnumerable<string> permissions = null, IEnumerable<string> roles = null, params (string claimType, string claimValue)[] claims) Parameters Type Name Description System.String signingKey the secret key to use for signing the tokens System.String issuer the issue System.String audience the audience System.Nullable < System.DateTime > expireAt the expiry date System.Collections.Generic.IEnumerable < System.String > permissions one or more permissions to assign to the user principal System.Collections.Generic.IEnumerable < System.String > roles one or more roles to assign the user principal System.ValueTuple < System.String , System.String >[] claims one or more claims to assign to the user principal Returns Type Description System.String"
  },
  "api/FastEndpoints.Security.JWTBearer.TokenSigningStyle.html": {
    "href": "api/FastEndpoints.Security.JWTBearer.TokenSigningStyle.html",
    "title": "Enum JWTBearer.TokenSigningStyle | FastEndpoints",
    "keywords": "Enum JWTBearer.TokenSigningStyle token signing style enum Namespace : FastEndpoints.Security Assembly : FastEndpoints.Security.dll Syntax public enum TokenSigningStyle Fields Name Description Asymmetric token signing style enum Symmetric token signing style enum"
  },
  "api/FastEndpoints.Security.Permissions.html": {
    "href": "api/FastEndpoints.Security.Permissions.html",
    "title": "Class Permissions | FastEndpoints",
    "keywords": "Class Permissions inherit from this class and define your applications permissions as public const string public const string Inventory_Create_Item = \"100\"; public const string Inventory_Retrieve_Item = \"101\"; public const string Inventory_Update_Item = \"102\"; public const string Inventory_Delete_Item = \"103\"; Inheritance System.Object Permissions Implements System.Collections.Generic.IEnumerable < System.ValueTuple < System.String , System.String >> System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Security Assembly : FastEndpoints.Security.dll Syntax public abstract class Permissions : IEnumerable<(string PermissionName, string PermissionCode)>, IEnumerable Constructors Permissions() inherit from this class and define your applications permissions as public const string public const string Inventory_Create_Item = \"100\"; public const string Inventory_Retrieve_Item = \"101\"; public const string Inventory_Update_Item = \"102\"; public const string Inventory_Delete_Item = \"103\"; Declaration protected Permissions() Methods AllCodes() get a list of all permission codes Declaration public IEnumerable<string> AllCodes() Returns Type Description System.Collections.Generic.IEnumerable < System.String > AllNames() get a list of all permission names Declaration public IEnumerable<string> AllNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String > CodesFor(IEnumerable<String>) get a list of permission codes for a given list of permission names Declaration public IEnumerable<string> CodesFor(IEnumerable<string> names) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > names the permission names to get the codes for Returns Type Description System.Collections.Generic.IEnumerable < System.String > GetEnumerator() inherit from this class and define your applications permissions as public const string public const string Inventory_Create_Item = \"100\"; public const string Inventory_Retrieve_Item = \"101\"; public const string Inventory_Update_Item = \"102\"; public const string Inventory_Delete_Item = \"103\"; Declaration public IEnumerator<(string PermissionName, string PermissionCode)> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < System.ValueTuple < System.String , System.String >> NamesFor(IEnumerable<String>) gets a list of permission names for the given list of permission codes Declaration public IEnumerable<string> NamesFor(IEnumerable<string> codes) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > codes the permission codes to get the permission names for Returns Type Description System.Collections.Generic.IEnumerable < System.String > PermissionFromCode(String) get the permission tuple using it's code. returns null if not found Declaration public (string PermissionName, string PermissionCode)? PermissionFromCode(string permissionCode) Parameters Type Name Description System.String permissionCode code of the permission to get Returns Type Description System.Nullable < System.ValueTuple < System.String , System.String >> PermissionFromName(String) get the permission tuple using it's name. returns null if not found Declaration public (string PermissionName, string PermissionCode)? PermissionFromName(string permissionName) Parameters Type Name Description System.String permissionName name of the permission Returns Type Description System.Nullable < System.ValueTuple < System.String , System.String >> Explicit Interface Implementations IEnumerable.GetEnumerator() inherit from this class and define your applications permissions as public const string public const string Inventory_Create_Item = \"100\"; public const string Inventory_Retrieve_Item = \"101\"; public const string Inventory_Update_Item = \"102\"; public const string Inventory_Delete_Item = \"103\"; Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/FastEndpoints.Security.RefreshServiceOptions.html": {
    "href": "api/FastEndpoints.Security.RefreshServiceOptions.html",
    "title": "Class RefreshServiceOptions | FastEndpoints",
    "keywords": "Class RefreshServiceOptions Inheritance System.Object RefreshServiceOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Security Assembly : FastEndpoints.Security.dll Syntax public class RefreshServiceOptions Properties AccessTokenValidity specifies how long the access token should be valid for. default is 5 minutes. Declaration public TimeSpan AccessTokenValidity { set; } Property Value Type Description System.TimeSpan Audience specifies the token audience Declaration public string Audience { set; } Property Value Type Description System.String Issuer specifies the token issuer Declaration public string Issuer { set; } Property Value Type Description System.String RefreshTokenValidity specifies how long the refresh token should be valid for. default is 4 hours. Declaration public TimeSpan RefreshTokenValidity { set; } Property Value Type Description System.TimeSpan TokenSigningKey specifies the secret key used to sign the jwt. an exception will be thrown if a value is not specified. Declaration public string TokenSigningKey { set; } Property Value Type Description System.String TokenSigningStyle specifies the signing style of the jwt. default is symmetric. Declaration public JWTBearer.TokenSigningStyle TokenSigningStyle { set; } Property Value Type Description JWTBearer.TokenSigningStyle Methods Endpoint(String, Action<EndpointDefinition>) endpoint configuration action Declaration public void Endpoint(string refreshEndpointRoute, Action<EndpointDefinition> ep) Parameters Type Name Description System.String refreshEndpointRoute the route of the refresh token endpoint System.Action < EndpointDefinition > ep the action to be performed on the endpoint definition"
  },
  "api/FastEndpoints.Security.RefreshTokenService-2.html": {
    "href": "api/FastEndpoints.Security.RefreshTokenService-2.html",
    "title": "Class RefreshTokenService<TRequest, TResponse> | FastEndpoints",
    "keywords": "Class RefreshTokenService<TRequest, TResponse> implement this class to define your own refresh token endpoints. Inheritance System.Object BaseEndpoint Endpoint <TRequest, TResponse> RefreshTokenService<TRequest, TResponse> Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.ExecuteAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.TryResolve<TService>() Endpoint<TRequest, TResponse>.TryResolve(Type) Endpoint<TRequest, TResponse>.Resolve<TService>() Endpoint<TRequest, TResponse>.Resolve(Type) Endpoint<TRequest, TResponse>.CreateScope() Endpoint<TRequest, TResponse>.Route<T>(String, Boolean) Endpoint<TRequest, TResponse>.Query<T>(String, Boolean) Endpoint<TRequest, TResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<TRequest, TResponse>.CreateTokenWith<TService>(String, Action<UserPrivileges>) Endpoint<TRequest, TResponse>.OnBeforeValidate(TRequest) Endpoint<TRequest, TResponse>.OnBeforeValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.OnAfterValidate(TRequest) Endpoint<TRequest, TResponse>.OnAfterValidateAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.OnBeforeHandle(TRequest) Endpoint<TRequest, TResponse>.OnBeforeHandleAsync(TRequest, CancellationToken) Endpoint<TRequest, TResponse>.OnAfterHandle(TRequest, TResponse) Endpoint<TRequest, TResponse>.OnAfterHandleAsync(TRequest, TResponse, CancellationToken) Endpoint<TRequest, TResponse>.OnValidationFailed() Endpoint<TRequest, TResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<TRequest, TResponse>.ValidationFailed Endpoint<TRequest, TResponse>.User Endpoint<TRequest, TResponse>.Response Endpoint<TRequest, TResponse>.Config Endpoint<TRequest, TResponse>.Env Endpoint<TRequest, TResponse>.Logger Endpoint<TRequest, TResponse>.BaseURL Endpoint<TRequest, TResponse>.HttpMethod Endpoint<TRequest, TResponse>.Form Endpoint<TRequest, TResponse>.Files Endpoint<TRequest, TResponse>.ResponseStarted Endpoint<TRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendInterceptedAsync(Object, Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendStringAsync(String, Int32, String, CancellationToken) Endpoint<TRequest, TResponse>.SendOkAsync(TResponse, CancellationToken) Endpoint<TRequest, TResponse>.SendOkAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendErrorsAsync(Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendNoContentAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendNotFoundAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendForbiddenAsync(CancellationToken) Endpoint<TRequest, TResponse>.SendRedirectAsync(String, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken) Endpoint<TRequest, TResponse>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken) Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken) Endpoint<TRequest, TResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<TRequest, TResponse>.AllowAnonymous(Http[]) Endpoint<TRequest, TResponse>.AllowAnonymous(String[]) Endpoint<TRequest, TResponse>.AllowFileUploads(Boolean) Endpoint<TRequest, TResponse>.AllowFormData() Endpoint<TRequest, TResponse>.AuthSchemes(String[]) Endpoint<TRequest, TResponse>.Claims(String[]) Endpoint<TRequest, TResponse>.ClaimsAll(String[]) Endpoint<TRequest, TResponse>.Delete(String[]) Endpoint<TRequest, TResponse>.Delete(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Description(Action<RouteHandlerBuilder>, Boolean) Endpoint<TRequest, TResponse>.DontAutoTag() Endpoint<TRequest, TResponse>.DontCatchExceptions() Endpoint<TRequest, TResponse>.DontThrowIfValidationFails() Endpoint<TRequest, TResponse>.Get(String[]) Endpoint<TRequest, TResponse>.Get(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Group<TEndpointGroup>() Endpoint<TRequest, TResponse>.Head(String[]) Endpoint<TRequest, TResponse>.Head(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<TRequest, TResponse>.Patch(String[]) Endpoint<TRequest, TResponse>.Patch(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.Permissions(String[]) Endpoint<TRequest, TResponse>.PermissionsAll(String[]) Endpoint<TRequest, TResponse>.Policies(String[]) Endpoint<TRequest, TResponse>.Post(String[]) Endpoint<TRequest, TResponse>.Post(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.PostProcessors(IPostProcessor<TRequest, TResponse>[]) Endpoint<TRequest, TResponse>.PreProcessors(IPreProcessor<TRequest>[]) Endpoint<TRequest, TResponse>.Put(String[]) Endpoint<TRequest, TResponse>.Put(String, Expression<Func<TRequest, Object>>) Endpoint<TRequest, TResponse>.RequestBinder(IRequestBinder<TRequest>) Endpoint<TRequest, TResponse>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[]) Endpoint<TRequest, TResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<TRequest, TResponse>.Roles(String[]) Endpoint<TRequest, TResponse>.RoutePrefixOverride(String) Endpoint<TRequest, TResponse>.Routes(String[]) Endpoint<TRequest, TResponse>.SerializerContext<TContext>(TContext) Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary>) Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary<TRequest>>) Endpoint<TRequest, TResponse>.Summary(EndpointSummary) Endpoint<TRequest, TResponse>.Tags(String[]) Endpoint<TRequest, TResponse>.Throttle(Int32, Double, String) Endpoint<TRequest, TResponse>.Validator<TValidator>() Endpoint<TRequest, TResponse>.Verbs(Http[]) Endpoint<TRequest, TResponse>.Verbs(String[]) Endpoint<TRequest, TResponse>.Version(Int32, Nullable<Int32>) Endpoint<TRequest, TResponse>.AddError(String, String, Severity) Endpoint<TRequest, TResponse>.AddError(Expression<Func<TRequest, Object>>, String, String, Severity) Endpoint<TRequest, TResponse>.ThrowIfAnyErrors() Endpoint<TRequest, TResponse>.ThrowError(String) Endpoint<TRequest, TResponse>.ThrowError(Expression<Func<TRequest, Object>>, String) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures BaseEndpoint.Configure() BaseEndpoint.Verbs(String[]) BaseEndpoint.Group<TEndpointGroup>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Security Assembly : FastEndpoints.Security.dll Syntax public abstract class RefreshTokenService<TRequest, TResponse> : Endpoint<TRequest, TResponse>, IEndpoint, IEventBus, IServiceResolverBase, IRefreshTokenService<TResponse> where TRequest : TokenRequest, new() where TResponse : TokenResponse, new() Type Parameters Name Description TRequest the type of the request dto that will be accepted by the refresh endpoint TResponse the type of the response dto that will be sent by the refresh endpoint Methods PersistTokenAsync(TResponse) this method will be called whenever a new access/refresh token pair is being generated. store the tokens and expiry dates however you wish for the purpose of verifying future refresh requests. Declaration public abstract Task PersistTokenAsync(TResponse response) Parameters Type Name Description TResponse response the response dto containing the tokens that's about to be sent to the requesting client Returns Type Description System.Threading.Tasks.Task RefreshRequestValidationAsync(TRequest) validate the incoming refresh request by checking the token and expiry against the previously stored data. if the token is not valid and a new token pair should not be created, simply add validation errors using the AddError() method. the failures you add will be sent to the requesting client. if no failures are added, validation passes and a new token pair will be created and sent to the client. Declaration public abstract Task RefreshRequestValidationAsync(TRequest req) Parameters Type Name Description TRequest req the incoming refresh request dto Returns Type Description System.Threading.Tasks.Task SetRenewalPrivilegesAsync(TRequest, UserPrivileges) specify the user privileges to be embeded in the jwt when a refresh request is received and validation has passed. this only applies to renewal/refresh requests received to the refresh endpoint and not the initial jwt creation. Declaration public abstract Task SetRenewalPrivilegesAsync(TRequest request, UserPrivileges privileges) Parameters Type Name Description TRequest request the request dto received from the client UserPrivileges privileges the user priviledges to be embeded in the jwt such as roles/claims/permissions Returns Type Description System.Threading.Tasks.Task Setup(Action<RefreshServiceOptions>) configure the refresh token service options Declaration public void Setup(Action<RefreshServiceOptions> options) Parameters Type Name Description System.Action < RefreshServiceOptions > options action to be performed on the refresh service options object Implements IEndpoint IEventBus IServiceResolverBase"
  },
  "api/FastEndpoints.Security.TokenRequest.html": {
    "href": "api/FastEndpoints.Security.TokenRequest.html",
    "title": "Class TokenRequest | FastEndpoints",
    "keywords": "Class TokenRequest base dto for access/refresh token renewal requests Inheritance System.Object TokenRequest TokenResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Security Assembly : FastEndpoints.Security.dll Syntax public class TokenRequest Properties RefreshToken a single-use refresh token which will be valid for the duration specified by RefreshExpiry Declaration public string RefreshToken { get; set; } Property Value Type Description System.String UserId unique identifier of a user Declaration public string UserId { get; set; } Property Value Type Description System.String"
  },
  "api/FastEndpoints.Security.TokenResponse.html": {
    "href": "api/FastEndpoints.Security.TokenResponse.html",
    "title": "Class TokenResponse | FastEndpoints",
    "keywords": "Class TokenResponse base dto for access/refresh token responses Inheritance System.Object TokenRequest TokenResponse Inherited Members TokenRequest.UserId TokenRequest.RefreshToken System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Security Assembly : FastEndpoints.Security.dll Syntax public class TokenResponse : TokenRequest Properties AccessExpiry the expiry date-time of the access token Declaration [JsonIgnore] public DateTime AccessExpiry { get; } Property Value Type Description System.DateTime AccessToken the jwt access token which will be valid for the duration specified by AccessExpiry Declaration public string AccessToken { get; set; } Property Value Type Description System.String RefreshExpiry the expiry date-time of the refresh token Declaration [JsonIgnore] public DateTime RefreshExpiry { get; } Property Value Type Description System.DateTime"
  },
  "api/FastEndpoints.SecurityOptions.html": {
    "href": "api/FastEndpoints.SecurityOptions.html",
    "title": "Class SecurityOptions | FastEndpoints",
    "keywords": "Class SecurityOptions global security options Inheritance System.Object SecurityOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class SecurityOptions Properties PermissionsClaimType specify a custom claim type used to identify permissions of a user principal. defaults to permission . WARNING: the FastEndpoints.Security package should not be used if you're setting a custom permission claim type here. do not change the default unless you fully comprehend what you're doing!!! Declaration public string PermissionsClaimType { set; } Property Value Type Description System.String"
  },
  "api/FastEndpoints.SerializerOptions.html": {
    "href": "api/FastEndpoints.SerializerOptions.html",
    "title": "Class SerializerOptions | FastEndpoints",
    "keywords": "Class SerializerOptions serialization options for the endpoints Inheritance System.Object SerializerOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class SerializerOptions Properties Options the json serializer options Declaration public JsonSerializerOptions Options { get; } Property Value Type Description System.Text.Json.JsonSerializerOptions RequestDeserializer a function for deserializing the incoming http request body. this function will be executed for each request received if it has a json request body. the input parameters of the func are as follows: Microsoft.AspNetCore.Http.HttpRequest : the incoming request System.Type : the type of the request dto which the request body will be deserialized into System.Text.Json.Serialization.JsonSerializerContext ? : json serializer context if code generation is used System.Threading.CancellationToken : a cancellation token Declaration public Func<HttpRequest, Type, JsonSerializerContext, CancellationToken, ValueTask<object>> RequestDeserializer { set; } Property Value Type Description System.Func < Microsoft.AspNetCore.Http.HttpRequest , System.Type , System.Text.Json.Serialization.JsonSerializerContext , System.Threading.CancellationToken , System.Threading.Tasks.ValueTask < System.Object >> ResponseSerializer a function for writing serialized response dtos to the response body. this function will be executed whenever a json response is being sent to the client. you should set the content-type and write directly to the http response body stream in this function. the parameters of the func are as follows: Microsoft.AspNetCore.Http.HttpResponse : the http response object System.Object : the response dto to be serialized System.String : the response content-type System.Text.Json.Serialization.JsonSerializerContext ? : json serializer context if code generation is used System.Threading.CancellationToken : a cancellation token example: config.ResponseSerializer = (rsp, dto, cType, jCtx , ct) => { rsp.ContentType = cType; return rsp.WriteAsync(Newtonsoft.Json.JsonConvert.SerializeObject(dto), ct); }; Declaration public Func<HttpResponse, object, string, JsonSerializerContext, CancellationToken, Task> ResponseSerializer { set; } Property Value Type Description System.Func < Microsoft.AspNetCore.Http.HttpResponse , System.Object , System.String , System.Text.Json.Serialization.JsonSerializerContext , System.Threading.CancellationToken , System.Threading.Tasks.Task >"
  },
  "api/FastEndpoints.ServiceScopeExtensions.html": {
    "href": "api/FastEndpoints.ServiceScopeExtensions.html",
    "title": "Class ServiceScopeExtensions | FastEndpoints",
    "keywords": "Class ServiceScopeExtensions Inheritance System.Object ServiceScopeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public static class ServiceScopeExtensions Methods Resolve(IServiceScope, Type) resolve an instance for the given type from the dependency injection container. will throw if unresolvable. Declaration public static object Resolve(this IServiceScope scope, Type typeOfService) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceScope scope System.Type typeOfService the type of the service to resolve Returns Type Description System.Object Exceptions Type Condition System.InvalidOperationException Thrown if requested service cannot be resolved Resolve<TService>(IServiceScope) resolve an instance for the given type from the dependency injection container. will throw if unresolvable. Declaration public static TService Resolve<TService>(this IServiceScope scope) where TService : class Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceScope scope Returns Type Description TService Type Parameters Name Description TService the type of the service to resolve Exceptions Type Condition System.InvalidOperationException Thrown if requested service cannot be resolved TryResolve(IServiceScope, Type) try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable. Declaration public static object TryResolve(this IServiceScope scope, Type typeOfService) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceScope scope System.Type typeOfService the type of the service to resolve Returns Type Description System.Object TryResolve<TService>(IServiceScope) try to resolve an instance for the given type from the dependency injection container. will return null if unresolvable. Declaration public static TService TryResolve<TService>(this IServiceScope scope) where TService : class Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceScope scope Returns Type Description TService Type Parameters Name Description TService the type of the service to resolve"
  },
  "api/FastEndpoints.SubGroup-1.html": {
    "href": "api/FastEndpoints.SubGroup-1.html",
    "title": "Class SubGroup<TParent> | FastEndpoints",
    "keywords": "Class SubGroup<TParent> common configuration for a sub group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. Inheritance System.Object Group SubGroup<TParent> Implements IServiceResolverBase Inherited Members Group.TryResolve<TService>() Group.TryResolve(Type) Group.Resolve<TService>() Group.Resolve(Type) Group.CreateScope() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class SubGroup<TParent> : Group, IServiceResolverBase where TParent : Group, new() Type Parameters Name Description TParent Methods Configure(String, Action<EndpointDefinition>) common configuration for a sub group of endpoints can be specified by implementing this abstract class and calling Configure(String, Action<EndpointDefinition>) in the constructor. Declaration protected sealed override void Configure(string routePrefix, Action<EndpointDefinition> ep) Parameters Type Name Description System.String routePrefix System.Action < EndpointDefinition > ep Overrides Group.Configure(String, Action<EndpointDefinition>) Implements IServiceResolverBase"
  },
  "api/FastEndpoints.Summary-1.html": {
    "href": "api/FastEndpoints.Summary-1.html",
    "title": "Class Summary<TEndpoint> | FastEndpoints",
    "keywords": "Class Summary<TEndpoint> Inheritance System.Object EndpointSummary Summary<TEndpoint> Inherited Members EndpointSummary.Item[Int32] EndpointSummary.Summary EndpointSummary.Description EndpointSummary.ExampleRequest EndpointSummary.Params EndpointSummary.Responses EndpointSummary.ResponseExamples EndpointSummary.ResponseParam<TResponse>(Int32, Expression<Func<TResponse, Object>>, String) EndpointSummary.ResponseParam<TResponse>(Expression<Func<TResponse, Object>>, String) EndpointSummary.Response<TResponse>(Int32, String, String, TResponse) EndpointSummary.Response(Int32, String, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class Summary<TEndpoint> : EndpointSummary, ISummary where TEndpoint : IEndpoint Type Parameters Name Description TEndpoint the type of the endpoint this summary is associated with"
  },
  "api/FastEndpoints.Summary-2.html": {
    "href": "api/FastEndpoints.Summary-2.html",
    "title": "Class Summary<TEndpoint, TRequest> | FastEndpoints",
    "keywords": "Class Summary<TEndpoint, TRequest> Inheritance System.Object EndpointSummary EndpointSummary <TRequest> Summary<TEndpoint, TRequest> Inherited Members EndpointSummary<TRequest>.RequestParam(Expression<Func<TRequest, Object>>, String) EndpointSummary.Item[Int32] EndpointSummary.Summary EndpointSummary.Description EndpointSummary.ExampleRequest EndpointSummary.Params EndpointSummary.Responses EndpointSummary.ResponseExamples EndpointSummary.ResponseParam<TResponse>(Int32, Expression<Func<TResponse, Object>>, String) EndpointSummary.ResponseParam<TResponse>(Expression<Func<TResponse, Object>>, String) EndpointSummary.Response<TResponse>(Int32, String, String, TResponse) EndpointSummary.Response(Int32, String, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class Summary<TEndpoint, TRequest> : EndpointSummary<TRequest>, ISummary where TEndpoint : IEndpoint where TRequest : new() Type Parameters Name Description TEndpoint the type of the endpoint this summary is associated with TRequest the type of the request dto"
  },
  "api/FastEndpoints.Swagger.Extensions.html": {
    "href": "api/FastEndpoints.Swagger.Extensions.html",
    "title": "Class Extensions | FastEndpoints",
    "keywords": "Class Extensions a set of extension methods for adding swagger support Inheritance System.Object Extensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Swagger Assembly : FastEndpoints.Swagger.dll Syntax public static class Extensions Properties SelectedJsonNamingPolicy JsonNamingPolicy chosen for swagger Declaration public static JsonNamingPolicy SelectedJsonNamingPolicy { get; } Property Value Type Description System.Text.Json.JsonNamingPolicy Methods AddAuth(OpenApiDocumentGeneratorSettings, String, OpenApiSecurityScheme, IEnumerable<String>) add swagger auth for this open api document Declaration public static OpenApiDocumentGeneratorSettings AddAuth(this OpenApiDocumentGeneratorSettings s, string schemeName, OpenApiSecurityScheme securityScheme, IEnumerable<string> globalScopeNames = null) Parameters Type Name Description NSwag.Generation.OpenApiDocumentGeneratorSettings s System.String schemeName the authentication scheme NSwag.OpenApiSecurityScheme securityScheme an open api security scheme object System.Collections.Generic.IEnumerable < System.String > globalScopeNames a collection of global scope names Returns Type Description NSwag.Generation.OpenApiDocumentGeneratorSettings AddSwaggerDoc(IServiceCollection, Action<AspNetCoreOpenApiDocumentGeneratorSettings>, Action<JsonSerializerOptions>, Boolean, Int32, TagCase, Int32, Int32, Boolean, Boolean, Boolean) enable swagger support for FastEndpoints with a single call. Declaration public static IServiceCollection AddSwaggerDoc(this IServiceCollection services, Action<AspNetCoreOpenApiDocumentGeneratorSettings> settings = null, Action<JsonSerializerOptions> serializerSettings = null, bool addJWTBearerAuth = true, int tagIndex = 1, TagCase tagCase = TagCase.TitleCase, int minEndpointVersion = 0, int maxEndpointVersion = 0, bool shortSchemaNames = false, bool removeEmptySchemas = false, bool excludeNonFastEndpoints = false) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services System.Action < NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings > settings swaggergen config settings System.Action < System.Text.Json.JsonSerializerOptions > serializerSettings json serializer options System.Boolean addJWTBearerAuth set to false to disable auto addition of jwt bearer auth support System.Int32 tagIndex the index of the route path segment to use for tagging/grouping endpoints TagCase tagCase the casing strategy to use on endpoint tags System.Int32 minEndpointVersion endpoints lower than this vesion will not be included in the swagger doc System.Int32 maxEndpointVersion endpoints greater than this version will not be included in the swagger doc System.Boolean shortSchemaNames set to true if you'd like schema names to be the class name intead of the full name System.Boolean removeEmptySchemas set to true for removing empty schemas from the swagger document. WARNING: enabling this also flattens the inheritance hierachy of the schmemas. System.Boolean excludeNonFastEndpoints if set to true, only FastEndpoints will show up in the swagger doc Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureDefaults(SwaggerUi3Settings, Action<SwaggerUi3Settings>) configure swagger ui with some sensible defaults for FastEndpoints which can be overridden if needed. Declaration public static void ConfigureDefaults(this SwaggerUi3Settings s, Action<SwaggerUi3Settings> settings = null) Parameters Type Name Description NSwag.AspNetCore.SwaggerUi3Settings s System.Action < NSwag.AspNetCore.SwaggerUi3Settings > settings provide an action that overrides any of the defaults EnableFastEndpoints(AspNetCoreOpenApiDocumentGeneratorSettings, Int32, TagCase, Int32, Int32, Boolean, Boolean) enable support for FastEndpoints in swagger Declaration public static void EnableFastEndpoints(this AspNetCoreOpenApiDocumentGeneratorSettings settings, int tagIndex, TagCase tagCase, int minEndpointVersion, int maxEndpointVersion, bool shortSchemaNames, bool removeEmptySchemas) Parameters Type Name Description NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings settings System.Int32 tagIndex the index of the route path segment to use for tagging/grouping endpoints TagCase tagCase the casing strategy to use on endpoint tags System.Int32 minEndpointVersion endpoints lower than this vesion will not be included in the swagger doc System.Int32 maxEndpointVersion endpoints greater than this version will not be included in the swagger doc System.Boolean shortSchemaNames set to true to make schema names just the name of the class instead of full type name System.Boolean removeEmptySchemas set to true for removing empty schemas from the swagger document. WARNING: enabling this also flattens the inheritance hierachy of the schmemas. EnableJWTBearerAuth(AspNetCoreOpenApiDocumentGeneratorSettings) enable jwt bearer authorization support Declaration public static void EnableJWTBearerAuth(this AspNetCoreOpenApiDocumentGeneratorSettings settings) Parameters Type Name Description NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings settings EndpointFilter(AspNetCoreOpenApiDocumentGeneratorSettings, Func<EndpointDefinition, Boolean>) specify a function to filter out endpoints from the swagger document. this function will be run against every fast endpoint discovered. return true to include the endpoint and return false to exclude the endpoint from the swagger doc. Declaration public static void EndpointFilter(this AspNetCoreOpenApiDocumentGeneratorSettings x, Func<EndpointDefinition, bool> filter) Parameters Type Name Description NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings x System.Func < EndpointDefinition , System.Boolean > filter a function to use for filtering endpoints GetEndpointDefinition(OperationProcessorContext) gets the EndpointDefinition from the nwag operation processor context if this is a FastEndpoint operation. otherwise returns null. Declaration public static EndpointDefinition GetEndpointDefinition(this OperationProcessorContext ctx) Parameters Type Name Description NSwag.Generation.Processors.Contexts.OperationProcessorContext ctx Returns Type Description EndpointDefinition GetExampleFromMetaData(IProducesResponseTypeMetadata) gets the example object if any, from a given FastEndpoints.ProducesResponseTypeMetadata internal class Declaration public static object GetExampleFromMetaData(this IProducesResponseTypeMetadata metadata) Parameters Type Name Description Microsoft.AspNetCore.Http.Metadata.IProducesResponseTypeMetadata metadata Returns Type Description System.Object TagDescriptions(AspNetCoreOpenApiDocumentGeneratorSettings, OpenApiTag[]) add NSwag.OpenApiTag s to a swagger document in order to provide tag descriptions Declaration public static void TagDescriptions(this AspNetCoreOpenApiDocumentGeneratorSettings settings, params OpenApiTag[] documentTags) Parameters Type Name Description NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings settings NSwag.OpenApiTag [] documentTags the NSwag.OpenApiTag s to be added to the swagger doc UseSwaggerGen(IApplicationBuilder, Action<OpenApiDocumentMiddlewareSettings>, Action<SwaggerUi3Settings>) enables the open-api/swagger middleware for fastendpoints. this method is simply a shortcut for the two calls [ app.UseOpenApi() ] and [ app.UseSwaggerUi3(c => c.ConfigureDefaults()) ] Declaration public static IApplicationBuilder UseSwaggerGen(this IApplicationBuilder app, Action<OpenApiDocumentMiddlewareSettings> config = null, Action<SwaggerUi3Settings> uiConfig = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app System.Action < NSwag.AspNetCore.OpenApiDocumentMiddlewareSettings > config optional config action for the open-api middleware System.Action < NSwag.AspNetCore.SwaggerUi3Settings > uiConfig optional config action for the swagger-ui Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder"
  },
  "api/FastEndpoints.Swagger.GlobalConfig.html": {
    "href": "api/FastEndpoints.Swagger.GlobalConfig.html",
    "title": "Class GlobalConfig | FastEndpoints",
    "keywords": "Class GlobalConfig gives access to the fastendpoints global configuration settings Inheritance System.Object GlobalConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Swagger Assembly : FastEndpoints.Swagger.dll Syntax public static class GlobalConfig Properties EndpointRoutePrefix prefix for all routes (example 'api'). Declaration public static string EndpointRoutePrefix { get; } Property Value Type Description System.String VersioningPrefix the prefix used in front of the version (for example 'v' produces 'v{version}'). Declaration public static string VersioningPrefix { get; } Property Value Type Description System.String"
  },
  "api/FastEndpoints.Swagger.html": {
    "href": "api/FastEndpoints.Swagger.html",
    "title": "Namespace FastEndpoints.Swagger | FastEndpoints",
    "keywords": "Namespace FastEndpoints.Swagger Classes Extensions a set of extension methods for adding swagger support GlobalConfig gives access to the fastendpoints global configuration settings ValidationSchemaProcessor Enums TagCase enum values for swagger tag naming strategy"
  },
  "api/FastEndpoints.Swagger.TagCase.html": {
    "href": "api/FastEndpoints.Swagger.TagCase.html",
    "title": "Enum TagCase | FastEndpoints",
    "keywords": "Enum TagCase enum values for swagger tag naming strategy Namespace : FastEndpoints.Swagger Assembly : FastEndpoints.Swagger.dll Syntax public enum TagCase Fields Name Description LowerCase enum values for swagger tag naming strategy None enum values for swagger tag naming strategy TitleCase enum values for swagger tag naming strategy"
  },
  "api/FastEndpoints.Swagger.ValidationSchemaProcessor.html": {
    "href": "api/FastEndpoints.Swagger.ValidationSchemaProcessor.html",
    "title": "Class ValidationSchemaProcessor | FastEndpoints",
    "keywords": "Class ValidationSchemaProcessor Inheritance System.Object ValidationSchemaProcessor Implements NJsonSchema.Generation.ISchemaProcessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints.Swagger Assembly : FastEndpoints.Swagger.dll Syntax public class ValidationSchemaProcessor : ISchemaProcessor Constructors ValidationSchemaProcessor() Declaration public ValidationSchemaProcessor() Methods Process(SchemaProcessorContext) Declaration public void Process(SchemaProcessorContext context) Parameters Type Name Description NJsonSchema.Generation.SchemaProcessorContext context Implements NJsonSchema.Generation.ISchemaProcessor"
  },
  "api/FastEndpoints.ThrottleAttribute.html": {
    "href": "api/FastEndpoints.ThrottleAttribute.html",
    "title": "Class ThrottleAttribute | FastEndpoints",
    "keywords": "Class ThrottleAttribute rate limit requests to this endpoint based on a request http header sent by the client. Inheritance System.Object System.Attribute ThrottleAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.Attributes.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class ThrottleAttribute : Attribute Constructors ThrottleAttribute(Int32, Double, String) rate limit requests to this endpoint based on a request http header sent by the client. Declaration public ThrottleAttribute(int hitLimit, double durationSeconds, string headerName = null) Parameters Type Name Description System.Int32 hitLimit how many requests are allowed within the given duration System.Double durationSeconds the frequency in seconds where the accrued hit count should be reset System.String headerName the name of the request header used to uniquely identify clients. header name can also be configured globally using app.UseFastEndpoints(c=> c.ThrottleOptions...) not specifying a header name will first look for 'X-Forwarded-For' header and if not present, will use HttpContext.Connection.RemoteIpAddress . Properties DurationSeconds the frequency in seconds where the accrued hit count should be reset Declaration public double DurationSeconds { get; set; } Property Value Type Description System.Double HeaderName the name of the request header used to uniquely identify clients. header name can also be configured globally using app.UseFastEndpoints(c=> c.Throttle...) not specifying a header name will first look for 'X-Forwarded-For' header and if not present, will use HttpContext.Connection.RemoteIpAddress . Declaration public string HeaderName { get; set; } Property Value Type Description System.String HitLimit how many requests are allowed within the given duration Declaration public int HitLimit { get; set; } Property Value Type Description System.Int32"
  },
  "api/FastEndpoints.ThrottleOptions.html": {
    "href": "api/FastEndpoints.ThrottleOptions.html",
    "title": "Class ThrottleOptions | FastEndpoints",
    "keywords": "Class ThrottleOptions global settings for throttling Inheritance System.Object ThrottleOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class ThrottleOptions Properties HeaderName header used to track rate limits Declaration public string HeaderName { set; } Property Value Type Description System.String Message custom error response message for throttled requests Declaration public string Message { set; } Property Value Type Description System.String"
  },
  "api/FastEndpoints.UserPrivileges.html": {
    "href": "api/FastEndpoints.UserPrivileges.html",
    "title": "Class UserPrivileges | FastEndpoints",
    "keywords": "Class UserPrivileges the priviledges of the user which will be embedded in the jwt Inheritance System.Object UserPrivileges Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public sealed class UserPrivileges Properties Claims claims of the user Declaration public List<Claim> Claims { get; } Property Value Type Description System.Collections.Generic.List < System.Security.Claims.Claim > Permissions allowed permissions for the user Declaration public List<string> Permissions { get; } Property Value Type Description System.Collections.Generic.List < System.String > Roles roles of the user Declaration public List<string> Roles { get; } Property Value Type Description System.Collections.Generic.List < System.String >"
  },
  "api/FastEndpoints.ValidationFailureException.html": {
    "href": "api/FastEndpoints.ValidationFailureException.html",
    "title": "Class ValidationFailureException | FastEndpoints",
    "keywords": "Class ValidationFailureException the exception thrown when validation failure occurs. inspect the Failures property for details. Inheritance System.Object System.Exception ValidationFailureException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class ValidationFailureException : Exception, ISerializable Constructors ValidationFailureException() the exception thrown when validation failure occurs. inspect the Failures property for details. Declaration public ValidationFailureException() ValidationFailureException(IEnumerable<ValidationFailure>, String) the exception thrown when validation failure occurs. inspect the Failures property for details. Declaration public ValidationFailureException(IEnumerable<ValidationFailure> failures, string message) Parameters Type Name Description System.Collections.Generic.IEnumerable < FluentValidation.Results.ValidationFailure > failures System.String message ValidationFailureException(String, Exception) the exception thrown when validation failure occurs. inspect the Failures property for details. Declaration public ValidationFailureException(string message, Exception innerException) Parameters Type Name Description System.String message System.Exception innerException ValidationFailureException(String) the exception thrown when validation failure occurs. inspect the Failures property for details. Declaration public ValidationFailureException(string message) Parameters Type Name Description System.String message Properties Failures the collection of failures that have occured. Declaration public IEnumerable<ValidationFailure> Failures { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < FluentValidation.Results.ValidationFailure > Implements System.Runtime.Serialization.ISerializable"
  },
  "api/FastEndpoints.Validator-1.html": {
    "href": "api/FastEndpoints.Validator-1.html",
    "title": "Class Validator<TRequest> | FastEndpoints",
    "keywords": "Class Validator<TRequest> inherit from this base class to define your dto validators HINT: validators are registered as singletons. i.e. the same validator instance is used to validate each request for best performance. hance, do not maintain state in your validators. Inheritance System.Object FluentValidation.AbstractValidator <TRequest> Validator<TRequest> Implements FluentValidation.IValidator <TRequest> FluentValidation.IValidator System.Collections.Generic.IEnumerable < FluentValidation.IValidationRule > System.Collections.IEnumerable IServiceResolverBase Inherited Members FluentValidation.AbstractValidator<TRequest>.FluentValidation.IValidator.Validate(FluentValidation.IValidationContext) FluentValidation.AbstractValidator<TRequest>.FluentValidation.IValidator.ValidateAsync(FluentValidation.IValidationContext, System.Threading.CancellationToken) FluentValidation.AbstractValidator<TRequest>.Validate(TRequest) FluentValidation.AbstractValidator<TRequest>.ValidateAsync(TRequest, System.Threading.CancellationToken) FluentValidation.AbstractValidator<TRequest>.Validate(FluentValidation.ValidationContext<TRequest>) FluentValidation.AbstractValidator<TRequest>.ValidateAsync(FluentValidation.ValidationContext<TRequest>, System.Threading.CancellationToken) FluentValidation.AbstractValidator<TRequest>.CreateDescriptor() FluentValidation.AbstractValidator<TRequest>.FluentValidation.IValidator.CanValidateInstancesOfType(System.Type) FluentValidation.AbstractValidator<TRequest>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<TRequest, TProperty>>) FluentValidation.AbstractValidator<TRequest>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<TRequest, TProperty>>, System.Func<TProperty, TTransformed>) FluentValidation.AbstractValidator<TRequest>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<TRequest, TProperty>>, System.Func<TRequest, TProperty, TTransformed>) FluentValidation.AbstractValidator<TRequest>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<TRequest, System.Collections.Generic.IEnumerable<TElement>>>) FluentValidation.AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<TRequest, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>) FluentValidation.AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<TRequest, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TRequest, TElement, TTransformed>) FluentValidation.AbstractValidator<TRequest>.RuleSet(System.String, System.Action) FluentValidation.AbstractValidator<TRequest>.When(System.Func<TRequest, System.Boolean>, System.Action) FluentValidation.AbstractValidator<TRequest>.When(System.Func<TRequest, FluentValidation.ValidationContext<TRequest>, System.Boolean>, System.Action) FluentValidation.AbstractValidator<TRequest>.Unless(System.Func<TRequest, System.Boolean>, System.Action) FluentValidation.AbstractValidator<TRequest>.Unless(System.Func<TRequest, FluentValidation.ValidationContext<TRequest>, System.Boolean>, System.Action) FluentValidation.AbstractValidator<TRequest>.WhenAsync(System.Func<TRequest, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action) FluentValidation.AbstractValidator<TRequest>.WhenAsync(System.Func<TRequest, FluentValidation.ValidationContext<TRequest>, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action) FluentValidation.AbstractValidator<TRequest>.UnlessAsync(System.Func<TRequest, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action) FluentValidation.AbstractValidator<TRequest>.UnlessAsync(System.Func<TRequest, FluentValidation.ValidationContext<TRequest>, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action) FluentValidation.AbstractValidator<TRequest>.Include(FluentValidation.IValidator<TRequest>) FluentValidation.AbstractValidator<TRequest>.Include<TValidator>(System.Func<TRequest, TValidator>) FluentValidation.AbstractValidator<TRequest>.GetEnumerator() FluentValidation.AbstractValidator<TRequest>.System.Collections.IEnumerable.GetEnumerator() FluentValidation.AbstractValidator<TRequest>.EnsureInstanceNotNull(System.Object) FluentValidation.AbstractValidator<TRequest>.PreValidate(FluentValidation.ValidationContext<TRequest>, FluentValidation.Results.ValidationResult) FluentValidation.AbstractValidator<TRequest>.RaiseValidationException(FluentValidation.ValidationContext<TRequest>, FluentValidation.Results.ValidationResult) FluentValidation.AbstractValidator<TRequest>.CascadeMode FluentValidation.AbstractValidator<TRequest>.ClassLevelCascadeMode FluentValidation.AbstractValidator<TRequest>.RuleLevelCascadeMode System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public abstract class Validator<TRequest> : AbstractValidator<TRequest>, IValidator<TRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable, IServiceResolverBase where TRequest : class Type Parameters Name Description TRequest the type of the request dto Methods CreateScope() inherit from this base class to define your dto validators HINT: validators are registered as singletons. i.e. the same validator instance is used to validate each request for best performance. hance, do not maintain state in your validators. Declaration public IServiceScope CreateScope() Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceScope Resolve(Type) inherit from this base class to define your dto validators HINT: validators are registered as singletons. i.e. the same validator instance is used to validate each request for best performance. hance, do not maintain state in your validators. Declaration public object Resolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object Resolve<TService>() inherit from this base class to define your dto validators HINT: validators are registered as singletons. i.e. the same validator instance is used to validate each request for best performance. hance, do not maintain state in your validators. Declaration public TService Resolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService TryResolve(Type) inherit from this base class to define your dto validators HINT: validators are registered as singletons. i.e. the same validator instance is used to validate each request for best performance. hance, do not maintain state in your validators. Declaration public object TryResolve(Type typeOfService) Parameters Type Name Description System.Type typeOfService Returns Type Description System.Object TryResolve<TService>() inherit from this base class to define your dto validators HINT: validators are registered as singletons. i.e. the same validator instance is used to validate each request for best performance. hance, do not maintain state in your validators. Declaration public TService TryResolve<TService>() where TService : class Returns Type Description TService Type Parameters Name Description TService Implements FluentValidation.IValidator<T> FluentValidation.IValidator System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable IServiceResolverBase"
  },
  "api/FastEndpoints.VersioningOptions.html": {
    "href": "api/FastEndpoints.VersioningOptions.html",
    "title": "Class VersioningOptions | FastEndpoints",
    "keywords": "Class VersioningOptions global endpoint versioning options Inheritance System.Object VersioningOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FastEndpoints Assembly : FastEndpoints.dll Syntax public class VersioningOptions Properties DefaultVersion this value will be used on endpoints that does not specify a version Declaration public int DefaultVersion { set; } Property Value Type Description System.Int32 Prefix the prefix used in front of the version (for example 'v' produces 'v{version}'). Declaration public string Prefix { set; } Property Value Type Description System.String PrependToRoute set to true if you'd like to prefix the version to the route instead of being suffixed which is the default Declaration public bool? PrependToRoute { set; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "index.html": {
    "href": "index.html",
    "title": "API REF Home | FastEndpoints",
    "keywords": "API Reference Documentation"
  }
}