### YamlMime:ManagedReference
items:
- uid: FastEndpoints.EventBus`1
  commentId: T:FastEndpoints.EventBus`1
  id: EventBus`1
  parent: FastEndpoints
  children:
  - FastEndpoints.EventBus`1.#ctor(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}},FastEndpoints.IEventReceiver{`0})
  - FastEndpoints.EventBus`1.PublishAsync(`0,FastEndpoints.Mode,System.Threading.CancellationToken)
  - FastEndpoints.EventBus`1.PublishFilteredAsync(`0,System.Func{System.Type,System.Boolean},FastEndpoints.Mode,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: EventBus<TEvent>
  nameWithType: EventBus<TEvent>
  fullName: FastEndpoints.EventBus<TEvent>
  type: Class
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: event notification bus which uses an in-process pub/sub messaging system
  example: []
  syntax:
    content: 'public sealed class EventBus<TEvent> : EventBase where TEvent : notnull'
    typeParameters:
    - id: TEvent
      description: the type of notification event dto
    content.vb: Public NotInheritable Class EventBus(Of TEvent) Inherits EventBase
  inheritance:
  - System.Object
  - FastEndpoints.EventBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: EventBus(Of TEvent)
  fullName.vb: FastEndpoints.EventBus(Of TEvent)
  name.vb: EventBus(Of TEvent)
- uid: FastEndpoints.EventBus`1.#ctor(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}},FastEndpoints.IEventReceiver{`0})
  commentId: M:FastEndpoints.EventBus`1.#ctor(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}},FastEndpoints.IEventReceiver{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}},FastEndpoints.IEventReceiver{`0})'
  parent: FastEndpoints.EventBus`1
  langs:
  - csharp
  - vb
  name: EventBus(IEnumerable<IEventHandler<TEvent>>?, IEventReceiver<TEvent>?)
  nameWithType: EventBus<TEvent>.EventBus(IEnumerable<IEventHandler<TEvent>>?, IEventReceiver<TEvent>?)
  fullName: FastEndpoints.EventBus<TEvent>.EventBus(System.Collections.Generic.IEnumerable<FastEndpoints.IEventHandler<TEvent>>?, FastEndpoints.IEventReceiver<TEvent>?)
  type: Constructor
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: instantiates an event bus for the given event dto type.
  example: []
  syntax:
    content: public EventBus(IEnumerable<IEventHandler<TEvent>>? eventHandlers = null, IEventReceiver<TEvent>? testEventReceiver = null)
    parameters:
    - id: eventHandlers
      type: System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{{TEvent}}}
      description: a collection of concrete event handler implementations that should receive notifications from this event bus
    - id: testEventReceiver
      type: FastEndpoints.IEventReceiver{{TEvent}}
      description: a test event receiver that can be used to assert receipt of events
    content.vb: Public Sub New(eventHandlers As IEnumerable(Of IEventHandler(Of TEvent)) = Nothing, testEventReceiver As IEventReceiver(Of TEvent) = Nothing)
  overload: FastEndpoints.EventBus`1.#ctor*
  nameWithType.vb: EventBus(Of TEvent).New(IEnumerable(Of IEventHandler(Of TEvent)), IEventReceiver(Of TEvent))
  fullName.vb: FastEndpoints.EventBus(Of TEvent).New(System.Collections.Generic.IEnumerable(Of FastEndpoints.IEventHandler(Of TEvent)), FastEndpoints.IEventReceiver(Of TEvent))
  name.vb: New(IEnumerable(Of IEventHandler(Of TEvent)), IEventReceiver(Of TEvent))
- uid: FastEndpoints.EventBus`1.PublishAsync(`0,FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.EventBus`1.PublishAsync(`0,FastEndpoints.Mode,System.Threading.CancellationToken)
  id: PublishAsync(`0,FastEndpoints.Mode,System.Threading.CancellationToken)
  parent: FastEndpoints.EventBus`1
  langs:
  - csharp
  - vb
  name: PublishAsync(TEvent, Mode, CancellationToken)
  nameWithType: EventBus<TEvent>.PublishAsync(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.EventBus<TEvent>.PublishAsync(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: publish the given model/dto to all the subscribers of the event notification
  example: []
  syntax:
    content: public Task PublishAsync(TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default)
    parameters:
    - id: eventModel
      type: '{TEvent}'
      description: the notification event model/dto to publish
    - id: waitMode
      type: FastEndpoints.Mode
      description: specify whether to wait for none, any or all of the subscribers to complete their work
    - id: cancellation
      type: System.Threading.CancellationToken
      description: an optional cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: >-
        a Task that matches the wait mode specified.

        <xref href="FastEndpoints.Mode.WaitForNone" data-throw-if-not-resolved="false"></xref> returns an already completed Task (fire and forget).

        <xref href="FastEndpoints.Mode.WaitForAny" data-throw-if-not-resolved="false"></xref> returns a Task that will complete when any of the subscribers complete their work.

        <xref href="FastEndpoints.Mode.WaitForAll" data-throw-if-not-resolved="false"></xref> return a Task that will complete only when all the subscribers complete their work.
    content.vb: Public Function PublishAsync(eventModel As TEvent, waitMode As Mode = Mode.WaitForAll, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.EventBus`1.PublishAsync*
  nameWithType.vb: EventBus(Of TEvent).PublishAsync(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.EventBus(Of TEvent).PublishAsync(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
- uid: FastEndpoints.EventBus`1.PublishFilteredAsync(`0,System.Func{System.Type,System.Boolean},FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.EventBus`1.PublishFilteredAsync(`0,System.Func{System.Type,System.Boolean},FastEndpoints.Mode,System.Threading.CancellationToken)
  id: PublishFilteredAsync(`0,System.Func{System.Type,System.Boolean},FastEndpoints.Mode,System.Threading.CancellationToken)
  parent: FastEndpoints.EventBus`1
  langs:
  - csharp
  - vb
  name: PublishFilteredAsync(TEvent, Func<Type, bool>, Mode, CancellationToken)
  nameWithType: EventBus<TEvent>.PublishFilteredAsync(TEvent, Func<Type, bool>, Mode, CancellationToken)
  fullName: FastEndpoints.EventBus<TEvent>.PublishFilteredAsync(TEvent, System.Func<System.Type, bool>, FastEndpoints.Mode, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: publish the given model/dto to a subset of the subscribers of the event notification
  example: []
  syntax:
    content: public Task PublishFilteredAsync(TEvent eventModel, Func<Type, bool> handlerFilter, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default)
    parameters:
    - id: eventModel
      type: '{TEvent}'
      description: the notification event model/dto to publish
    - id: handlerFilter
      type: System.Func{System.Type,System.Boolean}
      description: >-
        a predicate for selecting which of the registered event handlers should be executed. if the predicate returns <code>false</code> for a particular event

        handler, that handler will not be executed during the invocation.
    - id: waitMode
      type: FastEndpoints.Mode
      description: specify whether to wait for none, any or all of the subscribers to complete their work
    - id: cancellation
      type: System.Threading.CancellationToken
      description: an optional cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: >-
        a Task that matches the wait mode specified.

        <xref href="FastEndpoints.Mode.WaitForNone" data-throw-if-not-resolved="false"></xref> returns an already completed Task (fire and forget).

        <xref href="FastEndpoints.Mode.WaitForAny" data-throw-if-not-resolved="false"></xref> returns a Task that will complete when any of the subscribers complete their work.

        <xref href="FastEndpoints.Mode.WaitForAll" data-throw-if-not-resolved="false"></xref> return a Task that will complete only when all the subscribers complete their work.
    content.vb: Public Function PublishFilteredAsync(eventModel As TEvent, handlerFilter As Func(Of Type, Boolean), waitMode As Mode = Mode.WaitForAll, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.EventBus`1.PublishFilteredAsync*
  nameWithType.vb: EventBus(Of TEvent).PublishFilteredAsync(TEvent, Func(Of Type, Boolean), Mode, CancellationToken)
  fullName.vb: FastEndpoints.EventBus(Of TEvent).PublishFilteredAsync(TEvent, System.Func(Of System.Type, Boolean), FastEndpoints.Mode, System.Threading.CancellationToken)
  name.vb: PublishFilteredAsync(TEvent, Func(Of Type, Boolean), Mode, CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FastEndpoints.EventBase
  commentId: T:FastEndpoints.EventBase
  parent: FastEndpoints
  href: FastEndpoints.EventBase.html
  name: EventBase
  nameWithType: EventBase
  fullName: FastEndpoints.EventBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.EventBus`1.#ctor*
  commentId: Overload:FastEndpoints.EventBus`1.#ctor
  href: FastEndpoints.EventBus-1.html#FastEndpoints_EventBus_1__ctor_System_Collections_Generic_IEnumerable_FastEndpoints_IEventHandler__0___FastEndpoints_IEventReceiver__0__
  name: EventBus
  nameWithType: EventBus<TEvent>.EventBus
  fullName: FastEndpoints.EventBus<TEvent>.EventBus
  nameWithType.vb: EventBus(Of TEvent).New
  fullName.vb: FastEndpoints.EventBus(Of TEvent).New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{{TEvent}}}
  commentId: T:System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IEventHandler<TEvent>>
  nameWithType: IEnumerable<IEventHandler<TEvent>>
  fullName: System.Collections.Generic.IEnumerable<FastEndpoints.IEventHandler<TEvent>>
  nameWithType.vb: IEnumerable(Of IEventHandler(Of TEvent))
  fullName.vb: System.Collections.Generic.IEnumerable(Of FastEndpoints.IEventHandler(Of TEvent))
  name.vb: IEnumerable(Of IEventHandler(Of TEvent))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FastEndpoints.IEventHandler`1
    name: IEventHandler
  - name: <
  - name: TEvent
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FastEndpoints.IEventHandler`1
    name: IEventHandler
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: )
- uid: FastEndpoints.IEventReceiver{{TEvent}}
  commentId: T:FastEndpoints.IEventReceiver{`0}
  parent: FastEndpoints
  definition: FastEndpoints.IEventReceiver`1
  href: FastEndpoints.IEventReceiver-1.html
  name: IEventReceiver<TEvent>
  nameWithType: IEventReceiver<TEvent>
  fullName: FastEndpoints.IEventReceiver<TEvent>
  nameWithType.vb: IEventReceiver(Of TEvent)
  fullName.vb: FastEndpoints.IEventReceiver(Of TEvent)
  name.vb: IEventReceiver(Of TEvent)
  spec.csharp:
  - uid: FastEndpoints.IEventReceiver`1
    name: IEventReceiver
    href: FastEndpoints.IEventReceiver-1.html
  - name: <
  - name: TEvent
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.IEventReceiver`1
    name: IEventReceiver
    href: FastEndpoints.IEventReceiver-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: FastEndpoints.IEventReceiver`1
  commentId: T:FastEndpoints.IEventReceiver`1
  href: FastEndpoints.IEventReceiver-1.html
  name: IEventReceiver<TEvent>
  nameWithType: IEventReceiver<TEvent>
  fullName: FastEndpoints.IEventReceiver<TEvent>
  nameWithType.vb: IEventReceiver(Of TEvent)
  fullName.vb: FastEndpoints.IEventReceiver(Of TEvent)
  name.vb: IEventReceiver(Of TEvent)
  spec.csharp:
  - uid: FastEndpoints.IEventReceiver`1
    name: IEventReceiver
    href: FastEndpoints.IEventReceiver-1.html
  - name: <
  - name: TEvent
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.IEventReceiver`1
    name: IEventReceiver
    href: FastEndpoints.IEventReceiver-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
- uid: FastEndpoints.Mode.WaitForNone
  commentId: F:FastEndpoints.Mode.WaitForNone
  href: FastEndpoints.Mode.html#FastEndpoints_Mode_WaitForNone
  name: WaitForNone
  nameWithType: Mode.WaitForNone
  fullName: FastEndpoints.Mode.WaitForNone
- uid: FastEndpoints.Mode.WaitForAny
  commentId: F:FastEndpoints.Mode.WaitForAny
  href: FastEndpoints.Mode.html#FastEndpoints_Mode_WaitForAny
  name: WaitForAny
  nameWithType: Mode.WaitForAny
  fullName: FastEndpoints.Mode.WaitForAny
- uid: FastEndpoints.Mode.WaitForAll
  commentId: F:FastEndpoints.Mode.WaitForAll
  href: FastEndpoints.Mode.html#FastEndpoints_Mode_WaitForAll
  name: WaitForAll
  nameWithType: Mode.WaitForAll
  fullName: FastEndpoints.Mode.WaitForAll
- uid: FastEndpoints.EventBus`1.PublishAsync*
  commentId: Overload:FastEndpoints.EventBus`1.PublishAsync
  href: FastEndpoints.EventBus-1.html#FastEndpoints_EventBus_1_PublishAsync__0_FastEndpoints_Mode_System_Threading_CancellationToken_
  name: PublishAsync
  nameWithType: EventBus<TEvent>.PublishAsync
  fullName: FastEndpoints.EventBus<TEvent>.PublishAsync
  nameWithType.vb: EventBus(Of TEvent).PublishAsync
  fullName.vb: FastEndpoints.EventBus(Of TEvent).PublishAsync
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: FastEndpoints.Mode
  commentId: T:FastEndpoints.Mode
  parent: FastEndpoints
  href: FastEndpoints.Mode.html
  name: Mode
  nameWithType: Mode
  fullName: FastEndpoints.Mode
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FastEndpoints.EventBus`1.PublishFilteredAsync*
  commentId: Overload:FastEndpoints.EventBus`1.PublishFilteredAsync
  href: FastEndpoints.EventBus-1.html#FastEndpoints_EventBus_1_PublishFilteredAsync__0_System_Func_System_Type_System_Boolean__FastEndpoints_Mode_System_Threading_CancellationToken_
  name: PublishFilteredAsync
  nameWithType: EventBus<TEvent>.PublishFilteredAsync
  fullName: FastEndpoints.EventBus<TEvent>.PublishFilteredAsync
  nameWithType.vb: EventBus(Of TEvent).PublishFilteredAsync
  fullName.vb: FastEndpoints.EventBus(Of TEvent).PublishFilteredAsync
- uid: System.Func{System.Type,System.Boolean}
  commentId: T:System.Func{System.Type,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Type, bool>
  nameWithType: Func<Type, bool>
  fullName: System.Func<System.Type, bool>
  nameWithType.vb: Func(Of Type, Boolean)
  fullName.vb: System.Func(Of System.Type, Boolean)
  name.vb: Func(Of Type, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
