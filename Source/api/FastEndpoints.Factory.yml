### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Factory
  commentId: T:FastEndpoints.Factory
  id: Factory
  parent: FastEndpoints
  children:
  - FastEndpoints.Factory.AddServicesForUnitTesting(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - FastEndpoints.Factory.AddTestServices(Microsoft.AspNetCore.Http.HttpContext,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  - FastEndpoints.Factory.Create``1(Microsoft.AspNetCore.Http.DefaultHttpContext,System.Object[])
  - FastEndpoints.Factory.Create``1(System.Action{Microsoft.AspNetCore.Http.DefaultHttpContext},System.Object[])
  - FastEndpoints.Factory.Create``1(System.Object[])
  - FastEndpoints.Factory.CreateEvent``1(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{``0}},System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  - FastEndpoints.Factory.CreateMapper``1(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  - FastEndpoints.Factory.CreateValidator``1(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  langs:
  - csharp
  - vb
  name: Factory
  nameWithType: Factory
  fullName: FastEndpoints.Factory
  type: Class
  source:
    id: Factory
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\Factory.cs
    startLine: 10
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\na factory for instantiaing endpoints for testing purposes\n"
  example: []
  syntax:
    content: public static class Factory
    content.vb: Public Module Factory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FastEndpoints.Factory.Create``1(Microsoft.AspNetCore.Http.DefaultHttpContext,System.Object[])
  commentId: M:FastEndpoints.Factory.Create``1(Microsoft.AspNetCore.Http.DefaultHttpContext,System.Object[])
  id: Create``1(Microsoft.AspNetCore.Http.DefaultHttpContext,System.Object[])
  parent: FastEndpoints.Factory
  langs:
  - csharp
  - vb
  name: Create<TEndpoint>(DefaultHttpContext, Object[])
  nameWithType: Factory.Create<TEndpoint>(DefaultHttpContext, Object[])
  fullName: FastEndpoints.Factory.Create<TEndpoint>(Microsoft.AspNetCore.Http.DefaultHttpContext, System.Object[])
  type: Method
  source:
    id: Create
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\Factory.cs
    startLine: 20
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nget an instance of an endpoint suitable for unit testing\n"
  example: []
  syntax:
    content: >-
      public static TEndpoint Create<TEndpoint>(DefaultHttpContext httpContext, params object[] ctorDependencies)

          where TEndpoint : class, IEndpoint
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.DefaultHttpContext
      description: a default http context object
    - id: ctorDependencies
      type: System.Object[]
      description: the dependencies of the endpoint if it has any constructor injected dependencies
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint to create an instance of
    return:
      type: '{TEndpoint}'
    content.vb: Public Shared Function Create(Of TEndpoint As {Class, IEndpoint})(httpContext As DefaultHttpContext, ParamArray ctorDependencies As Object()) As TEndpoint
  overload: FastEndpoints.Factory.Create*
  nameWithType.vb: Factory.Create(Of TEndpoint)(DefaultHttpContext, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Factory.Create(Of TEndpoint)(Microsoft.AspNetCore.Http.DefaultHttpContext, System.Object())
  name.vb: Create(Of TEndpoint)(DefaultHttpContext, Object())
- uid: FastEndpoints.Factory.Create``1(System.Action{Microsoft.AspNetCore.Http.DefaultHttpContext},System.Object[])
  commentId: M:FastEndpoints.Factory.Create``1(System.Action{Microsoft.AspNetCore.Http.DefaultHttpContext},System.Object[])
  id: Create``1(System.Action{Microsoft.AspNetCore.Http.DefaultHttpContext},System.Object[])
  parent: FastEndpoints.Factory
  langs:
  - csharp
  - vb
  name: Create<TEndpoint>(Action<DefaultHttpContext>, Object[])
  nameWithType: Factory.Create<TEndpoint>(Action<DefaultHttpContext>, Object[])
  fullName: FastEndpoints.Factory.Create<TEndpoint>(System.Action<Microsoft.AspNetCore.Http.DefaultHttpContext>, System.Object[])
  type: Method
  source:
    id: Create
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\Factory.cs
    startLine: 46
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nget an instance of an endpoint suitable for unit testing\n"
  example: []
  syntax:
    content: >-
      public static TEndpoint Create<TEndpoint>(Action<DefaultHttpContext> httpContext, params object[] ctorDependencies)

          where TEndpoint : class, IEndpoint
    parameters:
    - id: httpContext
      type: System.Action{Microsoft.AspNetCore.Http.DefaultHttpContext}
      description: an action for configuring the default http context object
    - id: ctorDependencies
      type: System.Object[]
      description: the dependencies of the endpoint if it has any constructor injected arguments
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint to create an instance of
    return:
      type: '{TEndpoint}'
    content.vb: Public Shared Function Create(Of TEndpoint As {Class, IEndpoint})(httpContext As Action(Of DefaultHttpContext), ParamArray ctorDependencies As Object()) As TEndpoint
  overload: FastEndpoints.Factory.Create*
  nameWithType.vb: Factory.Create(Of TEndpoint)(Action(Of DefaultHttpContext), Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Factory.Create(Of TEndpoint)(System.Action(Of Microsoft.AspNetCore.Http.DefaultHttpContext), System.Object())
  name.vb: Create(Of TEndpoint)(Action(Of DefaultHttpContext), Object())
- uid: FastEndpoints.Factory.Create``1(System.Object[])
  commentId: M:FastEndpoints.Factory.Create``1(System.Object[])
  id: Create``1(System.Object[])
  parent: FastEndpoints.Factory
  langs:
  - csharp
  - vb
  name: Create<TEndpoint>(Object[])
  nameWithType: Factory.Create<TEndpoint>(Object[])
  fullName: FastEndpoints.Factory.Create<TEndpoint>(System.Object[])
  type: Method
  source:
    id: Create
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\Factory.cs
    startLine: 58
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nget an instance of an endpoint suitable for unit testing\n"
  example: []
  syntax:
    content: >-
      public static TEndpoint Create<TEndpoint>(params object[] ctorDependencies)

          where TEndpoint : class, IEndpoint
    parameters:
    - id: ctorDependencies
      type: System.Object[]
      description: the dependencies of the endpoint if it has any constructor injected dependencies
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint to create an instance of
    return:
      type: '{TEndpoint}'
    content.vb: Public Shared Function Create(Of TEndpoint As {Class, IEndpoint})(ParamArray ctorDependencies As Object()) As TEndpoint
  overload: FastEndpoints.Factory.Create*
  nameWithType.vb: Factory.Create(Of TEndpoint)(Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Factory.Create(Of TEndpoint)(System.Object())
  name.vb: Create(Of TEndpoint)(Object())
- uid: FastEndpoints.Factory.AddServicesForUnitTesting(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:FastEndpoints.Factory.AddServicesForUnitTesting(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddServicesForUnitTesting(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: FastEndpoints.Factory
  langs:
  - csharp
  - vb
  name: AddServicesForUnitTesting(IServiceCollection)
  nameWithType: Factory.AddServicesForUnitTesting(IServiceCollection)
  fullName: FastEndpoints.Factory.AddServicesForUnitTesting(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddServicesForUnitTesting
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\Factory.cs
    startLine: 66
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nadds the minimum required set of services for unit testing FE endpoints\n"
  example: []
  syntax:
    content: public static IServiceCollection AddServicesForUnitTesting(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddServicesForUnitTesting(services As IServiceCollection) As IServiceCollection
  overload: FastEndpoints.Factory.AddServicesForUnitTesting*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FastEndpoints.Factory.AddTestServices(Microsoft.AspNetCore.Http.HttpContext,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:FastEndpoints.Factory.AddTestServices(Microsoft.AspNetCore.Http.HttpContext,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  id: AddTestServices(Microsoft.AspNetCore.Http.HttpContext,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  isExtensionMethod: true
  parent: FastEndpoints.Factory
  langs:
  - csharp
  - vb
  name: AddTestServices(HttpContext, Action<IServiceCollection>)
  nameWithType: Factory.AddTestServices(HttpContext, Action<IServiceCollection>)
  fullName: FastEndpoints.Factory.AddTestServices(Microsoft.AspNetCore.Http.HttpContext, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  type: Method
  source:
    id: AddTestServices
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\Factory.cs
    startLine: 79
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nregister fake/mock/test services for the http context. typically only used with unit tests with the <code>Factory.Create()</code>&quot; method/>\n"
  example: []
  syntax:
    content: public static void AddTestServices(this HttpContext ctx, Action<IServiceCollection> s)
    parameters:
    - id: ctx
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: s
      type: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
      description: an action for adding services to the <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref>
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AddTestServices(ctx As HttpContext, s As Action(Of IServiceCollection))
  overload: FastEndpoints.Factory.AddTestServices*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: thrown if the <xref href="Microsoft.AspNetCore.Http.HttpContext.RequestServices" data-throw-if-not-resolved="false"></xref> is not empty
  nameWithType.vb: Factory.AddTestServices(HttpContext, Action(Of IServiceCollection))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Factory.AddTestServices(Microsoft.AspNetCore.Http.HttpContext, System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: AddTestServices(HttpContext, Action(Of IServiceCollection))
- uid: FastEndpoints.Factory.CreateValidator``1(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:FastEndpoints.Factory.CreateValidator``1(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  id: CreateValidator``1(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  parent: FastEndpoints.Factory
  langs:
  - csharp
  - vb
  name: CreateValidator<TValidator>(Action<IServiceCollection>)
  nameWithType: Factory.CreateValidator<TValidator>(Action<IServiceCollection>)
  fullName: FastEndpoints.Factory.CreateValidator<TValidator>(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  type: Method
  source:
    id: CreateValidator
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\Factory.cs
    startLine: 107
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nget an instance of a validator that uses Resolve&lt;T>() methods to obtain services registered in the DI container.\n"
  example: []
  syntax:
    content: >-
      public static TValidator CreateValidator<TValidator>(Action<IServiceCollection> s)

          where TValidator : class, IValidator
    parameters:
    - id: s
      type: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
      description: an action for adding services to the <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TValidator
      description: the type of the validator
    return:
      type: '{TValidator}'
    content.vb: Public Shared Function CreateValidator(Of TValidator As {Class, IValidator})(s As Action(Of IServiceCollection)) As TValidator
  overload: FastEndpoints.Factory.CreateValidator*
  nameWithType.vb: Factory.CreateValidator(Of TValidator)(Action(Of IServiceCollection))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Factory.CreateValidator(Of TValidator)(System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: CreateValidator(Of TValidator)(Action(Of IServiceCollection))
- uid: FastEndpoints.Factory.CreateMapper``1(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:FastEndpoints.Factory.CreateMapper``1(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  id: CreateMapper``1(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  parent: FastEndpoints.Factory
  langs:
  - csharp
  - vb
  name: CreateMapper<TMapper>(Action<IServiceCollection>)
  nameWithType: Factory.CreateMapper<TMapper>(Action<IServiceCollection>)
  fullName: FastEndpoints.Factory.CreateMapper<TMapper>(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  type: Method
  source:
    id: CreateMapper
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\Factory.cs
    startLine: 118
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nget an instance of a mapper that uses Resolve&lt;T>() methods to obtain services registered in the DI container.\n"
  example: []
  syntax:
    content: >-
      public static TMapper CreateMapper<TMapper>(Action<IServiceCollection> s)

          where TMapper : class, IMapper
    parameters:
    - id: s
      type: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
      description: an action for adding services to the <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TMapper
      description: the type of the mapper
    return:
      type: '{TMapper}'
    content.vb: Public Shared Function CreateMapper(Of TMapper As {Class, IMapper})(s As Action(Of IServiceCollection)) As TMapper
  overload: FastEndpoints.Factory.CreateMapper*
  nameWithType.vb: Factory.CreateMapper(Of TMapper)(Action(Of IServiceCollection))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Factory.CreateMapper(Of TMapper)(System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: CreateMapper(Of TMapper)(Action(Of IServiceCollection))
- uid: FastEndpoints.Factory.CreateEvent``1(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{``0}},System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:FastEndpoints.Factory.CreateEvent``1(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{``0}},System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  id: CreateEvent``1(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{``0}},System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  parent: FastEndpoints.Factory
  langs:
  - csharp
  - vb
  name: CreateEvent<TEvent>(IEnumerable<IEventHandler<TEvent>>, Action<IServiceCollection>)
  nameWithType: Factory.CreateEvent<TEvent>(IEnumerable<IEventHandler<TEvent>>, Action<IServiceCollection>)
  fullName: FastEndpoints.Factory.CreateEvent<TEvent>(System.Collections.Generic.IEnumerable<FastEndpoints.IEventHandler<TEvent>>, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  type: Method
  source:
    id: CreateEvent
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\Factory.cs
    startLine: 130
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nget an instance of an event suitable for unit testing.\n"
  example: []
  syntax:
    content: >-
      public static TEvent CreateEvent<TEvent>(IEnumerable<IEventHandler<TEvent>> handlers, Action<IServiceCollection> s = null)

          where TEvent : class, IEvent
    parameters:
    - id: handlers
      type: System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{{TEvent}}}
      description: the fake/mock event handlers to register for this event
    - id: s
      type: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
      description: an optional action for adding services to the <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEvent
      description: the type of the event
    return:
      type: '{TEvent}'
    content.vb: Public Shared Function CreateEvent(Of TEvent As {Class, IEvent})(handlers As IEnumerable(Of IEventHandler(Of TEvent)), s As Action(Of IServiceCollection) = Nothing) As TEvent
  overload: FastEndpoints.Factory.CreateEvent*
  nameWithType.vb: Factory.CreateEvent(Of TEvent)(IEnumerable(Of IEventHandler(Of TEvent)), Action(Of IServiceCollection))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FastEndpoints.Factory.CreateEvent(Of TEvent)(System.Collections.Generic.IEnumerable(Of FastEndpoints.IEventHandler(Of TEvent)), System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: CreateEvent(Of TEvent)(IEnumerable(Of IEventHandler(Of TEvent)), Action(Of IServiceCollection))
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Factory.Create*
  commentId: Overload:FastEndpoints.Factory.Create
  name: Create
  nameWithType: Factory.Create
  fullName: FastEndpoints.Factory.Create
- uid: Microsoft.AspNetCore.Http.DefaultHttpContext
  commentId: T:Microsoft.AspNetCore.Http.DefaultHttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: DefaultHttpContext
  nameWithType: DefaultHttpContext
  fullName: Microsoft.AspNetCore.Http.DefaultHttpContext
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{TEndpoint}'
  commentId: '!:TEndpoint'
  definition: TEndpoint
  name: TEndpoint
  nameWithType: TEndpoint
  fullName: TEndpoint
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: TEndpoint
  name: TEndpoint
  nameWithType: TEndpoint
  fullName: TEndpoint
- uid: System.Action{Microsoft.AspNetCore.Http.DefaultHttpContext}
  commentId: T:System.Action{Microsoft.AspNetCore.Http.DefaultHttpContext}
  parent: System
  definition: System.Action`1
  name: Action<DefaultHttpContext>
  nameWithType: Action<DefaultHttpContext>
  fullName: System.Action<Microsoft.AspNetCore.Http.DefaultHttpContext>
  nameWithType.vb: Action(Of DefaultHttpContext)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Http.DefaultHttpContext)
  name.vb: Action(Of DefaultHttpContext)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.DefaultHttpContext
    name: DefaultHttpContext
    nameWithType: DefaultHttpContext
    fullName: Microsoft.AspNetCore.Http.DefaultHttpContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.DefaultHttpContext
    name: DefaultHttpContext
    nameWithType: DefaultHttpContext
    fullName: Microsoft.AspNetCore.Http.DefaultHttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Factory.AddServicesForUnitTesting*
  commentId: Overload:FastEndpoints.Factory.AddServicesForUnitTesting
  name: AddServicesForUnitTesting
  nameWithType: Factory.AddServicesForUnitTesting
  fullName: FastEndpoints.Factory.AddServicesForUnitTesting
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.AspNetCore.Http.HttpContext.RequestServices
  commentId: P:Microsoft.AspNetCore.Http.HttpContext.RequestServices
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: FastEndpoints.Factory.AddTestServices*
  commentId: Overload:FastEndpoints.Factory.AddTestServices
  name: AddTestServices
  nameWithType: Factory.AddTestServices
  fullName: FastEndpoints.Factory.AddTestServices
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  commentId: T:System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  parent: System
  definition: System.Action`1
  name: Action<IServiceCollection>
  nameWithType: Action<IServiceCollection>
  fullName: System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>
  nameWithType.vb: Action(Of IServiceCollection)
  fullName.vb: System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: Action(Of IServiceCollection)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Factory.CreateValidator*
  commentId: Overload:FastEndpoints.Factory.CreateValidator
  name: CreateValidator
  nameWithType: Factory.CreateValidator
  fullName: FastEndpoints.Factory.CreateValidator
- uid: '{TValidator}'
  commentId: '!:TValidator'
  definition: TValidator
  name: TValidator
  nameWithType: TValidator
  fullName: TValidator
- uid: TValidator
  commentId: '!:TValidator'
  name: TValidator
  nameWithType: TValidator
  fullName: TValidator
- uid: FastEndpoints.Factory.CreateMapper*
  commentId: Overload:FastEndpoints.Factory.CreateMapper
  name: CreateMapper
  nameWithType: Factory.CreateMapper
  fullName: FastEndpoints.Factory.CreateMapper
- uid: '{TMapper}'
  commentId: '!:TMapper'
  definition: TMapper
  name: TMapper
  nameWithType: TMapper
  fullName: TMapper
- uid: TMapper
  name: TMapper
  nameWithType: TMapper
  fullName: TMapper
- uid: FastEndpoints.Factory.CreateEvent*
  commentId: Overload:FastEndpoints.Factory.CreateEvent
  name: CreateEvent
  nameWithType: Factory.CreateEvent
  fullName: FastEndpoints.Factory.CreateEvent
- uid: System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{{TEvent}}}
  commentId: T:System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEventHandler<TEvent>>
  nameWithType: IEnumerable<IEventHandler<TEvent>>
  fullName: System.Collections.Generic.IEnumerable<FastEndpoints.IEventHandler<TEvent>>
  nameWithType.vb: IEnumerable(Of IEventHandler(Of TEvent))
  fullName.vb: System.Collections.Generic.IEnumerable(Of FastEndpoints.IEventHandler(Of TEvent))
  name.vb: IEnumerable(Of IEventHandler(Of TEvent))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.IEventHandler`1
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: FastEndpoints.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.IEventHandler`1
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: FastEndpoints.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
