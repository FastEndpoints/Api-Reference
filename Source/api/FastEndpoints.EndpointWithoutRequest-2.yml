### YamlMime:ManagedReference
items:
- uid: FastEndpoints.EndpointWithoutRequest`2
  commentId: T:FastEndpoints.EndpointWithoutRequest`2
  id: EndpointWithoutRequest`2
  parent: FastEndpoints
  children:
  - FastEndpoints.EndpointWithoutRequest`2.Map
  langs:
  - csharp
  - vb
  name: EndpointWithoutRequest<TResponse, TMapper>
  nameWithType: EndpointWithoutRequest<TResponse, TMapper>
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse, TMapper>
  type: Class
  source:
    id: EndpointWithoutRequest
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 282
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nuse this base class for defining endpoints that doesn&apos;t need a request dto but return a response dto and uses a response mapper.\n"
  example: []
  syntax:
    content: 'public abstract class EndpointWithoutRequest<TResponse, TMapper> : EndpointWithoutRequest<TResponse>, IEndpoint, IHasMapper<TMapper> where TMapper : IResponseMapper, new()'
    typeParameters:
    - id: TResponse
      description: the type of the response dto
    - id: TMapper
      description: the type of the entity mapper
    content.vb: >-
      Public MustInherit Class EndpointWithoutRequest(Of TResponse, TMapper As {IResponseMapper, New})

          Inherits EndpointWithoutRequest(Of TResponse)

          Implements IEndpoint, IHasMapper(Of TMapper)
  inheritance:
  - System.Object
  - FastEndpoints.BaseEndpoint
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  - FastEndpoints.EndpointWithoutRequest{{TResponse}}
  implements:
  - FastEndpoints.IHasMapper{{TMapper}}
  inheritedMembers:
  - FastEndpoints.EndpointWithoutRequest{{TResponse}}.HandleAsync(CancellationToken)
  - FastEndpoints.EndpointWithoutRequest{{TResponse}}.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  - FastEndpoints.EndpointWithoutRequest{{TResponse}}.ExecuteAsync(CancellationToken)
  - FastEndpoints.EndpointWithoutRequest{{TResponse}}.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.TryResolve``1
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.TryResolve(Type)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Resolve``1
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Resolve(Type)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PublishAsync``1({TEvent},FastEndpoints.Mode,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Route``1(System.String,System.Boolean)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Query``1(System.String,System.Boolean)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnBeforeValidate(FastEndpoints.EmptyRequest)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnBeforeValidateAsync(FastEndpoints.EmptyRequest,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnAfterValidate(FastEndpoints.EmptyRequest)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnAfterValidateAsync(FastEndpoints.EmptyRequest,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnBeforeHandle(FastEndpoints.EmptyRequest)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnBeforeHandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnAfterHandle(FastEndpoints.EmptyRequest,{TResponse})
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnAfterHandleAsync(FastEndpoints.EmptyRequest,{TResponse},CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnValidationFailed
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnValidationFailedAsync(CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ValidationFailed
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.User
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Response
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Env
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Logger
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.BaseURL
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HttpMethod
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Form
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Files
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ResponseStarted
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendAsync({TResponse},System.Int32,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendCreatedAtAsync``1(System.Object,{TResponse},System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendCreatedAtAsync(System.String,System.Object,{TResponse},System.Boolean,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendOkAsync({TResponse},CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendOkAsync(CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendErrorsAsync(System.Int32,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendNoContentAsync(CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendNotFoundAsync(CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendUnauthorizedAsync(CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendForbiddenAsync(CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendEventStreamAsync``1(System.String,IAsyncEnumerable{{T}},CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendEmptyJsonObject(CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Get(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Post(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Put(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Patch(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Delete(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Head(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Routes(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Verbs(FastEndpoints.Http[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.DontThrowIfValidationFails
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.DontCatchExceptions
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.RequestBinder(FastEndpoints.IRequestBinder{FastEndpoints.EmptyRequest})
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.DontAutoTag
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowAnonymous(FastEndpoints.Http[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowFileUploads(System.Boolean)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowFormData
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Policies(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Roles(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Permissions(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PermissionsAll(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Claims(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ClaimsAll(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AuthSchemes(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PreProcessors(FastEndpoints.IPreProcessor{FastEndpoints.EmptyRequest}[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PostProcessors(FastEndpoints.IPostProcessor{FastEndpoints.EmptyRequest,{TResponse}}[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Summary(Action{FastEndpoints.EndpointSummary})
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Summary(Action{FastEndpoints.EndpointSummary{FastEndpoints.EmptyRequest}})
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Summary(FastEndpoints.EndpointSummary)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Tags(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Version(System.Int32,System.Nullable{System.Int32})
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Throttle(System.Int32,System.Double,System.String)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SerializerContext``1({TContext})
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ScopedValidator
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Validator``1(System.Boolean)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.RoutePrefixOverride(System.String)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AddError(System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AddError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowIfAnyErrors
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowError(System.String)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String)
  - FastEndpoints.BaseEndpoint.Verbs(FastEndpoints.Http[])
  - FastEndpoints.BaseEndpoint.Definition
  - FastEndpoints.BaseEndpoint.Config
  - FastEndpoints.BaseEndpoint.HttpContext
  - FastEndpoints.BaseEndpoint.ValidationFailures
  - FastEndpoints.BaseEndpoint.Configure
  - FastEndpoints.BaseEndpoint.FormFileSectionsAsync(CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: EndpointWithoutRequest(Of TResponse, TMapper)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse, TMapper)
  name.vb: EndpointWithoutRequest(Of TResponse, TMapper)
- uid: FastEndpoints.EndpointWithoutRequest`2.Map
  commentId: P:FastEndpoints.EndpointWithoutRequest`2.Map
  id: Map
  parent: FastEndpoints.EndpointWithoutRequest`2
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: EndpointWithoutRequest<TResponse, TMapper>.Map
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse, TMapper>.Map
  type: Property
  source:
    id: Map
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Endpoint\Endpoint.cs
    startLine: 288
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe entity mapper for the endpoint\n<p>HINT: entity mappers are singletons for performance reasons. do not maintain state in the mappers.</p>\n"
  example: []
  syntax:
    content: public static TMapper Map { get; }
    parameters: []
    return:
      type: '{TMapper}'
    content.vb: Public Shared ReadOnly Property Map As TMapper
  overload: FastEndpoints.EndpointWithoutRequest`2.Map*
  nameWithType.vb: EndpointWithoutRequest(Of TResponse, TMapper).Map
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse, TMapper).Map
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.BaseEndpoint
  commentId: T:FastEndpoints.BaseEndpoint
  parent: FastEndpoints
  name: BaseEndpoint
  nameWithType: BaseEndpoint
  fullName: FastEndpoints.BaseEndpoint
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  commentId: T:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}
  parent: FastEndpoints
  definition: FastEndpoints.Endpoint`2
  name: Endpoint<EmptyRequest, TResponse>
  nameWithType: Endpoint<EmptyRequest, TResponse>
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse)
  name.vb: Endpoint(Of EmptyRequest, TResponse)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2
    name: Endpoint
    nameWithType: Endpoint
    fullName: FastEndpoints.Endpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.Endpoint`2
    name: Endpoint
    nameWithType: Endpoint
    fullName: FastEndpoints.Endpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest{{TResponse}}
  commentId: T:FastEndpoints.EndpointWithoutRequest{`0}
  parent: FastEndpoints
  definition: FastEndpoints.EndpointWithoutRequest`1
  name: EndpointWithoutRequest<TResponse>
  nameWithType: EndpointWithoutRequest<TResponse>
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>
  nameWithType.vb: EndpointWithoutRequest(Of TResponse)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse)
  name.vb: EndpointWithoutRequest(Of TResponse)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1
    name: EndpointWithoutRequest
    nameWithType: EndpointWithoutRequest
    fullName: FastEndpoints.EndpointWithoutRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1
    name: EndpointWithoutRequest
    nameWithType: EndpointWithoutRequest
    fullName: FastEndpoints.EndpointWithoutRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IHasMapper{{TMapper}}
  commentId: T:FastEndpoints.IHasMapper{`1}
  parent: FastEndpoints
  definition: FastEndpoints.IHasMapper`1
  name: IHasMapper<TMapper>
  nameWithType: IHasMapper<TMapper>
  fullName: FastEndpoints.IHasMapper<TMapper>
  nameWithType.vb: IHasMapper(Of TMapper)
  fullName.vb: FastEndpoints.IHasMapper(Of TMapper)
  name.vb: IHasMapper(Of TMapper)
  spec.csharp:
  - uid: FastEndpoints.IHasMapper`1
    name: IHasMapper
    nameWithType: IHasMapper
    fullName: FastEndpoints.IHasMapper
  - name: <
    nameWithType: <
    fullName: <
  - name: TMapper
    nameWithType: TMapper
    fullName: TMapper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IHasMapper`1
    name: IHasMapper
    nameWithType: IHasMapper
    fullName: FastEndpoints.IHasMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMapper
    nameWithType: TMapper
    fullName: TMapper
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest{{TResponse}}.HandleAsync(CancellationToken)
  commentId: M:FastEndpoints.EndpointWithoutRequest{`0}.HandleAsync(CancellationToken)
  parent: FastEndpoints.EndpointWithoutRequest{{TResponse}}
  definition: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(CancellationToken)
  name: HandleAsync(CancellationToken)
  nameWithType: EndpointWithoutRequest<TResponse>.HandleAsync(CancellationToken)
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.HandleAsync(CancellationToken)
  nameWithType.vb: EndpointWithoutRequest(Of TResponse).HandleAsync(CancellationToken)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse).HandleAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(CancellationToken)
    name: HandleAsync
    nameWithType: EndpointWithoutRequest<TResponse>.HandleAsync
    fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(CancellationToken)
    name: HandleAsync
    nameWithType: EndpointWithoutRequest(Of TResponse).HandleAsync
    fullName: FastEndpoints.EndpointWithoutRequest(Of TResponse).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest{{TResponse}}.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.EndpointWithoutRequest{`0}.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  parent: FastEndpoints.EndpointWithoutRequest{{TResponse}}
  definition: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  name: HandleAsync(EmptyRequest, CancellationToken)
  nameWithType: EndpointWithoutRequest<TResponse>.HandleAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.HandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: EndpointWithoutRequest(Of TResponse).HandleAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse).HandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
    name: HandleAsync
    nameWithType: EndpointWithoutRequest<TResponse>.HandleAsync
    fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
    name: HandleAsync
    nameWithType: EndpointWithoutRequest(Of TResponse).HandleAsync
    fullName: FastEndpoints.EndpointWithoutRequest(Of TResponse).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest{{TResponse}}.ExecuteAsync(CancellationToken)
  commentId: M:FastEndpoints.EndpointWithoutRequest{`0}.ExecuteAsync(CancellationToken)
  parent: FastEndpoints.EndpointWithoutRequest{{TResponse}}
  definition: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(CancellationToken)
  name: ExecuteAsync(CancellationToken)
  nameWithType: EndpointWithoutRequest<TResponse>.ExecuteAsync(CancellationToken)
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.ExecuteAsync(CancellationToken)
  nameWithType.vb: EndpointWithoutRequest(Of TResponse).ExecuteAsync(CancellationToken)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse).ExecuteAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(CancellationToken)
    name: ExecuteAsync
    nameWithType: EndpointWithoutRequest<TResponse>.ExecuteAsync
    fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(CancellationToken)
    name: ExecuteAsync
    nameWithType: EndpointWithoutRequest(Of TResponse).ExecuteAsync
    fullName: FastEndpoints.EndpointWithoutRequest(Of TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest{{TResponse}}.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.EndpointWithoutRequest{`0}.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
  parent: FastEndpoints.EndpointWithoutRequest{{TResponse}}
  definition: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
  name: ExecuteAsync(EmptyRequest, CancellationToken)
  nameWithType: EndpointWithoutRequest<TResponse>.ExecuteAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.ExecuteAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: EndpointWithoutRequest(Of TResponse).ExecuteAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse).ExecuteAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
    name: ExecuteAsync
    nameWithType: EndpointWithoutRequest<TResponse>.ExecuteAsync
    fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
    name: ExecuteAsync
    nameWithType: EndpointWithoutRequest(Of TResponse).ExecuteAsync
    fullName: FastEndpoints.EndpointWithoutRequest(Of TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
  name: HandleAsync(EmptyRequest, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.HandleAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.HandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).HandleAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).HandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
    name: HandleAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.HandleAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
    name: HandleAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).HandleAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ExecuteAsync(`0,CancellationToken)
  name: ExecuteAsync(EmptyRequest, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.ExecuteAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ExecuteAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ExecuteAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ExecuteAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ExecuteAsync(`0,CancellationToken)
    name: ExecuteAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.ExecuteAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ExecuteAsync(`0,CancellationToken)
    name: ExecuteAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ExecuteAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.TryResolve``1
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.TryResolve``1
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.TryResolve``1
  name: TryResolve<TService>()
  nameWithType: Endpoint<EmptyRequest, TResponse>.TryResolve<TService>()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.TryResolve<TService>()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).TryResolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.TryResolve``1
    name: TryResolve<TService>
    nameWithType: Endpoint<EmptyRequest, TResponse>.TryResolve<TService>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.TryResolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.TryResolve``1
    name: TryResolve(Of TService)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).TryResolve(Of TService)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).TryResolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.TryResolve(Type)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.TryResolve(Type)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.TryResolve(Type)
  name: TryResolve(Type)
  nameWithType: Endpoint<EmptyRequest, TResponse>.TryResolve(Type)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.TryResolve(Type)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).TryResolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).TryResolve(Type)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.TryResolve(Type)
    name: TryResolve
    nameWithType: Endpoint<EmptyRequest, TResponse>.TryResolve
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.TryResolve(Type)
    name: TryResolve
    nameWithType: Endpoint(Of EmptyRequest, TResponse).TryResolve
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Resolve``1
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Resolve``1
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Resolve``1
  name: Resolve<TService>()
  nameWithType: Endpoint<EmptyRequest, TResponse>.Resolve<TService>()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Resolve<TService>()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Resolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Resolve``1
    name: Resolve<TService>
    nameWithType: Endpoint<EmptyRequest, TResponse>.Resolve<TService>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Resolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Resolve``1
    name: Resolve(Of TService)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Resolve(Of TService)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Resolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Resolve(Type)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Resolve(Type)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Resolve(Type)
  name: Resolve(Type)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Resolve(Type)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Resolve(Type)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Resolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Resolve(Type)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Resolve(Type)
    name: Resolve
    nameWithType: Endpoint<EmptyRequest, TResponse>.Resolve
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Resolve(Type)
    name: Resolve
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Resolve
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PublishAsync``1({TEvent},FastEndpoints.Mode,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
    name: PublishAsync<TEvent>
    nameWithType: Endpoint<EmptyRequest, TResponse>.PublishAsync<TEvent>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PublishAsync<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
    name: PublishAsync(Of TEvent)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).PublishAsync(Of TEvent)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PublishAsync(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Route``1(System.String,System.Boolean)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Route``1(System.String,System.Boolean)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
  name: Route<T>(String, Boolean)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Route<T>(String, Boolean)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Route<T>(System.String, System.Boolean)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Route(Of T)(String, Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Route(Of T)(System.String, System.Boolean)
  name.vb: Route(Of T)(String, Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
    name: Route<T>
    nameWithType: Endpoint<EmptyRequest, TResponse>.Route<T>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Route<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
    name: Route(Of T)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Route(Of T)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Route(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Query``1(System.String,System.Boolean)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Query``1(System.String,System.Boolean)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
  name: Query<T>(String, Boolean)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Query<T>(String, Boolean)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Query<T>(System.String, System.Boolean)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Query(Of T)(String, Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Query(Of T)(System.String, System.Boolean)
  name.vb: Query(Of T)(String, Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
    name: Query<T>
    nameWithType: Endpoint<EmptyRequest, TResponse>.Query<T>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Query<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
    name: Query(Of T)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Query(Of T)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Query(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnBeforeValidate(FastEndpoints.EmptyRequest)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnBeforeValidate(FastEndpoints.EmptyRequest)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
  name: OnBeforeValidate(EmptyRequest)
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnBeforeValidate(EmptyRequest)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnBeforeValidate(FastEndpoints.EmptyRequest)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnBeforeValidate(EmptyRequest)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnBeforeValidate(FastEndpoints.EmptyRequest)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
    name: OnBeforeValidate
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnBeforeValidate
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnBeforeValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
    name: OnBeforeValidate
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnBeforeValidate
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnBeforeValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnBeforeValidateAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnBeforeValidateAsync(FastEndpoints.EmptyRequest,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,CancellationToken)
  name: OnBeforeValidateAsync(EmptyRequest, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnBeforeValidateAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnBeforeValidateAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnBeforeValidateAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnBeforeValidateAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,CancellationToken)
    name: OnBeforeValidateAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnBeforeValidateAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnBeforeValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,CancellationToken)
    name: OnBeforeValidateAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnBeforeValidateAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnBeforeValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnAfterValidate(FastEndpoints.EmptyRequest)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnAfterValidate(FastEndpoints.EmptyRequest)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnAfterValidate(`0)
  name: OnAfterValidate(EmptyRequest)
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnAfterValidate(EmptyRequest)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnAfterValidate(FastEndpoints.EmptyRequest)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnAfterValidate(EmptyRequest)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnAfterValidate(FastEndpoints.EmptyRequest)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnAfterValidate(`0)
    name: OnAfterValidate
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnAfterValidate
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnAfterValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnAfterValidate(`0)
    name: OnAfterValidate
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnAfterValidate
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnAfterValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnAfterValidateAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnAfterValidateAsync(FastEndpoints.EmptyRequest,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,CancellationToken)
  name: OnAfterValidateAsync(EmptyRequest, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnAfterValidateAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnAfterValidateAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnAfterValidateAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnAfterValidateAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,CancellationToken)
    name: OnAfterValidateAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnAfterValidateAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnAfterValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,CancellationToken)
    name: OnAfterValidateAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnAfterValidateAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnAfterValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnBeforeHandle(FastEndpoints.EmptyRequest)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnBeforeHandle(FastEndpoints.EmptyRequest)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
  name: OnBeforeHandle(EmptyRequest)
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnBeforeHandle(EmptyRequest)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnBeforeHandle(FastEndpoints.EmptyRequest)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnBeforeHandle(EmptyRequest)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnBeforeHandle(FastEndpoints.EmptyRequest)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
    name: OnBeforeHandle
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnBeforeHandle
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnBeforeHandle
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
    name: OnBeforeHandle
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnBeforeHandle
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnBeforeHandle
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnBeforeHandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnBeforeHandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,CancellationToken)
  name: OnBeforeHandleAsync(EmptyRequest, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnBeforeHandleAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnBeforeHandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnBeforeHandleAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnBeforeHandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,CancellationToken)
    name: OnBeforeHandleAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnBeforeHandleAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnBeforeHandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,CancellationToken)
    name: OnBeforeHandleAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnBeforeHandleAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnBeforeHandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnAfterHandle(FastEndpoints.EmptyRequest,{TResponse})
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnAfterHandle(FastEndpoints.EmptyRequest,`0)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
  name: OnAfterHandle(EmptyRequest, TResponse)
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnAfterHandle(EmptyRequest, TResponse)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnAfterHandle(FastEndpoints.EmptyRequest, TResponse)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnAfterHandle(EmptyRequest, TResponse)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnAfterHandle(FastEndpoints.EmptyRequest, TResponse)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
    name: OnAfterHandle
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnAfterHandle
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnAfterHandle
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
    name: OnAfterHandle
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnAfterHandle
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnAfterHandle
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnAfterHandleAsync(FastEndpoints.EmptyRequest,{TResponse},CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnAfterHandleAsync(FastEndpoints.EmptyRequest,`0,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,CancellationToken)
  name: OnAfterHandleAsync(EmptyRequest, TResponse, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnAfterHandleAsync(EmptyRequest, TResponse, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnAfterHandleAsync(FastEndpoints.EmptyRequest, TResponse, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnAfterHandleAsync(EmptyRequest, TResponse, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnAfterHandleAsync(FastEndpoints.EmptyRequest, TResponse, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,CancellationToken)
    name: OnAfterHandleAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnAfterHandleAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnAfterHandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,CancellationToken)
    name: OnAfterHandleAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnAfterHandleAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnAfterHandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnValidationFailed
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnValidationFailed
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnValidationFailed
  name: OnValidationFailed()
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnValidationFailed()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnValidationFailed()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnValidationFailed()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnValidationFailed()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnValidationFailed
    name: OnValidationFailed
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnValidationFailed
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnValidationFailed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnValidationFailed
    name: OnValidationFailed
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnValidationFailed
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnValidationFailed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.OnValidationFailedAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.OnValidationFailedAsync(CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.OnValidationFailedAsync(CancellationToken)
  name: OnValidationFailedAsync(CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.OnValidationFailedAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnValidationFailedAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).OnValidationFailedAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnValidationFailedAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnValidationFailedAsync(CancellationToken)
    name: OnValidationFailedAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.OnValidationFailedAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.OnValidationFailedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnValidationFailedAsync(CancellationToken)
    name: OnValidationFailedAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).OnValidationFailedAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).OnValidationFailedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ValidationFailed
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ValidationFailed
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ValidationFailed
  name: ValidationFailed
  nameWithType: Endpoint<EmptyRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ValidationFailed
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ValidationFailed
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.User
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.User
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.User
  name: User
  nameWithType: Endpoint<EmptyRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.User
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).User
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).User
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Response
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Response
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Response
  name: Response
  nameWithType: Endpoint<EmptyRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Response
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Response
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Response
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Env
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Env
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Env
  name: Env
  nameWithType: Endpoint<EmptyRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Env
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Env
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Env
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Logger
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Logger
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Logger
  name: Logger
  nameWithType: Endpoint<EmptyRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Logger
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Logger
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Logger
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.BaseURL
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.BaseURL
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.BaseURL
  name: BaseURL
  nameWithType: Endpoint<EmptyRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.BaseURL
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).BaseURL
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).BaseURL
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HttpMethod
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.HttpMethod
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.HttpMethod
  name: HttpMethod
  nameWithType: Endpoint<EmptyRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.HttpMethod
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).HttpMethod
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).HttpMethod
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Form
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Form
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Form
  name: Form
  nameWithType: Endpoint<EmptyRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Form
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Form
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Form
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Files
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Files
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Files
  name: Files
  nameWithType: Endpoint<EmptyRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Files
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Files
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Files
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ResponseStarted
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ResponseStarted
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ResponseStarted
  name: ResponseStarted
  nameWithType: Endpoint<EmptyRequest, TResponse>.ResponseStarted
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ResponseStarted
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ResponseStarted
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ResponseStarted
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendAsync({TResponse},System.Int32,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendAsync(`0,System.Int32,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
  name: SendAsync(TResponse, Int32, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendAsync(TResponse, System.Int32, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendAsync(TResponse, Int32, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendAsync(TResponse, System.Int32, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
    name: SendAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
    name: SendAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendCreatedAtAsync``1(System.Object,{TResponse},System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendCreatedAtAsync``1(System.Object,`0,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
  name: SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(System.Object, TResponse, System.Nullable<FastEndpoints.Http>, System.Nullable<System.Int32>, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)(Object, TResponse, Nullable(Of Http), Nullable(Of Int32), Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)(System.Object, TResponse, System.Nullable(Of FastEndpoints.Http), System.Nullable(Of System.Int32), System.Boolean, CancellationToken)
  name.vb: SendCreatedAtAsync(Of TEndpoint)(Object, TResponse, Nullable(Of Http), Nullable(Of Int32), Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
    name: SendCreatedAtAsync<TEndpoint>
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendCreatedAtAsync<TEndpoint>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendCreatedAtAsync<TEndpoint>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
    name: SendCreatedAtAsync(Of TEndpoint)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendCreatedAtAsync(System.String,System.Object,{TResponse},System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendCreatedAtAsync(System.String,System.Object,`0,System.Boolean,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,CancellationToken)
  name: SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendCreatedAtAsync(System.String, System.Object, TResponse, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendCreatedAtAsync(System.String, System.Object, TResponse, System.Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,CancellationToken)
    name: SendCreatedAtAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendCreatedAtAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendCreatedAtAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,CancellationToken)
    name: SendCreatedAtAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendCreatedAtAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendCreatedAtAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
  name: SendStringAsync(String, Int32, String, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendStringAsync(String, Int32, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendStringAsync(System.String, System.Int32, System.String, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendStringAsync(String, Int32, String, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendStringAsync(System.String, System.Int32, System.String, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
    name: SendStringAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendStringAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendStringAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
    name: SendStringAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendStringAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendStringAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendOkAsync({TResponse},CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendOkAsync(`0,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendOkAsync(`1,CancellationToken)
  name: SendOkAsync(TResponse, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendOkAsync(TResponse, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendOkAsync(TResponse, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendOkAsync(TResponse, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendOkAsync(TResponse, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync(`1,CancellationToken)
    name: SendOkAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendOkAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync(`1,CancellationToken)
    name: SendOkAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendOkAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendOkAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendOkAsync(CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendOkAsync(CancellationToken)
  name: SendOkAsync(CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendOkAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendOkAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendOkAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendOkAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync(CancellationToken)
    name: SendOkAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendOkAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync(CancellationToken)
    name: SendOkAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendOkAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendErrorsAsync(System.Int32,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendErrorsAsync(System.Int32,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,CancellationToken)
  name: SendErrorsAsync(Int32, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendErrorsAsync(Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendErrorsAsync(System.Int32, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendErrorsAsync(Int32, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendErrorsAsync(System.Int32, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,CancellationToken)
    name: SendErrorsAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendErrorsAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendErrorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,CancellationToken)
    name: SendErrorsAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendErrorsAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendErrorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendNoContentAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendNoContentAsync(CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendNoContentAsync(CancellationToken)
  name: SendNoContentAsync(CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendNoContentAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendNoContentAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendNoContentAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendNoContentAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendNoContentAsync(CancellationToken)
    name: SendNoContentAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendNoContentAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendNoContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendNoContentAsync(CancellationToken)
    name: SendNoContentAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendNoContentAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendNoContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendNotFoundAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendNotFoundAsync(CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendNotFoundAsync(CancellationToken)
  name: SendNotFoundAsync(CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendNotFoundAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendNotFoundAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendNotFoundAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendNotFoundAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendNotFoundAsync(CancellationToken)
    name: SendNotFoundAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendNotFoundAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendNotFoundAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendNotFoundAsync(CancellationToken)
    name: SendNotFoundAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendNotFoundAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendNotFoundAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendUnauthorizedAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendUnauthorizedAsync(CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendUnauthorizedAsync(CancellationToken)
  name: SendUnauthorizedAsync(CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendUnauthorizedAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendUnauthorizedAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendUnauthorizedAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendUnauthorizedAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync(CancellationToken)
    name: SendUnauthorizedAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendUnauthorizedAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendUnauthorizedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync(CancellationToken)
    name: SendUnauthorizedAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendUnauthorizedAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendUnauthorizedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendForbiddenAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendForbiddenAsync(CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendForbiddenAsync(CancellationToken)
  name: SendForbiddenAsync(CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendForbiddenAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendForbiddenAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendForbiddenAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendForbiddenAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendForbiddenAsync(CancellationToken)
    name: SendForbiddenAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendForbiddenAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendForbiddenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendForbiddenAsync(CancellationToken)
    name: SendForbiddenAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendForbiddenAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendForbiddenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
  name: SendRedirectAsync(String, Boolean, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendRedirectAsync(String, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendRedirectAsync(System.String, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendRedirectAsync(String, Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendRedirectAsync(System.String, System.Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
    name: SendRedirectAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendRedirectAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendRedirectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
    name: SendRedirectAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendRedirectAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendRedirectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
  name: SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendHeadersAsync(Action<Microsoft.AspNetCore.Http.IHeaderDictionary>, System.Int32, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendHeadersAsync(Action(Of IHeaderDictionary), Int32, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendHeadersAsync(Action(Of Microsoft.AspNetCore.Http.IHeaderDictionary), System.Int32, CancellationToken)
  name.vb: SendHeadersAsync(Action(Of IHeaderDictionary), Int32, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
    name: SendHeadersAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendHeadersAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendHeadersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
    name: SendHeadersAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendHeadersAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendHeadersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  name: SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendBytesAsync(System.Byte[], System.String, System.String, System.Nullable<DateTimeOffset>, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendBytesAsync(Byte(), String, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendBytesAsync(System.Byte(), System.String, System.String, System.Nullable(Of DateTimeOffset), System.Boolean, CancellationToken)
  name.vb: SendBytesAsync(Byte(), String, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendBytesAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendBytesAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendBytesAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendBytesAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  name: SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendFileAsync(FileInfo, System.String, System.Nullable<DateTimeOffset>, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendFileAsync(FileInfo, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendFileAsync(FileInfo, System.String, System.Nullable(Of DateTimeOffset), System.Boolean, CancellationToken)
  name.vb: SendFileAsync(FileInfo, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendFileAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendFileAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendFileAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendFileAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  name: SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendStreamAsync(Stream, System.String, System.Nullable<System.Int64>, System.String, System.Nullable<DateTimeOffset>, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendStreamAsync(Stream, String, Nullable(Of Int64), String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendStreamAsync(Stream, System.String, System.Nullable(Of System.Int64), System.String, System.Nullable(Of DateTimeOffset), System.Boolean, CancellationToken)
  name.vb: SendStreamAsync(Stream, String, Nullable(Of Int64), String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendStreamAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendStreamAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendStreamAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendStreamAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendEventStreamAsync``1(System.String,IAsyncEnumerable{{T}},CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendEventStreamAsync``1(System.String,IAsyncEnumerable{``0},CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,IAsyncEnumerable{``0},CancellationToken)
  name: SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendEventStreamAsync<T>(System.String, IAsyncEnumerable<T>, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendEventStreamAsync(Of T)(String, IAsyncEnumerable(Of T), CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendEventStreamAsync(Of T)(System.String, IAsyncEnumerable(Of T), CancellationToken)
  name.vb: SendEventStreamAsync(Of T)(String, IAsyncEnumerable(Of T), CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,IAsyncEnumerable{``0},CancellationToken)
    name: SendEventStreamAsync<T>
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendEventStreamAsync<T>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendEventStreamAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,IAsyncEnumerable{``0},CancellationToken)
    name: SendEventStreamAsync(Of T)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendEventStreamAsync(Of T)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendEventStreamAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendEmptyJsonObject(CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendEmptyJsonObject(CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendEmptyJsonObject(CancellationToken)
  name: SendEmptyJsonObject(CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendEmptyJsonObject(CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendEmptyJsonObject(CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendEmptyJsonObject(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendEmptyJsonObject(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendEmptyJsonObject(CancellationToken)
    name: SendEmptyJsonObject
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendEmptyJsonObject
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendEmptyJsonObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendEmptyJsonObject(CancellationToken)
    name: SendEmptyJsonObject
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendEmptyJsonObject
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendEmptyJsonObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Get(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Get(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Get(System.String[])
  name: Get(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Get(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Get(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Get(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Get(System.String[])
    name: Get
    nameWithType: Endpoint<EmptyRequest, TResponse>.Get
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Get(System.String[])
    name: Get
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Get
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Post(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Post(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Post(System.String[])
  name: Post(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Post(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Post(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Post(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Post(System.String())
  name.vb: Post(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Post(System.String[])
    name: Post
    nameWithType: Endpoint<EmptyRequest, TResponse>.Post
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Post(System.String[])
    name: Post
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Post
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Put(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Put(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Put(System.String[])
  name: Put(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Put(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Put(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Put(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Put(System.String())
  name.vb: Put(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Put(System.String[])
    name: Put
    nameWithType: Endpoint<EmptyRequest, TResponse>.Put
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Put(System.String[])
    name: Put
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Put
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Patch(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Patch(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Patch(System.String[])
  name: Patch(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Patch(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Patch(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Patch(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Patch(System.String())
  name.vb: Patch(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Patch(System.String[])
    name: Patch
    nameWithType: Endpoint<EmptyRequest, TResponse>.Patch
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Patch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Patch(System.String[])
    name: Patch
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Patch
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Patch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Delete(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Delete(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Delete(System.String[])
  name: Delete(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Delete(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Delete(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Delete(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Delete(System.String())
  name.vb: Delete(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Delete(System.String[])
    name: Delete
    nameWithType: Endpoint<EmptyRequest, TResponse>.Delete
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Delete(System.String[])
    name: Delete
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Delete
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Head(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Head(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Head(System.String[])
  name: Head(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Head(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Head(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Head(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Head(System.String())
  name.vb: Head(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Head(System.String[])
    name: Head
    nameWithType: Endpoint<EmptyRequest, TResponse>.Head
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Head
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Head(System.String[])
    name: Head
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Head
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Head
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Routes(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Routes(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Routes(System.String[])
  name: Routes(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Routes(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Routes(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Routes(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Routes(System.String())
  name.vb: Routes(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Routes(System.String[])
    name: Routes
    nameWithType: Endpoint<EmptyRequest, TResponse>.Routes
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Routes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Routes(System.String[])
    name: Routes
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Routes
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Routes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Verbs(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Verbs(FastEndpoints.Http[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  name: Verbs(Http[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Verbs(Http[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Verbs(FastEndpoints.Http[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Verbs(Http())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Verbs(FastEndpoints.Http())
  name.vb: Verbs(Http())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: Endpoint<EmptyRequest, TResponse>.Verbs
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Verbs
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.DontThrowIfValidationFails
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.DontThrowIfValidationFails
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  name: DontThrowIfValidationFails()
  nameWithType: Endpoint<EmptyRequest, TResponse>.DontThrowIfValidationFails()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.DontThrowIfValidationFails()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).DontThrowIfValidationFails()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).DontThrowIfValidationFails()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
    name: DontThrowIfValidationFails
    nameWithType: Endpoint<EmptyRequest, TResponse>.DontThrowIfValidationFails
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.DontThrowIfValidationFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
    name: DontThrowIfValidationFails
    nameWithType: Endpoint(Of EmptyRequest, TResponse).DontThrowIfValidationFails
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).DontThrowIfValidationFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.DontCatchExceptions
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.DontCatchExceptions
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.DontCatchExceptions
  name: DontCatchExceptions()
  nameWithType: Endpoint<EmptyRequest, TResponse>.DontCatchExceptions()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.DontCatchExceptions()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).DontCatchExceptions()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).DontCatchExceptions()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.DontCatchExceptions
    name: DontCatchExceptions
    nameWithType: Endpoint<EmptyRequest, TResponse>.DontCatchExceptions
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.DontCatchExceptions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.DontCatchExceptions
    name: DontCatchExceptions
    nameWithType: Endpoint(Of EmptyRequest, TResponse).DontCatchExceptions
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).DontCatchExceptions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.RequestBinder(FastEndpoints.IRequestBinder{FastEndpoints.EmptyRequest})
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.RequestBinder(FastEndpoints.IRequestBinder{FastEndpoints.EmptyRequest})
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
  name: RequestBinder(IRequestBinder<EmptyRequest>)
  nameWithType: Endpoint<EmptyRequest, TResponse>.RequestBinder(IRequestBinder<EmptyRequest>)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.RequestBinder(FastEndpoints.IRequestBinder<FastEndpoints.EmptyRequest>)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).RequestBinder(IRequestBinder(Of EmptyRequest))
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).RequestBinder(FastEndpoints.IRequestBinder(Of FastEndpoints.EmptyRequest))
  name.vb: RequestBinder(IRequestBinder(Of EmptyRequest))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
    name: RequestBinder
    nameWithType: Endpoint<EmptyRequest, TResponse>.RequestBinder
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.RequestBinder
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
    name: RequestBinder
    nameWithType: Endpoint(Of EmptyRequest, TResponse).RequestBinder
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).RequestBinder
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.DontAutoTag
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.DontAutoTag
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.DontAutoTag
  name: DontAutoTag()
  nameWithType: Endpoint<EmptyRequest, TResponse>.DontAutoTag()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.DontAutoTag()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).DontAutoTag()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).DontAutoTag()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.DontAutoTag
    name: DontAutoTag
    nameWithType: Endpoint<EmptyRequest, TResponse>.DontAutoTag
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.DontAutoTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.DontAutoTag
    name: DontAutoTag
    nameWithType: Endpoint(Of EmptyRequest, TResponse).DontAutoTag
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).DontAutoTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowAnonymous(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AllowAnonymous(FastEndpoints.Http[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
  name: AllowAnonymous(Http[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.AllowAnonymous(Http[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowAnonymous(FastEndpoints.Http[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AllowAnonymous(Http())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowAnonymous(FastEndpoints.Http())
  name.vb: AllowAnonymous(Http())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
    name: AllowAnonymous
    nameWithType: Endpoint<EmptyRequest, TResponse>.AllowAnonymous
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowAnonymous
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
    name: AllowAnonymous
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AllowAnonymous
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowAnonymous
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowFileUploads(System.Boolean)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AllowFileUploads(System.Boolean)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
  name: AllowFileUploads(Boolean)
  nameWithType: Endpoint<EmptyRequest, TResponse>.AllowFileUploads(Boolean)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowFileUploads(System.Boolean)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AllowFileUploads(Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowFileUploads(System.Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
    name: AllowFileUploads
    nameWithType: Endpoint<EmptyRequest, TResponse>.AllowFileUploads
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowFileUploads
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
    name: AllowFileUploads
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AllowFileUploads
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowFileUploads
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowFormData
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AllowFormData
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AllowFormData
  name: AllowFormData()
  nameWithType: Endpoint<EmptyRequest, TResponse>.AllowFormData()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowFormData()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AllowFormData()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowFormData()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowFormData
    name: AllowFormData
    nameWithType: Endpoint<EmptyRequest, TResponse>.AllowFormData
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowFormData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowFormData
    name: AllowFormData
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AllowFormData
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowFormData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Policies(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Policies(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Policies(System.String[])
  name: Policies(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Policies(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Policies(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Policies(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Policies(System.String())
  name.vb: Policies(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Policies(System.String[])
    name: Policies
    nameWithType: Endpoint<EmptyRequest, TResponse>.Policies
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Policies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Policies(System.String[])
    name: Policies
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Policies
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Policies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Roles(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Roles(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Roles(System.String[])
  name: Roles(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Roles(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Roles(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Roles(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Roles(System.String())
  name.vb: Roles(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Roles(System.String[])
    name: Roles
    nameWithType: Endpoint<EmptyRequest, TResponse>.Roles
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Roles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Roles(System.String[])
    name: Roles
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Roles
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Roles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Permissions(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Permissions(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Permissions(System.String[])
  name: Permissions(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Permissions(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Permissions(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Permissions(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Permissions(System.String())
  name.vb: Permissions(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
    name: Permissions
    nameWithType: Endpoint<EmptyRequest, TResponse>.Permissions
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
    name: Permissions
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Permissions
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PermissionsAll(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.PermissionsAll(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
  name: PermissionsAll(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.PermissionsAll(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PermissionsAll(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).PermissionsAll(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PermissionsAll(System.String())
  name.vb: PermissionsAll(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
    name: PermissionsAll
    nameWithType: Endpoint<EmptyRequest, TResponse>.PermissionsAll
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PermissionsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
    name: PermissionsAll
    nameWithType: Endpoint(Of EmptyRequest, TResponse).PermissionsAll
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PermissionsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Claims(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Claims(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Claims(System.String[])
  name: Claims(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Claims(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Claims(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Claims(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Claims(System.String())
  name.vb: Claims(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Claims(System.String[])
    name: Claims
    nameWithType: Endpoint<EmptyRequest, TResponse>.Claims
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Claims(System.String[])
    name: Claims
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Claims
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ClaimsAll(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ClaimsAll(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
  name: ClaimsAll(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.ClaimsAll(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ClaimsAll(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ClaimsAll(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ClaimsAll(System.String())
  name.vb: ClaimsAll(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
    name: ClaimsAll
    nameWithType: Endpoint<EmptyRequest, TResponse>.ClaimsAll
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ClaimsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
    name: ClaimsAll
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ClaimsAll
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ClaimsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AuthSchemes(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AuthSchemes(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
  name: AuthSchemes(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.AuthSchemes(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AuthSchemes(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AuthSchemes(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AuthSchemes(System.String())
  name.vb: AuthSchemes(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
    name: AuthSchemes
    nameWithType: Endpoint<EmptyRequest, TResponse>.AuthSchemes
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AuthSchemes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
    name: AuthSchemes
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AuthSchemes
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AuthSchemes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PreProcessors(FastEndpoints.IPreProcessor{FastEndpoints.EmptyRequest}[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.PreProcessors(FastEndpoints.IPreProcessor{FastEndpoints.EmptyRequest}[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  name: PreProcessors(IPreProcessor<EmptyRequest>[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.PreProcessors(IPreProcessor<EmptyRequest>[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PreProcessors(FastEndpoints.IPreProcessor<FastEndpoints.EmptyRequest>[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).PreProcessors(IPreProcessor(Of EmptyRequest)())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PreProcessors(FastEndpoints.IPreProcessor(Of FastEndpoints.EmptyRequest)())
  name.vb: PreProcessors(IPreProcessor(Of EmptyRequest)())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
    name: PreProcessors
    nameWithType: Endpoint<EmptyRequest, TResponse>.PreProcessors
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PreProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
    name: PreProcessors
    nameWithType: Endpoint(Of EmptyRequest, TResponse).PreProcessors
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PreProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PostProcessors(FastEndpoints.IPostProcessor{FastEndpoints.EmptyRequest,{TResponse}}[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.PostProcessors(FastEndpoints.IPostProcessor{FastEndpoints.EmptyRequest,`0}[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  name: PostProcessors(IPostProcessor<EmptyRequest, TResponse>[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.PostProcessors(IPostProcessor<EmptyRequest, TResponse>[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PostProcessors(FastEndpoints.IPostProcessor<FastEndpoints.EmptyRequest, TResponse>[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).PostProcessors(IPostProcessor(Of EmptyRequest, TResponse)())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PostProcessors(FastEndpoints.IPostProcessor(Of FastEndpoints.EmptyRequest, TResponse)())
  name.vb: PostProcessors(IPostProcessor(Of EmptyRequest, TResponse)())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
    name: PostProcessors
    nameWithType: Endpoint<EmptyRequest, TResponse>.PostProcessors
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
    name: PostProcessors
    nameWithType: Endpoint(Of EmptyRequest, TResponse).PostProcessors
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  name: ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ResponseCache(System.Int32, Microsoft.AspNetCore.Mvc.ResponseCacheLocation, System.Boolean, System.String, System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ResponseCache(System.Int32, Microsoft.AspNetCore.Mvc.ResponseCacheLocation, System.Boolean, System.String, System.String())
  name.vb: ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
    name: ResponseCache
    nameWithType: Endpoint<EmptyRequest, TResponse>.ResponseCache
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ResponseCache
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    name: ResponseCacheLocation
    nameWithType: ResponseCacheLocation
    fullName: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
    name: ResponseCache
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ResponseCache
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ResponseCache
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    name: ResponseCacheLocation
    nameWithType: ResponseCacheLocation
    fullName: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  name: Options(Action<RouteHandlerBuilder>)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Options(Action<RouteHandlerBuilder>)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Options(Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Options(Action(Of RouteHandlerBuilder))
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Options(Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder))
  name.vb: Options(Action(Of RouteHandlerBuilder))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
    name: Options
    nameWithType: Endpoint<EmptyRequest, TResponse>.Options
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Options
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
    name: Options
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Options
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Options
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  name: Description(Action<RouteHandlerBuilder>, Boolean)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Description(Action<RouteHandlerBuilder>, Boolean)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Description(Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>, System.Boolean)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Description(Action(Of RouteHandlerBuilder), Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Description(Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder), System.Boolean)
  name.vb: Description(Action(Of RouteHandlerBuilder), Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
    name: Description
    nameWithType: Endpoint<EmptyRequest, TResponse>.Description
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Description
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
    name: Description
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Description
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Description
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Summary(Action{FastEndpoints.EndpointSummary})
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Summary(Action{FastEndpoints.EndpointSummary})
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary})
  name: Summary(Action<EndpointSummary>)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Summary(Action<EndpointSummary>)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Summary(Action<FastEndpoints.EndpointSummary>)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Summary(Action(Of EndpointSummary))
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Summary(Action(Of FastEndpoints.EndpointSummary))
  name.vb: Summary(Action(Of EndpointSummary))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary})
    name: Summary
    nameWithType: Endpoint<EmptyRequest, TResponse>.Summary
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary})
    name: Summary
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Summary
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Summary(Action{FastEndpoints.EndpointSummary{FastEndpoints.EmptyRequest}})
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Summary(Action{FastEndpoints.EndpointSummary{FastEndpoints.EmptyRequest}})
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary{`0}})
  name: Summary(Action<EndpointSummary<EmptyRequest>>)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Summary(Action<EndpointSummary<EmptyRequest>>)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Summary(Action<FastEndpoints.EndpointSummary<FastEndpoints.EmptyRequest>>)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Summary(Action(Of EndpointSummary(Of EmptyRequest)))
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Summary(Action(Of FastEndpoints.EndpointSummary(Of FastEndpoints.EmptyRequest)))
  name.vb: Summary(Action(Of EndpointSummary(Of EmptyRequest)))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary{`0}})
    name: Summary
    nameWithType: Endpoint<EmptyRequest, TResponse>.Summary
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EndpointSummary`1
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary{`0}})
    name: Summary
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Summary
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EndpointSummary`1
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Summary(FastEndpoints.EndpointSummary)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Summary(FastEndpoints.EndpointSummary)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
  name: Summary(EndpointSummary)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Summary(EndpointSummary)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Summary(FastEndpoints.EndpointSummary)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Summary(EndpointSummary)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Summary(FastEndpoints.EndpointSummary)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
    name: Summary
    nameWithType: Endpoint<EmptyRequest, TResponse>.Summary
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
    name: Summary
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Summary
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Tags(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Tags(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Tags(System.String[])
  name: Tags(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Tags(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Tags(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Tags(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Tags(System.String())
  name.vb: Tags(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Tags(System.String[])
    name: Tags
    nameWithType: Endpoint<EmptyRequest, TResponse>.Tags
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Tags
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Tags(System.String[])
    name: Tags
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Tags
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Tags
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Version(System.Int32,System.Nullable{System.Int32})
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Version(System.Int32,System.Nullable{System.Int32})
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
  name: Version(Int32, Nullable<Int32>)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Version(Int32, Nullable<Int32>)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Version(System.Int32, System.Nullable<System.Int32>)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Version(Int32, Nullable(Of Int32))
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Version(System.Int32, System.Nullable(Of System.Int32))
  name.vb: Version(Int32, Nullable(Of Int32))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
    name: Version
    nameWithType: Endpoint<EmptyRequest, TResponse>.Version
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Version
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
    name: Version
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Version
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Version
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Throttle(System.Int32,System.Double,System.String)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Throttle(System.Int32,System.Double,System.String)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
  name: Throttle(Int32, Double, String)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Throttle(Int32, Double, String)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Throttle(System.Int32, System.Double, System.String)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Throttle(Int32, Double, String)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Throttle(System.Int32, System.Double, System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
    name: Throttle
    nameWithType: Endpoint<EmptyRequest, TResponse>.Throttle
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Throttle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
    name: Throttle
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Throttle
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Throttle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SerializerContext``1({TContext})
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SerializerContext``1(``0)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SerializerContext``1(``0)
  name: SerializerContext<TContext>(TContext)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SerializerContext<TContext>(TContext)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SerializerContext<TContext>(TContext)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SerializerContext(Of TContext)(TContext)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SerializerContext(Of TContext)(TContext)
  name.vb: SerializerContext(Of TContext)(TContext)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SerializerContext``1(``0)
    name: SerializerContext<TContext>
    nameWithType: Endpoint<EmptyRequest, TResponse>.SerializerContext<TContext>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SerializerContext<TContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SerializerContext``1(``0)
    name: SerializerContext(Of TContext)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SerializerContext(Of TContext)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SerializerContext(Of TContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ScopedValidator
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ScopedValidator
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ScopedValidator
  name: ScopedValidator()
  nameWithType: Endpoint<EmptyRequest, TResponse>.ScopedValidator()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ScopedValidator()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ScopedValidator()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ScopedValidator()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ScopedValidator
    name: ScopedValidator
    nameWithType: Endpoint<EmptyRequest, TResponse>.ScopedValidator
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ScopedValidator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ScopedValidator
    name: ScopedValidator
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ScopedValidator
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ScopedValidator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Validator``1(System.Boolean)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Validator``1(System.Boolean)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Validator``1(System.Boolean)
  name: Validator<TValidator>(Boolean)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Validator<TValidator>(Boolean)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Validator<TValidator>(System.Boolean)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Validator(Of TValidator)(Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Validator(Of TValidator)(System.Boolean)
  name.vb: Validator(Of TValidator)(Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Validator``1(System.Boolean)
    name: Validator<TValidator>
    nameWithType: Endpoint<EmptyRequest, TResponse>.Validator<TValidator>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Validator<TValidator>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Validator``1(System.Boolean)
    name: Validator(Of TValidator)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Validator(Of TValidator)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Validator(Of TValidator)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.RoutePrefixOverride(System.String)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.RoutePrefixOverride(System.String)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
  name: RoutePrefixOverride(String)
  nameWithType: Endpoint<EmptyRequest, TResponse>.RoutePrefixOverride(String)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.RoutePrefixOverride(System.String)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).RoutePrefixOverride(String)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).RoutePrefixOverride(System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
    name: RoutePrefixOverride
    nameWithType: Endpoint<EmptyRequest, TResponse>.RoutePrefixOverride
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.RoutePrefixOverride
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
    name: RoutePrefixOverride
    nameWithType: Endpoint(Of EmptyRequest, TResponse).RoutePrefixOverride
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).RoutePrefixOverride
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AddError(System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AddError(System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
  name: AddError(String, String, Severity)
  nameWithType: Endpoint<EmptyRequest, TResponse>.AddError(String, String, Severity)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AddError(System.String, System.String, FluentValidation.Severity)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AddError(String, String, Severity)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AddError(System.String, System.String, FluentValidation.Severity)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: Endpoint<EmptyRequest, TResponse>.AddError
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AddError
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AddError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AddError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  name: AddError(Expression<Func<EmptyRequest, Object>>, String, String, Severity)
  nameWithType: Endpoint<EmptyRequest, TResponse>.AddError(Expression<Func<EmptyRequest, Object>>, String, String, Severity)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AddError(System.Linq.Expressions.Expression<Func<FastEndpoints.EmptyRequest, System.Object>>, System.String, System.String, FluentValidation.Severity)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AddError(Expression(Of Func(Of EmptyRequest, Object)), String, String, Severity)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AddError(System.Linq.Expressions.Expression(Of Func(Of FastEndpoints.EmptyRequest, System.Object)), System.String, System.String, FluentValidation.Severity)
  name.vb: AddError(Expression(Of Func(Of EmptyRequest, Object)), String, String, Severity)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: Endpoint<EmptyRequest, TResponse>.AddError
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AddError
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowIfAnyErrors
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ThrowIfAnyErrors
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  name: ThrowIfAnyErrors()
  nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowIfAnyErrors()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowIfAnyErrors()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ThrowIfAnyErrors()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowIfAnyErrors()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowIfAnyErrors
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ThrowIfAnyErrors
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowError(System.String)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ThrowError(System.String)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ThrowError(System.String)
  name: ThrowError(String)
  nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowError(String)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowError(System.String)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ThrowError(String)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowError(System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
    name: ThrowError
    nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowError
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
    name: ThrowError
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ThrowError
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ThrowError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  name: ThrowError(Expression<Func<EmptyRequest, Object>>, String)
  nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowError(Expression<Func<EmptyRequest, Object>>, String)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowError(System.Linq.Expressions.Expression<Func<FastEndpoints.EmptyRequest, System.Object>>, System.String)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ThrowError(Expression(Of Func(Of EmptyRequest, Object)), String)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowError(System.Linq.Expressions.Expression(Of Func(Of FastEndpoints.EmptyRequest, System.Object)), System.String)
  name.vb: ThrowError(Expression(Of Func(Of EmptyRequest, Object)), String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowError
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ThrowError
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.BaseEndpoint.Verbs(FastEndpoints.Http[])
  commentId: M:FastEndpoints.BaseEndpoint.Verbs(FastEndpoints.Http[])
  parent: FastEndpoints.BaseEndpoint
  name: Verbs(Http[])
  nameWithType: BaseEndpoint.Verbs(Http[])
  fullName: FastEndpoints.BaseEndpoint.Verbs(FastEndpoints.Http[])
  nameWithType.vb: BaseEndpoint.Verbs(Http())
  fullName.vb: FastEndpoints.BaseEndpoint.Verbs(FastEndpoints.Http())
  name.vb: Verbs(Http())
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: BaseEndpoint.Verbs
    fullName: FastEndpoints.BaseEndpoint.Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: BaseEndpoint.Verbs
    fullName: FastEndpoints.BaseEndpoint.Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.BaseEndpoint.Definition
  commentId: P:FastEndpoints.BaseEndpoint.Definition
  parent: FastEndpoints.BaseEndpoint
  name: Definition
  nameWithType: BaseEndpoint.Definition
  fullName: FastEndpoints.BaseEndpoint.Definition
- uid: FastEndpoints.BaseEndpoint.Config
  commentId: P:FastEndpoints.BaseEndpoint.Config
  parent: FastEndpoints.BaseEndpoint
  name: Config
  nameWithType: BaseEndpoint.Config
  fullName: FastEndpoints.BaseEndpoint.Config
- uid: FastEndpoints.BaseEndpoint.HttpContext
  commentId: P:FastEndpoints.BaseEndpoint.HttpContext
  parent: FastEndpoints.BaseEndpoint
  name: HttpContext
  nameWithType: BaseEndpoint.HttpContext
  fullName: FastEndpoints.BaseEndpoint.HttpContext
- uid: FastEndpoints.BaseEndpoint.ValidationFailures
  commentId: P:FastEndpoints.BaseEndpoint.ValidationFailures
  parent: FastEndpoints.BaseEndpoint
  name: ValidationFailures
  nameWithType: BaseEndpoint.ValidationFailures
  fullName: FastEndpoints.BaseEndpoint.ValidationFailures
- uid: FastEndpoints.BaseEndpoint.Configure
  commentId: M:FastEndpoints.BaseEndpoint.Configure
  parent: FastEndpoints.BaseEndpoint
  name: Configure()
  nameWithType: BaseEndpoint.Configure()
  fullName: FastEndpoints.BaseEndpoint.Configure()
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.Configure
    name: Configure
    nameWithType: BaseEndpoint.Configure
    fullName: FastEndpoints.BaseEndpoint.Configure
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.Configure
    name: Configure
    nameWithType: BaseEndpoint.Configure
    fullName: FastEndpoints.BaseEndpoint.Configure
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.BaseEndpoint.FormFileSectionsAsync(CancellationToken)
  commentId: M:FastEndpoints.BaseEndpoint.FormFileSectionsAsync(CancellationToken)
  parent: FastEndpoints.BaseEndpoint
  isExternal: true
  name: FormFileSectionsAsync(CancellationToken)
  nameWithType: BaseEndpoint.FormFileSectionsAsync(CancellationToken)
  fullName: FastEndpoints.BaseEndpoint.FormFileSectionsAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.BaseEndpoint.FormFileSectionsAsync(CancellationToken)
    name: FormFileSectionsAsync
    nameWithType: BaseEndpoint.FormFileSectionsAsync
    fullName: FastEndpoints.BaseEndpoint.FormFileSectionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.BaseEndpoint.FormFileSectionsAsync(CancellationToken)
    name: FormFileSectionsAsync
    nameWithType: BaseEndpoint.FormFileSectionsAsync
    fullName: FastEndpoints.BaseEndpoint.FormFileSectionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Endpoint`2
  commentId: T:FastEndpoints.Endpoint`2
  name: Endpoint<TRequest, TResponse>
  nameWithType: Endpoint<TRequest, TResponse>
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>
  nameWithType.vb: Endpoint(Of TRequest, TResponse)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse)
  name.vb: Endpoint(Of TRequest, TResponse)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2
    name: Endpoint
    nameWithType: Endpoint
    fullName: FastEndpoints.Endpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.Endpoint`2
    name: Endpoint
    nameWithType: Endpoint
    fullName: FastEndpoints.Endpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest`1
  commentId: T:FastEndpoints.EndpointWithoutRequest`1
  name: EndpointWithoutRequest<TResponse>
  nameWithType: EndpointWithoutRequest<TResponse>
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>
  nameWithType.vb: EndpointWithoutRequest(Of TResponse)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse)
  name.vb: EndpointWithoutRequest(Of TResponse)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1
    name: EndpointWithoutRequest
    nameWithType: EndpointWithoutRequest
    fullName: FastEndpoints.EndpointWithoutRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1
    name: EndpointWithoutRequest
    nameWithType: EndpointWithoutRequest
    fullName: FastEndpoints.EndpointWithoutRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.IHasMapper`1
  commentId: T:FastEndpoints.IHasMapper`1
  name: IHasMapper<TMapper>
  nameWithType: IHasMapper<TMapper>
  fullName: FastEndpoints.IHasMapper<TMapper>
  nameWithType.vb: IHasMapper(Of TMapper)
  fullName.vb: FastEndpoints.IHasMapper(Of TMapper)
  name.vb: IHasMapper(Of TMapper)
  spec.csharp:
  - uid: FastEndpoints.IHasMapper`1
    name: IHasMapper
    nameWithType: IHasMapper
    fullName: FastEndpoints.IHasMapper
  - name: <
    nameWithType: <
    fullName: <
  - name: TMapper
    nameWithType: TMapper
    fullName: TMapper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.IHasMapper`1
    name: IHasMapper
    nameWithType: IHasMapper
    fullName: FastEndpoints.IHasMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMapper
    nameWithType: TMapper
    fullName: TMapper
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(CancellationToken)
  commentId: M:FastEndpoints.EndpointWithoutRequest`1.HandleAsync(CancellationToken)
  isExternal: true
  name: HandleAsync(CancellationToken)
  nameWithType: EndpointWithoutRequest<TResponse>.HandleAsync(CancellationToken)
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.HandleAsync(CancellationToken)
  nameWithType.vb: EndpointWithoutRequest(Of TResponse).HandleAsync(CancellationToken)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse).HandleAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(CancellationToken)
    name: HandleAsync
    nameWithType: EndpointWithoutRequest<TResponse>.HandleAsync
    fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(CancellationToken)
    name: HandleAsync
    nameWithType: EndpointWithoutRequest(Of TResponse).HandleAsync
    fullName: FastEndpoints.EndpointWithoutRequest(Of TResponse).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.EndpointWithoutRequest`1.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  isExternal: true
  name: HandleAsync(EmptyRequest, CancellationToken)
  nameWithType: EndpointWithoutRequest<TResponse>.HandleAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.HandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: EndpointWithoutRequest(Of TResponse).HandleAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse).HandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
    name: HandleAsync
    nameWithType: EndpointWithoutRequest<TResponse>.HandleAsync
    fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
    name: HandleAsync
    nameWithType: EndpointWithoutRequest(Of TResponse).HandleAsync
    fullName: FastEndpoints.EndpointWithoutRequest(Of TResponse).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(CancellationToken)
  commentId: M:FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(CancellationToken)
  isExternal: true
  name: ExecuteAsync(CancellationToken)
  nameWithType: EndpointWithoutRequest<TResponse>.ExecuteAsync(CancellationToken)
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.ExecuteAsync(CancellationToken)
  nameWithType.vb: EndpointWithoutRequest(Of TResponse).ExecuteAsync(CancellationToken)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse).ExecuteAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(CancellationToken)
    name: ExecuteAsync
    nameWithType: EndpointWithoutRequest<TResponse>.ExecuteAsync
    fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(CancellationToken)
    name: ExecuteAsync
    nameWithType: EndpointWithoutRequest(Of TResponse).ExecuteAsync
    fullName: FastEndpoints.EndpointWithoutRequest(Of TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
  isExternal: true
  name: ExecuteAsync(EmptyRequest, CancellationToken)
  nameWithType: EndpointWithoutRequest<TResponse>.ExecuteAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.ExecuteAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: EndpointWithoutRequest(Of TResponse).ExecuteAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse).ExecuteAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
    name: ExecuteAsync
    nameWithType: EndpointWithoutRequest<TResponse>.ExecuteAsync
    fullName: FastEndpoints.EndpointWithoutRequest<TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.EndpointWithoutRequest`1.ExecuteAsync(FastEndpoints.EmptyRequest,CancellationToken)
    name: ExecuteAsync
    nameWithType: EndpointWithoutRequest(Of TResponse).ExecuteAsync
    fullName: FastEndpoints.EndpointWithoutRequest(Of TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
  isExternal: true
  name: HandleAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
    name: HandleAsync
    nameWithType: Endpoint<TRequest, TResponse>.HandleAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
    name: HandleAsync
    nameWithType: Endpoint(Of TRequest, TResponse).HandleAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ExecuteAsync(`0,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.ExecuteAsync(`0,CancellationToken)
  isExternal: true
  name: ExecuteAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.ExecuteAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ExecuteAsync(TRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ExecuteAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ExecuteAsync(TRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ExecuteAsync(`0,CancellationToken)
    name: ExecuteAsync
    nameWithType: Endpoint<TRequest, TResponse>.ExecuteAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ExecuteAsync(`0,CancellationToken)
    name: ExecuteAsync
    nameWithType: Endpoint(Of TRequest, TResponse).ExecuteAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.TryResolve``1
  commentId: M:FastEndpoints.Endpoint`2.TryResolve``1
  name: TryResolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve<TService>()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.TryResolve``1
    name: TryResolve<TService>
    nameWithType: Endpoint<TRequest, TResponse>.TryResolve<TService>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.TryResolve``1
    name: TryResolve(Of TService)
    nameWithType: Endpoint(Of TRequest, TResponse).TryResolve(Of TService)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.TryResolve(Type)
  commentId: M:FastEndpoints.Endpoint`2.TryResolve(Type)
  isExternal: true
  name: TryResolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve(Type)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Type)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.TryResolve(Type)
    name: TryResolve
    nameWithType: Endpoint<TRequest, TResponse>.TryResolve
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.TryResolve(Type)
    name: TryResolve
    nameWithType: Endpoint(Of TRequest, TResponse).TryResolve
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Resolve``1
  commentId: M:FastEndpoints.Endpoint`2.Resolve``1
  name: Resolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.Resolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve<TService>()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Resolve``1
    name: Resolve<TService>
    nameWithType: Endpoint<TRequest, TResponse>.Resolve<TService>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Resolve``1
    name: Resolve(Of TService)
    nameWithType: Endpoint(Of TRequest, TResponse).Resolve(Of TService)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Resolve(Type)
  commentId: M:FastEndpoints.Endpoint`2.Resolve(Type)
  isExternal: true
  name: Resolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.Resolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve(Type)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Type)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Resolve(Type)
    name: Resolve
    nameWithType: Endpoint<TRequest, TResponse>.Resolve
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Resolve(Type)
    name: Resolve
    nameWithType: Endpoint(Of TRequest, TResponse).Resolve
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  isExternal: true
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
    name: PublishAsync<TEvent>
    nameWithType: Endpoint<TRequest, TResponse>.PublishAsync<TEvent>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
    name: PublishAsync(Of TEvent)
    nameWithType: Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
  isExternal: true
  name: Route<T>(String, Boolean)
  nameWithType: Endpoint<TRequest, TResponse>.Route<T>(String, Boolean)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Route<T>(System.String, System.Boolean)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Route(Of T)(String, Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Route(Of T)(System.String, System.Boolean)
  name.vb: Route(Of T)(String, Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
    name: Route<T>
    nameWithType: Endpoint<TRequest, TResponse>.Route<T>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Route<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Route``1(System.String,System.Boolean)
    name: Route(Of T)
    nameWithType: Endpoint(Of TRequest, TResponse).Route(Of T)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Route(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
  isExternal: true
  name: Query<T>(String, Boolean)
  nameWithType: Endpoint<TRequest, TResponse>.Query<T>(String, Boolean)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Query<T>(System.String, System.Boolean)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Query(Of T)(String, Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Query(Of T)(System.String, System.Boolean)
  name.vb: Query(Of T)(String, Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
    name: Query<T>
    nameWithType: Endpoint<TRequest, TResponse>.Query<T>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Query<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Query``1(System.String,System.Boolean)
    name: Query(Of T)
    nameWithType: Endpoint(Of TRequest, TResponse).Query(Of T)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Query(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
  name: OnBeforeValidate(TRequest)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidate(TRequest)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidate(TRequest)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidate(TRequest)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidate(TRequest)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
    name: OnBeforeValidate
    nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidate
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidate
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnBeforeValidate(`0)
    name: OnBeforeValidate
    nameWithType: Endpoint(Of TRequest, TResponse).OnBeforeValidate
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidate
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,CancellationToken)
  isExternal: true
  name: OnBeforeValidateAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidateAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidateAsync(TRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync(TRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,CancellationToken)
    name: OnBeforeValidateAsync
    nameWithType: Endpoint<TRequest, TResponse>.OnBeforeValidateAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnBeforeValidateAsync(`0,CancellationToken)
    name: OnBeforeValidateAsync
    nameWithType: Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnAfterValidate(`0)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterValidate(`0)
  name: OnAfterValidate(TRequest)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidate(TRequest)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidate(TRequest)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidate(TRequest)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidate(TRequest)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnAfterValidate(`0)
    name: OnAfterValidate
    nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidate
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidate
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnAfterValidate(`0)
    name: OnAfterValidate
    nameWithType: Endpoint(Of TRequest, TResponse).OnAfterValidate
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidate
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,CancellationToken)
  isExternal: true
  name: OnAfterValidateAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidateAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidateAsync(TRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterValidateAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidateAsync(TRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,CancellationToken)
    name: OnAfterValidateAsync
    nameWithType: Endpoint<TRequest, TResponse>.OnAfterValidateAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnAfterValidateAsync(`0,CancellationToken)
    name: OnAfterValidateAsync
    nameWithType: Endpoint(Of TRequest, TResponse).OnAfterValidateAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
  name: OnBeforeHandle(TRequest)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandle(TRequest)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandle(TRequest)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandle(TRequest)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandle(TRequest)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
    name: OnBeforeHandle
    nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandle
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnBeforeHandle(`0)
    name: OnBeforeHandle
    nameWithType: Endpoint(Of TRequest, TResponse).OnBeforeHandle
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,CancellationToken)
  isExternal: true
  name: OnBeforeHandleAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandleAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandleAsync(TRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync(TRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,CancellationToken)
    name: OnBeforeHandleAsync
    nameWithType: Endpoint<TRequest, TResponse>.OnBeforeHandleAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnBeforeHandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnBeforeHandleAsync(`0,CancellationToken)
    name: OnBeforeHandleAsync
    nameWithType: Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnBeforeHandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
  name: OnAfterHandle(TRequest, TResponse)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandle(TRequest, TResponse)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandle(TRequest, TResponse)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandle(TRequest, TResponse)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandle(TRequest, TResponse)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
    name: OnAfterHandle
    nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandle
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnAfterHandle(`0,`1)
    name: OnAfterHandle
    nameWithType: Endpoint(Of TRequest, TResponse).OnAfterHandle
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,CancellationToken)
  isExternal: true
  name: OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandleAsync(TRequest, TResponse, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,CancellationToken)
    name: OnAfterHandleAsync
    nameWithType: Endpoint<TRequest, TResponse>.OnAfterHandleAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnAfterHandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnAfterHandleAsync(`0,`1,CancellationToken)
    name: OnAfterHandleAsync
    nameWithType: Endpoint(Of TRequest, TResponse).OnAfterHandleAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnAfterHandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnValidationFailed
  commentId: M:FastEndpoints.Endpoint`2.OnValidationFailed
  name: OnValidationFailed()
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailed()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailed()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailed()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailed()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnValidationFailed
    name: OnValidationFailed
    nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailed
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnValidationFailed
    name: OnValidationFailed
    nameWithType: Endpoint(Of TRequest, TResponse).OnValidationFailed
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.OnValidationFailedAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.OnValidationFailedAsync(CancellationToken)
  isExternal: true
  name: OnValidationFailedAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailedAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailedAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).OnValidationFailedAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailedAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.OnValidationFailedAsync(CancellationToken)
    name: OnValidationFailedAsync
    nameWithType: Endpoint<TRequest, TResponse>.OnValidationFailedAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.OnValidationFailedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.OnValidationFailedAsync(CancellationToken)
    name: OnValidationFailedAsync
    nameWithType: Endpoint(Of TRequest, TResponse).OnValidationFailedAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).OnValidationFailedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ValidationFailed
  commentId: P:FastEndpoints.Endpoint`2.ValidationFailed
  name: ValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailed
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailed
- uid: FastEndpoints.Endpoint`2.User
  commentId: P:FastEndpoints.Endpoint`2.User
  name: User
  nameWithType: Endpoint<TRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.User
  nameWithType.vb: Endpoint(Of TRequest, TResponse).User
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).User
- uid: FastEndpoints.Endpoint`2.Response
  commentId: P:FastEndpoints.Endpoint`2.Response
  name: Response
  nameWithType: Endpoint<TRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Response
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Response
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Response
- uid: FastEndpoints.Endpoint`2.Env
  commentId: P:FastEndpoints.Endpoint`2.Env
  name: Env
  nameWithType: Endpoint<TRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Env
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Env
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Env
- uid: FastEndpoints.Endpoint`2.Logger
  commentId: P:FastEndpoints.Endpoint`2.Logger
  name: Logger
  nameWithType: Endpoint<TRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Logger
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Logger
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Logger
- uid: FastEndpoints.Endpoint`2.BaseURL
  commentId: P:FastEndpoints.Endpoint`2.BaseURL
  name: BaseURL
  nameWithType: Endpoint<TRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.BaseURL
  nameWithType.vb: Endpoint(Of TRequest, TResponse).BaseURL
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).BaseURL
- uid: FastEndpoints.Endpoint`2.HttpMethod
  commentId: P:FastEndpoints.Endpoint`2.HttpMethod
  name: HttpMethod
  nameWithType: Endpoint<TRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpMethod
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpMethod
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpMethod
- uid: FastEndpoints.Endpoint`2.Form
  commentId: P:FastEndpoints.Endpoint`2.Form
  name: Form
  nameWithType: Endpoint<TRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Form
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Form
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Form
- uid: FastEndpoints.Endpoint`2.Files
  commentId: P:FastEndpoints.Endpoint`2.Files
  name: Files
  nameWithType: Endpoint<TRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Files
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Files
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Files
- uid: FastEndpoints.Endpoint`2.ResponseStarted
  commentId: P:FastEndpoints.Endpoint`2.ResponseStarted
  name: ResponseStarted
  nameWithType: Endpoint<TRequest, TResponse>.ResponseStarted
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseStarted
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseStarted
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseStarted
- uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
  isExternal: true
  name: SendAsync(TResponse, Int32, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync(TResponse, System.Int32, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendAsync(TResponse, Int32, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync(TResponse, System.Int32, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
    name: SendAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
    name: SendAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
  isExternal: true
  name: SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(Object, TResponse, Nullable<Http>, Nullable<Int32>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>(System.Object, TResponse, System.Nullable<FastEndpoints.Http>, System.Nullable<System.Int32>, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)(Object, TResponse, Nullable(Of Http), Nullable(Of Int32), Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)(System.Object, TResponse, System.Nullable(Of FastEndpoints.Http), System.Nullable(Of System.Int32), System.Boolean, CancellationToken)
  name.vb: SendCreatedAtAsync(Of TEndpoint)(Object, TResponse, Nullable(Of Http), Nullable(Of Int32), Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
    name: SendCreatedAtAsync<TEndpoint>
    nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync<TEndpoint>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync``1(System.Object,`1,System.Nullable{FastEndpoints.Http},System.Nullable{System.Int32},System.Boolean,CancellationToken)
    name: SendCreatedAtAsync(Of TEndpoint)
    nameWithType: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(Of TEndpoint)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,CancellationToken)
  isExternal: true
  name: SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync(System.String, System.Object, TResponse, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(String, Object, TResponse, Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync(System.String, System.Object, TResponse, System.Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,CancellationToken)
    name: SendCreatedAtAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendCreatedAtAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendCreatedAtAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendCreatedAtAsync(System.String,System.Object,`1,System.Boolean,CancellationToken)
    name: SendCreatedAtAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendCreatedAtAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendCreatedAtAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
  isExternal: true
  name: SendStringAsync(String, Int32, String, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendStringAsync(String, Int32, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStringAsync(System.String, System.Int32, System.String, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStringAsync(String, Int32, String, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStringAsync(System.String, System.Int32, System.String, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
    name: SendStringAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendStringAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStringAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendStringAsync(System.String,System.Int32,System.String,CancellationToken)
    name: SendStringAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendStringAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStringAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendOkAsync(`1,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendOkAsync(`1,CancellationToken)
  isExternal: true
  name: SendOkAsync(TResponse, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync(TResponse, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync(TResponse, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync(TResponse, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync(TResponse, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync(`1,CancellationToken)
    name: SendOkAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync(`1,CancellationToken)
    name: SendOkAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendOkAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendOkAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendOkAsync(CancellationToken)
  isExternal: true
  name: SendOkAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync(CancellationToken)
    name: SendOkAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync(CancellationToken)
    name: SendOkAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendOkAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,CancellationToken)
  isExternal: true
  name: SendErrorsAsync(Int32, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync(Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync(System.Int32, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendErrorsAsync(Int32, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync(System.Int32, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,CancellationToken)
    name: SendErrorsAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendErrorsAsync(System.Int32,CancellationToken)
    name: SendErrorsAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendErrorsAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendNoContentAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendNoContentAsync(CancellationToken)
  isExternal: true
  name: SendNoContentAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNoContentAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendNoContentAsync(CancellationToken)
    name: SendNoContentAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendNoContentAsync(CancellationToken)
    name: SendNoContentAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendNoContentAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendNotFoundAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendNotFoundAsync(CancellationToken)
  isExternal: true
  name: SendNotFoundAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNotFoundAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendNotFoundAsync(CancellationToken)
    name: SendNotFoundAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendNotFoundAsync(CancellationToken)
    name: SendNotFoundAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendNotFoundAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendUnauthorizedAsync(CancellationToken)
  isExternal: true
  name: SendUnauthorizedAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync(CancellationToken)
    name: SendUnauthorizedAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync(CancellationToken)
    name: SendUnauthorizedAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendForbiddenAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendForbiddenAsync(CancellationToken)
  isExternal: true
  name: SendForbiddenAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendForbiddenAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendForbiddenAsync(CancellationToken)
    name: SendForbiddenAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendForbiddenAsync(CancellationToken)
    name: SendForbiddenAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendForbiddenAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
  isExternal: true
  name: SendRedirectAsync(String, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendRedirectAsync(String, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendRedirectAsync(System.String, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendRedirectAsync(String, Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendRedirectAsync(System.String, System.Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
    name: SendRedirectAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendRedirectAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendRedirectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendRedirectAsync(System.String,System.Boolean,CancellationToken)
    name: SendRedirectAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendRedirectAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendRedirectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
  isExternal: true
  name: SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendHeadersAsync(Action<IHeaderDictionary>, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendHeadersAsync(Action<Microsoft.AspNetCore.Http.IHeaderDictionary>, System.Int32, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendHeadersAsync(Action(Of IHeaderDictionary), Int32, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendHeadersAsync(Action(Of Microsoft.AspNetCore.Http.IHeaderDictionary), System.Int32, CancellationToken)
  name.vb: SendHeadersAsync(Action(Of IHeaderDictionary), Int32, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
    name: SendHeadersAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendHeadersAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendHeadersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendHeadersAsync(Action{Microsoft.AspNetCore.Http.IHeaderDictionary},System.Int32,CancellationToken)
    name: SendHeadersAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendHeadersAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendHeadersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.IHeaderDictionary
    name: IHeaderDictionary
    nameWithType: IHeaderDictionary
    fullName: Microsoft.AspNetCore.Http.IHeaderDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  isExternal: true
  name: SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync(Byte[], String, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync(System.Byte[], System.String, System.String, System.Nullable<DateTimeOffset>, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendBytesAsync(Byte(), String, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync(System.Byte(), System.String, System.String, System.Nullable(Of DateTimeOffset), System.Boolean, CancellationToken)
  name.vb: SendBytesAsync(Byte(), String, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendBytesAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendBytesAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendBytesAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  isExternal: true
  name: SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, System.String, System.Nullable<DateTimeOffset>, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendFileAsync(FileInfo, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync(FileInfo, System.String, System.Nullable(Of DateTimeOffset), System.Boolean, CancellationToken)
  name.vb: SendFileAsync(FileInfo, String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendFileAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendFileAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendFileAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
  isExternal: true
  name: SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, Nullable<DateTimeOffset>, Boolean, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, System.String, System.Nullable<System.Int64>, System.String, System.Nullable<DateTimeOffset>, System.Boolean, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStreamAsync(Stream, String, Nullable(Of Int64), String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync(Stream, System.String, System.Nullable(Of System.Int64), System.String, System.Nullable(Of DateTimeOffset), System.Boolean, CancellationToken)
  name.vb: SendStreamAsync(Stream, String, Nullable(Of Int64), String, Nullable(Of DateTimeOffset), Boolean, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendStreamAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,System.Nullable{DateTimeOffset},System.Boolean,CancellationToken)
    name: SendStreamAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendStreamAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,IAsyncEnumerable{``0},CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,IAsyncEnumerable{``0},CancellationToken)
  isExternal: true
  name: SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>(String, IAsyncEnumerable<T>, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>(System.String, IAsyncEnumerable<T>, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEventStreamAsync(Of T)(String, IAsyncEnumerable(Of T), CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEventStreamAsync(Of T)(System.String, IAsyncEnumerable(Of T), CancellationToken)
  name.vb: SendEventStreamAsync(Of T)(String, IAsyncEnumerable(Of T), CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,IAsyncEnumerable{``0},CancellationToken)
    name: SendEventStreamAsync<T>
    nameWithType: Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEventStreamAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendEventStreamAsync``1(System.String,IAsyncEnumerable{``0},CancellationToken)
    name: SendEventStreamAsync(Of T)
    nameWithType: Endpoint(Of TRequest, TResponse).SendEventStreamAsync(Of T)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEventStreamAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendEmptyJsonObject(CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendEmptyJsonObject(CancellationToken)
  isExternal: true
  name: SendEmptyJsonObject(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendEmptyJsonObject(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEmptyJsonObject(CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendEmptyJsonObject(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEmptyJsonObject(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendEmptyJsonObject(CancellationToken)
    name: SendEmptyJsonObject
    nameWithType: Endpoint<TRequest, TResponse>.SendEmptyJsonObject
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendEmptyJsonObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendEmptyJsonObject(CancellationToken)
    name: SendEmptyJsonObject
    nameWithType: Endpoint(Of TRequest, TResponse).SendEmptyJsonObject
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendEmptyJsonObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Get(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Get(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Get(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Get(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Get(System.String[])
    name: Get
    nameWithType: Endpoint<TRequest, TResponse>.Get
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Get(System.String[])
    name: Get
    nameWithType: Endpoint(Of TRequest, TResponse).Get
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Post(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Post(System.String[])
  isExternal: true
  name: Post(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Post(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Post(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Post(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Post(System.String())
  name.vb: Post(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Post(System.String[])
    name: Post
    nameWithType: Endpoint<TRequest, TResponse>.Post
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Post(System.String[])
    name: Post
    nameWithType: Endpoint(Of TRequest, TResponse).Post
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Put(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Put(System.String[])
  isExternal: true
  name: Put(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Put(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Put(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Put(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Put(System.String())
  name.vb: Put(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Put(System.String[])
    name: Put
    nameWithType: Endpoint<TRequest, TResponse>.Put
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Put(System.String[])
    name: Put
    nameWithType: Endpoint(Of TRequest, TResponse).Put
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Patch(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Patch(System.String[])
  isExternal: true
  name: Patch(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Patch(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Patch(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Patch(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Patch(System.String())
  name.vb: Patch(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Patch(System.String[])
    name: Patch
    nameWithType: Endpoint<TRequest, TResponse>.Patch
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Patch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Patch(System.String[])
    name: Patch
    nameWithType: Endpoint(Of TRequest, TResponse).Patch
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Patch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Delete(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Delete(System.String[])
  isExternal: true
  name: Delete(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Delete(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Delete(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Delete(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Delete(System.String())
  name.vb: Delete(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Delete(System.String[])
    name: Delete
    nameWithType: Endpoint<TRequest, TResponse>.Delete
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Delete(System.String[])
    name: Delete
    nameWithType: Endpoint(Of TRequest, TResponse).Delete
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Head(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Head(System.String[])
  isExternal: true
  name: Head(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Head(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Head(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Head(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Head(System.String())
  name.vb: Head(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Head(System.String[])
    name: Head
    nameWithType: Endpoint<TRequest, TResponse>.Head
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Head
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Head(System.String[])
    name: Head
    nameWithType: Endpoint(Of TRequest, TResponse).Head
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Head
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Routes(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Routes(System.String[])
  isExternal: true
  name: Routes(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Routes(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Routes(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes(System.String())
  name.vb: Routes(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Routes(System.String[])
    name: Routes
    nameWithType: Endpoint<TRequest, TResponse>.Routes
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Routes(System.String[])
    name: Routes
    nameWithType: Endpoint(Of TRequest, TResponse).Routes
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  name: Verbs(Http[])
  nameWithType: Endpoint<TRequest, TResponse>.Verbs(Http[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs(FastEndpoints.Http[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs(Http())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs(FastEndpoints.Http())
  name.vb: Verbs(Http())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: Endpoint<TRequest, TResponse>.Verbs
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: Endpoint(Of TRequest, TResponse).Verbs
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  commentId: M:FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  name: DontThrowIfValidationFails()
  nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
    name: DontThrowIfValidationFails
    nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
    name: DontThrowIfValidationFails
    nameWithType: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.DontCatchExceptions
  commentId: M:FastEndpoints.Endpoint`2.DontCatchExceptions
  name: DontCatchExceptions()
  nameWithType: Endpoint<TRequest, TResponse>.DontCatchExceptions()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontCatchExceptions()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontCatchExceptions()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontCatchExceptions()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.DontCatchExceptions
    name: DontCatchExceptions
    nameWithType: Endpoint<TRequest, TResponse>.DontCatchExceptions
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontCatchExceptions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.DontCatchExceptions
    name: DontCatchExceptions
    nameWithType: Endpoint(Of TRequest, TResponse).DontCatchExceptions
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).DontCatchExceptions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
  commentId: M:FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
  name: RequestBinder(IRequestBinder<TRequest>)
  nameWithType: Endpoint<TRequest, TResponse>.RequestBinder(IRequestBinder<TRequest>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RequestBinder(FastEndpoints.IRequestBinder<TRequest>)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RequestBinder(IRequestBinder(Of TRequest))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RequestBinder(FastEndpoints.IRequestBinder(Of TRequest))
  name.vb: RequestBinder(IRequestBinder(Of TRequest))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
    name: RequestBinder
    nameWithType: Endpoint<TRequest, TResponse>.RequestBinder
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RequestBinder
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.RequestBinder(FastEndpoints.IRequestBinder{`0})
    name: RequestBinder
    nameWithType: Endpoint(Of TRequest, TResponse).RequestBinder
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).RequestBinder
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IRequestBinder`1
    name: IRequestBinder
    nameWithType: IRequestBinder
    fullName: FastEndpoints.IRequestBinder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.DontAutoTag
  commentId: M:FastEndpoints.Endpoint`2.DontAutoTag
  name: DontAutoTag()
  nameWithType: Endpoint<TRequest, TResponse>.DontAutoTag()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontAutoTag()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontAutoTag()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontAutoTag()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.DontAutoTag
    name: DontAutoTag
    nameWithType: Endpoint<TRequest, TResponse>.DontAutoTag
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontAutoTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.DontAutoTag
    name: DontAutoTag
    nameWithType: Endpoint(Of TRequest, TResponse).DontAutoTag
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).DontAutoTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
  name: AllowAnonymous(Http[])
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous(Http[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous(FastEndpoints.Http[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnonymous(Http())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous(FastEndpoints.Http())
  name.vb: AllowAnonymous(Http())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
    name: AllowAnonymous
    nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowAnonymous(FastEndpoints.Http[])
    name: AllowAnonymous
    nameWithType: Endpoint(Of TRequest, TResponse).AllowAnonymous
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
  isExternal: true
  name: AllowFileUploads(Boolean)
  nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads(Boolean)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads(System.Boolean)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFileUploads(Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads(System.Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
    name: AllowFileUploads
    nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowFileUploads(System.Boolean)
    name: AllowFileUploads
    nameWithType: Endpoint(Of TRequest, TResponse).AllowFileUploads
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AllowFormData
  commentId: M:FastEndpoints.Endpoint`2.AllowFormData
  name: AllowFormData()
  nameWithType: Endpoint<TRequest, TResponse>.AllowFormData()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFormData()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFormData()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFormData()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowFormData
    name: AllowFormData
    nameWithType: Endpoint<TRequest, TResponse>.AllowFormData
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFormData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowFormData
    name: AllowFormData
    nameWithType: Endpoint(Of TRequest, TResponse).AllowFormData
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFormData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Policies(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Policies(System.String[])
  isExternal: true
  name: Policies(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Policies(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policies(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies(System.String())
  name.vb: Policies(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Policies(System.String[])
    name: Policies
    nameWithType: Endpoint<TRequest, TResponse>.Policies
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Policies(System.String[])
    name: Policies
    nameWithType: Endpoint(Of TRequest, TResponse).Policies
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Roles(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Roles(System.String[])
  isExternal: true
  name: Roles(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Roles(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Roles(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles(System.String())
  name.vb: Roles(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Roles(System.String[])
    name: Roles
    nameWithType: Endpoint<TRequest, TResponse>.Roles
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Roles(System.String[])
    name: Roles
    nameWithType: Endpoint(Of TRequest, TResponse).Roles
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Permissions(System.String[])
  isExternal: true
  name: Permissions(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Permissions(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions(System.String())
  name.vb: Permissions(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
    name: Permissions
    nameWithType: Endpoint<TRequest, TResponse>.Permissions
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
    name: Permissions
    nameWithType: Endpoint(Of TRequest, TResponse).Permissions
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
  isExternal: true
  name: PermissionsAll(String[])
  nameWithType: Endpoint<TRequest, TResponse>.PermissionsAll(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PermissionsAll(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PermissionsAll(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PermissionsAll(System.String())
  name.vb: PermissionsAll(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
    name: PermissionsAll
    nameWithType: Endpoint<TRequest, TResponse>.PermissionsAll
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PermissionsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PermissionsAll(System.String[])
    name: PermissionsAll
    nameWithType: Endpoint(Of TRequest, TResponse).PermissionsAll
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).PermissionsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Claims(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Claims(System.String[])
  isExternal: true
  name: Claims(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Claims(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims(System.String())
  name.vb: Claims(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Claims(System.String[])
    name: Claims
    nameWithType: Endpoint<TRequest, TResponse>.Claims
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Claims(System.String[])
    name: Claims
    nameWithType: Endpoint(Of TRequest, TResponse).Claims
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
  isExternal: true
  name: ClaimsAll(String[])
  nameWithType: Endpoint<TRequest, TResponse>.ClaimsAll(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ClaimsAll(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ClaimsAll(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ClaimsAll(System.String())
  name.vb: ClaimsAll(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
    name: ClaimsAll
    nameWithType: Endpoint<TRequest, TResponse>.ClaimsAll
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ClaimsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ClaimsAll(System.String[])
    name: ClaimsAll
    nameWithType: Endpoint(Of TRequest, TResponse).ClaimsAll
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ClaimsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
  isExternal: true
  name: AuthSchemes(String[])
  nameWithType: Endpoint<TRequest, TResponse>.AuthSchemes(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AuthSchemes(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AuthSchemes(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AuthSchemes(System.String())
  name.vb: AuthSchemes(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
    name: AuthSchemes
    nameWithType: Endpoint<TRequest, TResponse>.AuthSchemes
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AuthSchemes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AuthSchemes(System.String[])
    name: AuthSchemes
    nameWithType: Endpoint(Of TRequest, TResponse).AuthSchemes
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AuthSchemes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  commentId: M:FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  name: PreProcessors(IPreProcessor<TRequest>[])
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessors(IPreProcessor<TRequest>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors(FastEndpoints.IPreProcessor<TRequest>[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessors(IPreProcessor(Of TRequest)())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors(FastEndpoints.IPreProcessor(Of TRequest)())
  name.vb: PreProcessors(IPreProcessor(Of TRequest)())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
    name: PreProcessors
    nameWithType: Endpoint<TRequest, TResponse>.PreProcessors
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
    name: PreProcessors
    nameWithType: Endpoint(Of TRequest, TResponse).PreProcessors
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  commentId: M:FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  name: PostProcessors(IPostProcessor<TRequest, TResponse>[])
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessors(IPostProcessor<TRequest, TResponse>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors(FastEndpoints.IPostProcessor<TRequest, TResponse>[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessors(IPostProcessor(Of TRequest, TResponse)())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors(FastEndpoints.IPostProcessor(Of TRequest, TResponse)())
  name.vb: PostProcessors(IPostProcessor(Of TRequest, TResponse)())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
    name: PostProcessors
    nameWithType: Endpoint<TRequest, TResponse>.PostProcessors
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
    name: PostProcessors
    nameWithType: Endpoint(Of TRequest, TResponse).PostProcessors
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  commentId: M:FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
  isExternal: true
  name: ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[])
  nameWithType: Endpoint<TRequest, TResponse>.ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseCache(System.Int32, Microsoft.AspNetCore.Mvc.ResponseCacheLocation, System.Boolean, System.String, System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseCache(System.Int32, Microsoft.AspNetCore.Mvc.ResponseCacheLocation, System.Boolean, System.String, System.String())
  name.vb: ResponseCache(Int32, ResponseCacheLocation, Boolean, String, String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
    name: ResponseCache
    nameWithType: Endpoint<TRequest, TResponse>.ResponseCache
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ResponseCache
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    name: ResponseCacheLocation
    nameWithType: ResponseCacheLocation
    fullName: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ResponseCache(System.Int32,Microsoft.AspNetCore.Mvc.ResponseCacheLocation,System.Boolean,System.String,System.String[])
    name: ResponseCache
    nameWithType: Endpoint(Of TRequest, TResponse).ResponseCache
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ResponseCache
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    name: ResponseCacheLocation
    nameWithType: ResponseCacheLocation
    fullName: Microsoft.AspNetCore.Mvc.ResponseCacheLocation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  commentId: M:FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  isExternal: true
  name: Options(Action<RouteHandlerBuilder>)
  nameWithType: Endpoint<TRequest, TResponse>.Options(Action<RouteHandlerBuilder>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options(Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Options(Action(Of RouteHandlerBuilder))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Options(Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder))
  name.vb: Options(Action(Of RouteHandlerBuilder))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
    name: Options
    nameWithType: Endpoint<TRequest, TResponse>.Options
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
    name: Options
    nameWithType: Endpoint(Of TRequest, TResponse).Options
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Options
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
  isExternal: true
  name: Description(Action<RouteHandlerBuilder>, Boolean)
  nameWithType: Endpoint<TRequest, TResponse>.Description(Action<RouteHandlerBuilder>, Boolean)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Description(Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>, System.Boolean)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Description(Action(Of RouteHandlerBuilder), Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Description(Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder), System.Boolean)
  name.vb: Description(Action(Of RouteHandlerBuilder), Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
    name: Description
    nameWithType: Endpoint<TRequest, TResponse>.Description
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Description
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Description(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder},System.Boolean)
    name: Description
    nameWithType: Endpoint(Of TRequest, TResponse).Description
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Description
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary})
  commentId: M:FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary})
  isExternal: true
  name: Summary(Action<EndpointSummary>)
  nameWithType: Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary(Action<FastEndpoints.EndpointSummary>)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary(Action(Of EndpointSummary))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary(Action(Of FastEndpoints.EndpointSummary))
  name.vb: Summary(Action(Of EndpointSummary))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary})
    name: Summary
    nameWithType: Endpoint<TRequest, TResponse>.Summary
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary})
    name: Summary
    nameWithType: Endpoint(Of TRequest, TResponse).Summary
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary{`0}})
  commentId: M:FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary{`0}})
  isExternal: true
  name: Summary(Action<EndpointSummary<TRequest>>)
  nameWithType: Endpoint<TRequest, TResponse>.Summary(Action<EndpointSummary<TRequest>>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary(Action<FastEndpoints.EndpointSummary<TRequest>>)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary(Action(Of EndpointSummary(Of TRequest)))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary(Action(Of FastEndpoints.EndpointSummary(Of TRequest)))
  name.vb: Summary(Action(Of EndpointSummary(Of TRequest)))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary{`0}})
    name: Summary
    nameWithType: Endpoint<TRequest, TResponse>.Summary
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EndpointSummary`1
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Summary(Action{FastEndpoints.EndpointSummary{`0}})
    name: Summary
    nameWithType: Endpoint(Of TRequest, TResponse).Summary
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EndpointSummary`1
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
  commentId: M:FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
  name: Summary(EndpointSummary)
  nameWithType: Endpoint<TRequest, TResponse>.Summary(EndpointSummary)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary(FastEndpoints.EndpointSummary)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Summary(EndpointSummary)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary(FastEndpoints.EndpointSummary)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
    name: Summary
    nameWithType: Endpoint<TRequest, TResponse>.Summary
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Summary(FastEndpoints.EndpointSummary)
    name: Summary
    nameWithType: Endpoint(Of TRequest, TResponse).Summary
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Summary
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EndpointSummary
    name: EndpointSummary
    nameWithType: EndpointSummary
    fullName: FastEndpoints.EndpointSummary
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Tags(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Tags(System.String[])
  isExternal: true
  name: Tags(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Tags(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Tags(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Tags(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Tags(System.String())
  name.vb: Tags(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Tags(System.String[])
    name: Tags
    nameWithType: Endpoint<TRequest, TResponse>.Tags
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Tags
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Tags(System.String[])
    name: Tags
    nameWithType: Endpoint(Of TRequest, TResponse).Tags
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Tags
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
  commentId: M:FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
  isExternal: true
  name: Version(Int32, Nullable<Int32>)
  nameWithType: Endpoint<TRequest, TResponse>.Version(Int32, Nullable<Int32>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Version(System.Int32, System.Nullable<System.Int32>)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Version(Int32, Nullable(Of Int32))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Version(System.Int32, System.Nullable(Of System.Int32))
  name.vb: Version(Int32, Nullable(Of Int32))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
    name: Version
    nameWithType: Endpoint<TRequest, TResponse>.Version
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Version
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Version(System.Int32,System.Nullable{System.Int32})
    name: Version
    nameWithType: Endpoint(Of TRequest, TResponse).Version
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Version
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
  commentId: M:FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
  isExternal: true
  name: Throttle(Int32, Double, String)
  nameWithType: Endpoint<TRequest, TResponse>.Throttle(Int32, Double, String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Throttle(System.Int32, System.Double, System.String)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Throttle(Int32, Double, String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Throttle(System.Int32, System.Double, System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
    name: Throttle
    nameWithType: Endpoint<TRequest, TResponse>.Throttle
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Throttle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Throttle(System.Int32,System.Double,System.String)
    name: Throttle
    nameWithType: Endpoint(Of TRequest, TResponse).Throttle
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Throttle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SerializerContext``1(``0)
  commentId: M:FastEndpoints.Endpoint`2.SerializerContext``1(``0)
  name: SerializerContext<TContext>(TContext)
  nameWithType: Endpoint<TRequest, TResponse>.SerializerContext<TContext>(TContext)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SerializerContext<TContext>(TContext)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)(TContext)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)(TContext)
  name.vb: SerializerContext(Of TContext)(TContext)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SerializerContext``1(``0)
    name: SerializerContext<TContext>
    nameWithType: Endpoint<TRequest, TResponse>.SerializerContext<TContext>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SerializerContext<TContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SerializerContext``1(``0)
    name: SerializerContext(Of TContext)
    nameWithType: Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SerializerContext(Of TContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ScopedValidator
  commentId: M:FastEndpoints.Endpoint`2.ScopedValidator
  name: ScopedValidator()
  nameWithType: Endpoint<TRequest, TResponse>.ScopedValidator()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ScopedValidator()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ScopedValidator()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ScopedValidator()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ScopedValidator
    name: ScopedValidator
    nameWithType: Endpoint<TRequest, TResponse>.ScopedValidator
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ScopedValidator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ScopedValidator
    name: ScopedValidator
    nameWithType: Endpoint(Of TRequest, TResponse).ScopedValidator
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ScopedValidator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Validator``1(System.Boolean)
  commentId: M:FastEndpoints.Endpoint`2.Validator``1(System.Boolean)
  isExternal: true
  name: Validator<TValidator>(Boolean)
  nameWithType: Endpoint<TRequest, TResponse>.Validator<TValidator>(Boolean)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Validator<TValidator>(System.Boolean)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Validator(Of TValidator)(Boolean)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Validator(Of TValidator)(System.Boolean)
  name.vb: Validator(Of TValidator)(Boolean)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Validator``1(System.Boolean)
    name: Validator<TValidator>
    nameWithType: Endpoint<TRequest, TResponse>.Validator<TValidator>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Validator<TValidator>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Validator``1(System.Boolean)
    name: Validator(Of TValidator)
    nameWithType: Endpoint(Of TRequest, TResponse).Validator(Of TValidator)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Validator(Of TValidator)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
  commentId: M:FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
  isExternal: true
  name: RoutePrefixOverride(String)
  nameWithType: Endpoint<TRequest, TResponse>.RoutePrefixOverride(String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RoutePrefixOverride(System.String)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).RoutePrefixOverride(String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).RoutePrefixOverride(System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
    name: RoutePrefixOverride
    nameWithType: Endpoint<TRequest, TResponse>.RoutePrefixOverride
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.RoutePrefixOverride
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.RoutePrefixOverride(System.String)
    name: RoutePrefixOverride
    nameWithType: Endpoint(Of TRequest, TResponse).RoutePrefixOverride
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).RoutePrefixOverride
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
  isExternal: true
  name: AddError(String, String, Severity)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(String, String, Severity)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(System.String, System.String, FluentValidation.Severity)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(String, String, Severity)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(System.String, System.String, FluentValidation.Severity)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: Endpoint<TRequest, TResponse>.AddError
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: Endpoint(Of TRequest, TResponse).AddError
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  isExternal: true
  name: AddError(Expression<Func<TRequest, Object>>, String, String, Severity)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(Expression<Func<TRequest, Object>>, String, String, Severity)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(System.Linq.Expressions.Expression<Func<TRequest, System.Object>>, System.String, System.String, FluentValidation.Severity)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(Expression(Of Func(Of TRequest, Object)), String, String, Severity)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(System.Linq.Expressions.Expression(Of Func(Of TRequest, System.Object)), System.String, System.String, FluentValidation.Severity)
  name.vb: AddError(Expression(Of Func(Of TRequest, Object)), String, String, Severity)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: Endpoint<TRequest, TResponse>.AddError
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: Endpoint(Of TRequest, TResponse).AddError
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  commentId: M:FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  name: ThrowIfAnyErrors()
  nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.String)
  isExternal: true
  name: ThrowError(String)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(System.String)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
    name: ThrowError
    nameWithType: Endpoint<TRequest, TResponse>.ThrowError
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
    name: ThrowError
    nameWithType: Endpoint(Of TRequest, TResponse).ThrowError
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  isExternal: true
  name: ThrowError(Expression<Func<TRequest, Object>>, String)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(Expression<Func<TRequest, Object>>, String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(System.Linq.Expressions.Expression<Func<TRequest, System.Object>>, System.String)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(Expression(Of Func(Of TRequest, Object)), String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(System.Linq.Expressions.Expression(Of Func(Of TRequest, System.Object)), System.String)
  name.vb: ThrowError(Expression(Of Func(Of TRequest, Object)), String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: Endpoint<TRequest, TResponse>.ThrowError
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: Endpoint(Of TRequest, TResponse).ThrowError
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.EndpointWithoutRequest`2.Map*
  commentId: Overload:FastEndpoints.EndpointWithoutRequest`2.Map
  name: Map
  nameWithType: EndpointWithoutRequest<TResponse, TMapper>.Map
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse, TMapper>.Map
  nameWithType.vb: EndpointWithoutRequest(Of TResponse, TMapper).Map
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse, TMapper).Map
- uid: '{TMapper}'
  commentId: '!:TMapper'
  definition: TMapper
  name: TMapper
  nameWithType: TMapper
  fullName: TMapper
- uid: TMapper
  name: TMapper
  nameWithType: TMapper
  fullName: TMapper
