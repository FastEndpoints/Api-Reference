### YamlMime:ManagedReference
items:
- uid: FastEndpoints.HttpClientExtensions
  commentId: T:FastEndpoints.HttpClientExtensions
  id: HttpClientExtensions
  parent: FastEndpoints
  children:
  - FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient)
  - FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,System.String,``0)
  - FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,``1)
  - FastEndpoints.HttpClientExtensions.DELETEAsync``3(System.Net.Http.HttpClient,``1)
  - FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient)
  - FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,System.String,``0)
  - FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,``1)
  - FastEndpoints.HttpClientExtensions.GETAsync``3(System.Net.Http.HttpClient,``1)
  - FastEndpoints.HttpClientExtensions.PATCHAsync``2(System.Net.Http.HttpClient)
  - FastEndpoints.HttpClientExtensions.PATCHAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.PATCHAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.PATCHAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient)
  - FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.POSTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient)
  - FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.PUTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  - FastEndpoints.HttpClientExtensions.SENDAsync``2(System.Net.Http.HttpClient,System.Net.Http.HttpMethod,System.String,``0,System.Nullable{System.Boolean})
  langs:
  - csharp
  - vb
  name: HttpClientExtensions
  nameWithType: HttpClientExtensions
  fullName: FastEndpoints.HttpClientExtensions
  type: Class
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: a set of extensions to the httpclient in order to facilitate route-less integration testing
  example: []
  syntax:
    content: public static class HttpClientExtensions
    content.vb: Public Module HttpClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  id: POSTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: POSTAsync<TRequest, TResponse>(HttpClient, string, TRequest, bool?)
  nameWithType: HttpClientExtensions.POSTAsync<TRequest, TResponse>(HttpClient, string, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync<TRequest, TResponse>(System.Net.Http.HttpClient, string, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a POST request using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well

    as the <code class="typeparamref">TResponse</code> DTO/&gt;.
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> POSTAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request, bool? sendAsFormData = null)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: requestUri
      type: System.String
      description: the route url to post to
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TRequest
      description: type of the request dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function POSTAsync(Of TRequest, TResponse)(client As HttpClient, requestUri As String, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.POSTAsync*
  nameWithType.vb: HttpClientExtensions.POSTAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.POSTAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, String, TRequest, Boolean?)
  name.vb: POSTAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Boolean?)
- uid: FastEndpoints.HttpClientExtensions.POSTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.POSTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: POSTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: POSTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, bool?)
  nameWithType: HttpClientExtensions.POSTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync<TEndpoint, TRequest, TResponse>(System.Net.Http.HttpClient, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a POST request to an endpoint using auto route discovery using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the

    <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> POSTAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request, bool? sendAsFormData = null) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function POSTAsync(Of TEndpoint As IEndpoint, TRequest, TResponse)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.POSTAsync*
  nameWithType.vb: HttpClientExtensions.POSTAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.POSTAsync(Of TEndpoint, TRequest, TResponse)(System.Net.Http.HttpClient, TRequest, Boolean?)
  name.vb: POSTAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Boolean?)
- uid: FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: POSTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: POSTAsync<TEndpoint, TRequest>(HttpClient, TRequest, bool?)
  nameWithType: HttpClientExtensions.POSTAsync<TEndpoint, TRequest>(HttpClient, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync<TEndpoint, TRequest>(System.Net.Http.HttpClient, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: make a POST request to an endpoint using auto route discovery using a request dto that does not send back a response dto.
  example: []
  syntax:
    content: 'public static Task<HttpResponseMessage> POSTAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request, bool? sendAsFormData = null) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function POSTAsync(Of TEndpoint As IEndpoint, TRequest)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of HttpResponseMessage)
  overload: FastEndpoints.HttpClientExtensions.POSTAsync*
  nameWithType.vb: HttpClientExtensions.POSTAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.POSTAsync(Of TEndpoint, TRequest)(System.Net.Http.HttpClient, TRequest, Boolean?)
  name.vb: POSTAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Boolean?)
- uid: FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient)
  commentId: M:FastEndpoints.HttpClientExtensions.POSTAsync``2(System.Net.Http.HttpClient)
  id: POSTAsync``2(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: POSTAsync<TEndpoint, TResponse>(HttpClient)
  nameWithType: HttpClientExtensions.POSTAsync<TEndpoint, TResponse>(HttpClient)
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync<TEndpoint, TResponse>(System.Net.Http.HttpClient)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a POST request to an endpoint using auto route discovery without a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing

    the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> POSTAsync<TEndpoint, TResponse>(this HttpClient client) where TEndpoint : IEndpoint'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function POSTAsync(Of TEndpoint As IEndpoint, TResponse)(client As HttpClient) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.POSTAsync*
  nameWithType.vb: HttpClientExtensions.POSTAsync(Of TEndpoint, TResponse)(HttpClient)
  fullName.vb: FastEndpoints.HttpClientExtensions.POSTAsync(Of TEndpoint, TResponse)(System.Net.Http.HttpClient)
  name.vb: POSTAsync(Of TEndpoint, TResponse)(HttpClient)
- uid: FastEndpoints.HttpClientExtensions.PATCHAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.PATCHAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  id: PATCHAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PATCHAsync<TRequest, TResponse>(HttpClient, string, TRequest, bool?)
  nameWithType: HttpClientExtensions.PATCHAsync<TRequest, TResponse>(HttpClient, string, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.PATCHAsync<TRequest, TResponse>(System.Net.Http.HttpClient, string, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a PATCH request using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as

    well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> PATCHAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request, bool? sendAsFormData = null)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: requestUri
      type: System.String
      description: the route url to PATCH to
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TRequest
      description: type of the request dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function PATCHAsync(Of TRequest, TResponse)(client As HttpClient, requestUri As String, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.PATCHAsync*
  nameWithType.vb: HttpClientExtensions.PATCHAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.PATCHAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, String, TRequest, Boolean?)
  name.vb: PATCHAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Boolean?)
- uid: FastEndpoints.HttpClientExtensions.PATCHAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.PATCHAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: PATCHAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PATCHAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, bool?)
  nameWithType: HttpClientExtensions.PATCHAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.PATCHAsync<TEndpoint, TRequest, TResponse>(System.Net.Http.HttpClient, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a PATCH request to an endpoint using auto route discovery using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the

    <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> PATCHAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request, bool? sendAsFormData = null) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function PATCHAsync(Of TEndpoint As IEndpoint, TRequest, TResponse)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.PATCHAsync*
  nameWithType.vb: HttpClientExtensions.PATCHAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.PATCHAsync(Of TEndpoint, TRequest, TResponse)(System.Net.Http.HttpClient, TRequest, Boolean?)
  name.vb: PATCHAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Boolean?)
- uid: FastEndpoints.HttpClientExtensions.PATCHAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.PATCHAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: PATCHAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PATCHAsync<TEndpoint, TRequest>(HttpClient, TRequest, bool?)
  nameWithType: HttpClientExtensions.PATCHAsync<TEndpoint, TRequest>(HttpClient, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.PATCHAsync<TEndpoint, TRequest>(System.Net.Http.HttpClient, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: make a PATCH request to an endpoint using auto route discovery using a request dto that does not send back a response dto.
  example: []
  syntax:
    content: 'public static Task<HttpResponseMessage> PATCHAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request, bool? sendAsFormData = null) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PATCHAsync(Of TEndpoint As IEndpoint, TRequest)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of HttpResponseMessage)
  overload: FastEndpoints.HttpClientExtensions.PATCHAsync*
  nameWithType.vb: HttpClientExtensions.PATCHAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.PATCHAsync(Of TEndpoint, TRequest)(System.Net.Http.HttpClient, TRequest, Boolean?)
  name.vb: PATCHAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Boolean?)
- uid: FastEndpoints.HttpClientExtensions.PATCHAsync``2(System.Net.Http.HttpClient)
  commentId: M:FastEndpoints.HttpClientExtensions.PATCHAsync``2(System.Net.Http.HttpClient)
  id: PATCHAsync``2(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PATCHAsync<TEndpoint, TResponse>(HttpClient)
  nameWithType: HttpClientExtensions.PATCHAsync<TEndpoint, TResponse>(HttpClient)
  fullName: FastEndpoints.HttpClientExtensions.PATCHAsync<TEndpoint, TResponse>(System.Net.Http.HttpClient)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a PATCH request to an endpoint using auto route discovery without a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing

    the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> PATCHAsync<TEndpoint, TResponse>(this HttpClient client) where TEndpoint : IEndpoint'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function PATCHAsync(Of TEndpoint As IEndpoint, TResponse)(client As HttpClient) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.PATCHAsync*
  nameWithType.vb: HttpClientExtensions.PATCHAsync(Of TEndpoint, TResponse)(HttpClient)
  fullName.vb: FastEndpoints.HttpClientExtensions.PATCHAsync(Of TEndpoint, TResponse)(System.Net.Http.HttpClient)
  name.vb: PATCHAsync(Of TEndpoint, TResponse)(HttpClient)
- uid: FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  id: PUTAsync``2(System.Net.Http.HttpClient,System.String,``0,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PUTAsync<TRequest, TResponse>(HttpClient, string, TRequest, bool?)
  nameWithType: HttpClientExtensions.PUTAsync<TRequest, TResponse>(HttpClient, string, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync<TRequest, TResponse>(System.Net.Http.HttpClient, string, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a PUT request using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well

    as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> PUTAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request, bool? sendAsFormData = null)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: requestUri
      type: System.String
      description: the route url to post to
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TRequest
      description: type of the request dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function PUTAsync(Of TRequest, TResponse)(client As HttpClient, requestUri As String, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.PUTAsync*
  nameWithType.vb: HttpClientExtensions.PUTAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.PUTAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, String, TRequest, Boolean?)
  name.vb: PUTAsync(Of TRequest, TResponse)(HttpClient, String, TRequest, Boolean?)
- uid: FastEndpoints.HttpClientExtensions.PUTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.PUTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: PUTAsync``3(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PUTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, bool?)
  nameWithType: HttpClientExtensions.PUTAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync<TEndpoint, TRequest, TResponse>(System.Net.Http.HttpClient, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a PUT request to an endpoint using auto route discovery using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the

    <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> PUTAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request, bool? sendAsFormData = null) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function PUTAsync(Of TEndpoint As IEndpoint, TRequest, TResponse)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.PUTAsync*
  nameWithType.vb: HttpClientExtensions.PUTAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.PUTAsync(Of TEndpoint, TRequest, TResponse)(System.Net.Http.HttpClient, TRequest, Boolean?)
  name.vb: PUTAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest, Boolean?)
- uid: FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  id: PUTAsync``2(System.Net.Http.HttpClient,``1,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PUTAsync<TEndpoint, TRequest>(HttpClient, TRequest, bool?)
  nameWithType: HttpClientExtensions.PUTAsync<TEndpoint, TRequest>(HttpClient, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync<TEndpoint, TRequest>(System.Net.Http.HttpClient, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: make a PUT request to an endpoint using auto route discovery using a request dto that does not send back a response dto.
  example: []
  syntax:
    content: 'public static Task<HttpResponseMessage> PUTAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request, bool? sendAsFormData = null) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PUTAsync(Of TEndpoint As IEndpoint, TRequest)(client As HttpClient, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of HttpResponseMessage)
  overload: FastEndpoints.HttpClientExtensions.PUTAsync*
  nameWithType.vb: HttpClientExtensions.PUTAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.PUTAsync(Of TEndpoint, TRequest)(System.Net.Http.HttpClient, TRequest, Boolean?)
  name.vb: PUTAsync(Of TEndpoint, TRequest)(HttpClient, TRequest, Boolean?)
- uid: FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient)
  commentId: M:FastEndpoints.HttpClientExtensions.PUTAsync``2(System.Net.Http.HttpClient)
  id: PUTAsync``2(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PUTAsync<TEndpoint, TResponse>(HttpClient)
  nameWithType: HttpClientExtensions.PUTAsync<TEndpoint, TResponse>(HttpClient)
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync<TEndpoint, TResponse>(System.Net.Http.HttpClient)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a PUT request to an endpoint using auto route discovery without a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the

    <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> PUTAsync<TEndpoint, TResponse>(this HttpClient client) where TEndpoint : IEndpoint'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function PUTAsync(Of TEndpoint As IEndpoint, TResponse)(client As HttpClient) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.PUTAsync*
  nameWithType.vb: HttpClientExtensions.PUTAsync(Of TEndpoint, TResponse)(HttpClient)
  fullName.vb: FastEndpoints.HttpClientExtensions.PUTAsync(Of TEndpoint, TResponse)(System.Net.Http.HttpClient)
  name.vb: PUTAsync(Of TEndpoint, TResponse)(HttpClient)
- uid: FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,System.String,``0)
  commentId: M:FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,System.String,``0)
  id: GETAsync``2(System.Net.Http.HttpClient,System.String,``0)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: GETAsync<TRequest, TResponse>(HttpClient, string, TRequest)
  nameWithType: HttpClientExtensions.GETAsync<TRequest, TResponse>(HttpClient, string, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.GETAsync<TRequest, TResponse>(System.Net.Http.HttpClient, string, TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a GET request using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well

    as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> GETAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: requestUri
      type: System.String
      description: the route url to post to
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TRequest
      description: type of the request dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function GETAsync(Of TRequest, TResponse)(client As HttpClient, requestUri As String, request As TRequest) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.GETAsync*
  nameWithType.vb: HttpClientExtensions.GETAsync(Of TRequest, TResponse)(HttpClient, String, TRequest)
  fullName.vb: FastEndpoints.HttpClientExtensions.GETAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, String, TRequest)
  name.vb: GETAsync(Of TRequest, TResponse)(HttpClient, String, TRequest)
- uid: FastEndpoints.HttpClientExtensions.GETAsync``3(System.Net.Http.HttpClient,``1)
  commentId: M:FastEndpoints.HttpClientExtensions.GETAsync``3(System.Net.Http.HttpClient,``1)
  id: GETAsync``3(System.Net.Http.HttpClient,``1)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: GETAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest)
  nameWithType: HttpClientExtensions.GETAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.GETAsync<TEndpoint, TRequest, TResponse>(System.Net.Http.HttpClient, TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a GET request to an endpoint using auto route discovery using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the

    <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> GETAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function GETAsync(Of TEndpoint As IEndpoint, TRequest, TResponse)(client As HttpClient, request As TRequest) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.GETAsync*
  nameWithType.vb: HttpClientExtensions.GETAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest)
  fullName.vb: FastEndpoints.HttpClientExtensions.GETAsync(Of TEndpoint, TRequest, TResponse)(System.Net.Http.HttpClient, TRequest)
  name.vb: GETAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest)
- uid: FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,``1)
  commentId: M:FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient,``1)
  id: GETAsync``2(System.Net.Http.HttpClient,``1)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: GETAsync<TEndpoint, TRequest>(HttpClient, TRequest)
  nameWithType: HttpClientExtensions.GETAsync<TEndpoint, TRequest>(HttpClient, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.GETAsync<TEndpoint, TRequest>(System.Net.Http.HttpClient, TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: make a GET request to an endpoint using auto route discovery using a request dto that does not send back a response dto.
  example: []
  syntax:
    content: 'public static Task<HttpResponseMessage> GETAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function GETAsync(Of TEndpoint As IEndpoint, TRequest)(client As HttpClient, request As TRequest) As Task(Of HttpResponseMessage)
  overload: FastEndpoints.HttpClientExtensions.GETAsync*
  nameWithType.vb: HttpClientExtensions.GETAsync(Of TEndpoint, TRequest)(HttpClient, TRequest)
  fullName.vb: FastEndpoints.HttpClientExtensions.GETAsync(Of TEndpoint, TRequest)(System.Net.Http.HttpClient, TRequest)
  name.vb: GETAsync(Of TEndpoint, TRequest)(HttpClient, TRequest)
- uid: FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient)
  commentId: M:FastEndpoints.HttpClientExtensions.GETAsync``2(System.Net.Http.HttpClient)
  id: GETAsync``2(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: GETAsync<TEndpoint, TResponse>(HttpClient)
  nameWithType: HttpClientExtensions.GETAsync<TEndpoint, TResponse>(HttpClient)
  fullName: FastEndpoints.HttpClientExtensions.GETAsync<TEndpoint, TResponse>(System.Net.Http.HttpClient)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a GET request to an endpoint using auto route discovery without a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the

    <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> GETAsync<TEndpoint, TResponse>(this HttpClient client) where TEndpoint : IEndpoint'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function GETAsync(Of TEndpoint As IEndpoint, TResponse)(client As HttpClient) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.GETAsync*
  nameWithType.vb: HttpClientExtensions.GETAsync(Of TEndpoint, TResponse)(HttpClient)
  fullName.vb: FastEndpoints.HttpClientExtensions.GETAsync(Of TEndpoint, TResponse)(System.Net.Http.HttpClient)
  name.vb: GETAsync(Of TEndpoint, TResponse)(HttpClient)
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,System.String,``0)
  commentId: M:FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,System.String,``0)
  id: DELETEAsync``2(System.Net.Http.HttpClient,System.String,``0)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DELETEAsync<TRequest, TResponse>(HttpClient, string, TRequest)
  nameWithType: HttpClientExtensions.DELETEAsync<TRequest, TResponse>(HttpClient, string, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync<TRequest, TResponse>(System.Net.Http.HttpClient, string, TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a DELETE request using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as

    well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> DELETEAsync<TRequest, TResponse>(this HttpClient client, string requestUri, TRequest request)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: requestUri
      type: System.String
      description: the route url to post to
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TRequest
      description: type of the request dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function DELETEAsync(Of TRequest, TResponse)(client As HttpClient, requestUri As String, request As TRequest) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.DELETEAsync*
  nameWithType.vb: HttpClientExtensions.DELETEAsync(Of TRequest, TResponse)(HttpClient, String, TRequest)
  fullName.vb: FastEndpoints.HttpClientExtensions.DELETEAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, String, TRequest)
  name.vb: DELETEAsync(Of TRequest, TResponse)(HttpClient, String, TRequest)
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync``3(System.Net.Http.HttpClient,``1)
  commentId: M:FastEndpoints.HttpClientExtensions.DELETEAsync``3(System.Net.Http.HttpClient,``1)
  id: DELETEAsync``3(System.Net.Http.HttpClient,``1)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DELETEAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest)
  nameWithType: HttpClientExtensions.DELETEAsync<TEndpoint, TRequest, TResponse>(HttpClient, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync<TEndpoint, TRequest, TResponse>(System.Net.Http.HttpClient, TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a DELETE request to an endpoint using auto route discovery using a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing

    the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> DELETEAsync<TEndpoint, TRequest, TResponse>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function DELETEAsync(Of TEndpoint As IEndpoint, TRequest, TResponse)(client As HttpClient, request As TRequest) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.DELETEAsync*
  nameWithType.vb: HttpClientExtensions.DELETEAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest)
  fullName.vb: FastEndpoints.HttpClientExtensions.DELETEAsync(Of TEndpoint, TRequest, TResponse)(System.Net.Http.HttpClient, TRequest)
  name.vb: DELETEAsync(Of TEndpoint, TRequest, TResponse)(HttpClient, TRequest)
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,``1)
  commentId: M:FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient,``1)
  id: DELETEAsync``2(System.Net.Http.HttpClient,``1)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DELETEAsync<TEndpoint, TRequest>(HttpClient, TRequest)
  nameWithType: HttpClientExtensions.DELETEAsync<TEndpoint, TRequest>(HttpClient, TRequest)
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync<TEndpoint, TRequest>(System.Net.Http.HttpClient, TRequest)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: make a DELETE request to an endpoint using auto route discovery using a request dto that does not send back a response dto.
  example: []
  syntax:
    content: 'public static Task<HttpResponseMessage> DELETEAsync<TEndpoint, TRequest>(this HttpClient client, TRequest request) where TEndpoint : IEndpoint where TRequest : notnull'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: request
      type: '{TRequest}'
      description: the request dto
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TRequest
      description: the type of the request dto
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function DELETEAsync(Of TEndpoint As IEndpoint, TRequest)(client As HttpClient, request As TRequest) As Task(Of HttpResponseMessage)
  overload: FastEndpoints.HttpClientExtensions.DELETEAsync*
  nameWithType.vb: HttpClientExtensions.DELETEAsync(Of TEndpoint, TRequest)(HttpClient, TRequest)
  fullName.vb: FastEndpoints.HttpClientExtensions.DELETEAsync(Of TEndpoint, TRequest)(System.Net.Http.HttpClient, TRequest)
  name.vb: DELETEAsync(Of TEndpoint, TRequest)(HttpClient, TRequest)
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient)
  commentId: M:FastEndpoints.HttpClientExtensions.DELETEAsync``2(System.Net.Http.HttpClient)
  id: DELETEAsync``2(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DELETEAsync<TEndpoint, TResponse>(HttpClient)
  nameWithType: HttpClientExtensions.DELETEAsync<TEndpoint, TResponse>(HttpClient)
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync<TEndpoint, TResponse>(System.Net.Http.HttpClient)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    make a DELETE request to an endpoint using auto route discovery without a request dto and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing

    the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as well as the <code class="typeparamref">TResponse</code> DTO.
  example: []
  syntax:
    content: 'public static Task<TestResult<TResponse>> DELETEAsync<TEndpoint, TResponse>(this HttpClient client) where TEndpoint : IEndpoint'
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    typeParameters:
    - id: TEndpoint
      description: the type of the endpoint
    - id: TResponse
      description: the type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function DELETEAsync(Of TEndpoint As IEndpoint, TResponse)(client As HttpClient) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.DELETEAsync*
  nameWithType.vb: HttpClientExtensions.DELETEAsync(Of TEndpoint, TResponse)(HttpClient)
  fullName.vb: FastEndpoints.HttpClientExtensions.DELETEAsync(Of TEndpoint, TResponse)(System.Net.Http.HttpClient)
  name.vb: DELETEAsync(Of TEndpoint, TResponse)(HttpClient)
- uid: FastEndpoints.HttpClientExtensions.SENDAsync``2(System.Net.Http.HttpClient,System.Net.Http.HttpMethod,System.String,``0,System.Nullable{System.Boolean})
  commentId: M:FastEndpoints.HttpClientExtensions.SENDAsync``2(System.Net.Http.HttpClient,System.Net.Http.HttpMethod,System.String,``0,System.Nullable{System.Boolean})
  id: SENDAsync``2(System.Net.Http.HttpClient,System.Net.Http.HttpMethod,System.String,``0,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: FastEndpoints.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: SENDAsync<TRequest, TResponse>(HttpClient, HttpMethod, string, TRequest, bool?)
  nameWithType: HttpClientExtensions.SENDAsync<TRequest, TResponse>(HttpClient, HttpMethod, string, TRequest, bool?)
  fullName: FastEndpoints.HttpClientExtensions.SENDAsync<TRequest, TResponse>(System.Net.Http.HttpClient, System.Net.Http.HttpMethod, string, TRequest, bool?)
  type: Method
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: >-
    send a request DTO to a given endpoint URL and get back a <xref href="FastEndpoints.TestResult%601" data-throw-if-not-resolved="false"></xref> containing the <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> as

    well as the <code class="typeparamref">TResponse</code> DTO
  example: []
  syntax:
    content: public static Task<TestResult<TResponse>> SENDAsync<TRequest, TResponse>(this HttpClient client, HttpMethod method, string requestUri, TRequest request, bool? sendAsFormData = null)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
    - id: method
      type: System.Net.Http.HttpMethod
      description: the http method to use
    - id: requestUri
      type: System.String
      description: the route url of the endpoint
    - id: request
      type: '{TRequest}'
      description: the request dto
    - id: sendAsFormData
      type: System.Nullable{System.Boolean}
      description: when set to true, the request dto will be automatically converted to a <xref href="System.Net.Http.MultipartFormDataContent" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TRequest
      description: type of the request dto
    - id: TResponse
      description: type of the response dto
    return:
      type: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
    content.vb: Public Shared Function SENDAsync(Of TRequest, TResponse)(client As HttpClient, method As HttpMethod, requestUri As String, request As TRequest, sendAsFormData As Boolean? = Nothing) As Task(Of TestResult(Of TResponse))
  overload: FastEndpoints.HttpClientExtensions.SENDAsync*
  nameWithType.vb: HttpClientExtensions.SENDAsync(Of TRequest, TResponse)(HttpClient, HttpMethod, String, TRequest, Boolean?)
  fullName.vb: FastEndpoints.HttpClientExtensions.SENDAsync(Of TRequest, TResponse)(System.Net.Http.HttpClient, System.Net.Http.HttpMethod, String, TRequest, Boolean?)
  name.vb: SENDAsync(Of TRequest, TResponse)(HttpClient, HttpMethod, String, TRequest, Boolean?)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  href: FastEndpoints.html
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.TestResult`1
  commentId: T:FastEndpoints.TestResult`1
  href: FastEndpoints.TestResult-1.html
  name: TestResult<TResponse>
  nameWithType: TestResult<TResponse>
  fullName: FastEndpoints.TestResult<TResponse>
  nameWithType.vb: TestResult(Of TResponse)
  fullName.vb: FastEndpoints.TestResult(Of TResponse)
  name.vb: TestResult(Of TResponse)
  spec.csharp:
  - uid: FastEndpoints.TestResult`1
    name: TestResult
    href: FastEndpoints.TestResult-1.html
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.TestResult`1
    name: TestResult
    href: FastEndpoints.TestResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Net.Http.MultipartFormDataContent
  commentId: T:System.Net.Http.MultipartFormDataContent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.multipartformdatacontent
  name: MultipartFormDataContent
  nameWithType: MultipartFormDataContent
  fullName: System.Net.Http.MultipartFormDataContent
- uid: FastEndpoints.HttpClientExtensions.POSTAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.POSTAsync
  href: FastEndpoints.HttpClientExtensions.html#FastEndpoints_HttpClientExtensions_POSTAsync__2_System_Net_Http_HttpClient_System_String___0_System_Nullable_System_Boolean__
  name: POSTAsync
  nameWithType: HttpClientExtensions.POSTAsync
  fullName: FastEndpoints.HttpClientExtensions.POSTAsync
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Threading.Tasks.Task{FastEndpoints.TestResult{{TResponse}}}
  commentId: T:System.Threading.Tasks.Task{FastEndpoints.TestResult{``1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TestResult<TResponse>>
  nameWithType: Task<TestResult<TResponse>>
  fullName: System.Threading.Tasks.Task<FastEndpoints.TestResult<TResponse>>
  nameWithType.vb: Task(Of TestResult(Of TResponse))
  fullName.vb: System.Threading.Tasks.Task(Of FastEndpoints.TestResult(Of TResponse))
  name.vb: Task(Of TestResult(Of TResponse))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: FastEndpoints.TestResult`1
    name: TestResult
    href: FastEndpoints.TestResult-1.html
  - name: <
  - name: TResponse
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: FastEndpoints.TestResult`1
    name: TestResult
    href: FastEndpoints.TestResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
  - name: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: )
- uid: FastEndpoints.HttpClientExtensions.PATCHAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.PATCHAsync
  href: FastEndpoints.HttpClientExtensions.html#FastEndpoints_HttpClientExtensions_PATCHAsync__2_System_Net_Http_HttpClient_System_String___0_System_Nullable_System_Boolean__
  name: PATCHAsync
  nameWithType: HttpClientExtensions.PATCHAsync
  fullName: FastEndpoints.HttpClientExtensions.PATCHAsync
- uid: FastEndpoints.HttpClientExtensions.PUTAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.PUTAsync
  href: FastEndpoints.HttpClientExtensions.html#FastEndpoints_HttpClientExtensions_PUTAsync__2_System_Net_Http_HttpClient_System_String___0_System_Nullable_System_Boolean__
  name: PUTAsync
  nameWithType: HttpClientExtensions.PUTAsync
  fullName: FastEndpoints.HttpClientExtensions.PUTAsync
- uid: FastEndpoints.HttpClientExtensions.GETAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.GETAsync
  href: FastEndpoints.HttpClientExtensions.html#FastEndpoints_HttpClientExtensions_GETAsync__2_System_Net_Http_HttpClient_System_String___0_
  name: GETAsync
  nameWithType: HttpClientExtensions.GETAsync
  fullName: FastEndpoints.HttpClientExtensions.GETAsync
- uid: FastEndpoints.HttpClientExtensions.DELETEAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.DELETEAsync
  href: FastEndpoints.HttpClientExtensions.html#FastEndpoints_HttpClientExtensions_DELETEAsync__2_System_Net_Http_HttpClient_System_String___0_
  name: DELETEAsync
  nameWithType: HttpClientExtensions.DELETEAsync
  fullName: FastEndpoints.HttpClientExtensions.DELETEAsync
- uid: FastEndpoints.HttpClientExtensions.SENDAsync*
  commentId: Overload:FastEndpoints.HttpClientExtensions.SENDAsync
  href: FastEndpoints.HttpClientExtensions.html#FastEndpoints_HttpClientExtensions_SENDAsync__2_System_Net_Http_HttpClient_System_Net_Http_HttpMethod_System_String___0_System_Nullable_System_Boolean__
  name: SENDAsync
  nameWithType: HttpClientExtensions.SENDAsync
  fullName: FastEndpoints.HttpClientExtensions.SENDAsync
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpmethod
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
