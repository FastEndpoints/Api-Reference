### YamlMime:ManagedReference
items:
- uid: FastEndpoints.TestResult`1
  commentId: T:FastEndpoints.TestResult`1
  id: TestResult`1
  parent: FastEndpoints
  children:
  - FastEndpoints.TestResult`1.#ctor(System.Net.Http.HttpResponseMessage,`0)
  - FastEndpoints.TestResult`1.Response
  - FastEndpoints.TestResult`1.Result
  langs:
  - csharp
  - vb
  name: TestResult<TResponse>
  nameWithType: TestResult<TResponse>
  fullName: FastEndpoints.TestResult<TResponse>
  type: Class
  source:
    id: TestResult
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\TestResult.cs
    startLine: 8
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\na record encapsulating the http response as well as the resulting dto of a test execution\n"
  example: []
  syntax:
    content: 'public class TestResult<TResponse> : IEquatable<TestResult<TResponse>>'
    typeParameters:
    - id: TResponse
      description: the type of the response dto
    content.vb: >-
      Public Class TestResult(Of TResponse)

          Implements IEquatable(Of TestResult(Of TResponse))
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{FastEndpoints.TestResult`1}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TestResult(Of TResponse)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: FastEndpoints.TestResult(Of TResponse)
  name.vb: TestResult(Of TResponse)
- uid: FastEndpoints.TestResult`1.#ctor(System.Net.Http.HttpResponseMessage,`0)
  commentId: M:FastEndpoints.TestResult`1.#ctor(System.Net.Http.HttpResponseMessage,`0)
  id: '#ctor(System.Net.Http.HttpResponseMessage,`0)'
  parent: FastEndpoints.TestResult`1
  langs:
  - csharp
  - vb
  name: TestResult(HttpResponseMessage, TResponse)
  nameWithType: TestResult<TResponse>.TestResult(HttpResponseMessage, TResponse)
  fullName: FastEndpoints.TestResult<TResponse>.TestResult(System.Net.Http.HttpResponseMessage, TResponse)
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\TestResult.cs
    startLine: 8
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\na record encapsulating the http response as well as the resulting dto of a test execution\n"
  example: []
  syntax:
    content: public TestResult(HttpResponseMessage Response, TResponse Result)
    parameters:
    - id: Response
      type: System.Net.Http.HttpResponseMessage
      description: http response message object
    - id: Result
      type: '{TResponse}'
      description: the resulting dto object
    content.vb: Public Sub New(Response As HttpResponseMessage, Result As TResponse)
  overload: FastEndpoints.TestResult`1.#ctor*
  nameWithType.vb: TestResult(Of TResponse).TestResult(HttpResponseMessage, TResponse)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.TestResult(Of TResponse).TestResult(System.Net.Http.HttpResponseMessage, TResponse)
- uid: FastEndpoints.TestResult`1.Response
  commentId: P:FastEndpoints.TestResult`1.Response
  id: Response
  parent: FastEndpoints.TestResult`1
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: TestResult<TResponse>.Response
  fullName: FastEndpoints.TestResult<TResponse>.Response
  type: Property
  source:
    id: Response
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\TestResult.cs
    startLine: 8
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: http response message object
  example: []
  syntax:
    content: public HttpResponseMessage Response { get; set; }
    parameters: []
    return:
      type: System.Net.Http.HttpResponseMessage
    content.vb: Public Property Response As HttpResponseMessage
  overload: FastEndpoints.TestResult`1.Response*
  nameWithType.vb: TestResult(Of TResponse).Response
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.TestResult(Of TResponse).Response
- uid: FastEndpoints.TestResult`1.Result
  commentId: P:FastEndpoints.TestResult`1.Result
  id: Result
  parent: FastEndpoints.TestResult`1
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: TestResult<TResponse>.Result
  fullName: FastEndpoints.TestResult<TResponse>.Result
  type: Property
  source:
    id: Result
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Testing\TestResult.cs
    startLine: 8
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: the resulting dto object
  example: []
  syntax:
    content: public TResponse Result { get; set; }
    parameters: []
    return:
      type: '{TResponse}'
    content.vb: Public Property Result As TResponse
  overload: FastEndpoints.TestResult`1.Result*
  nameWithType.vb: TestResult(Of TResponse).Result
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.TestResult(Of TResponse).Result
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{FastEndpoints.TestResult`1}
  commentId: T:System.IEquatable{FastEndpoints.TestResult`1}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TestResult<TResponse>>
  nameWithType: IEquatable<TestResult<TResponse>>
  fullName: System.IEquatable<FastEndpoints.TestResult<TResponse>>
  nameWithType.vb: IEquatable(Of TestResult(Of TResponse))
  fullName.vb: System.IEquatable(Of FastEndpoints.TestResult(Of TResponse))
  name.vb: IEquatable(Of TestResult(Of TResponse))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.TestResult`1
    name: TestResult
    nameWithType: TestResult
    fullName: FastEndpoints.TestResult
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.TestResult`1
    name: TestResult
    nameWithType: TestResult
    fullName: FastEndpoints.TestResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.TestResult`1.#ctor*
  commentId: Overload:FastEndpoints.TestResult`1.#ctor
  name: TestResult
  nameWithType: TestResult<TResponse>.TestResult
  fullName: FastEndpoints.TestResult<TResponse>.TestResult
  nameWithType.vb: TestResult(Of TResponse).TestResult
  fullName.vb: FastEndpoints.TestResult(Of TResponse).TestResult
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: FastEndpoints.TestResult`1.Response*
  commentId: Overload:FastEndpoints.TestResult`1.Response
  name: Response
  nameWithType: TestResult<TResponse>.Response
  fullName: FastEndpoints.TestResult<TResponse>.Response
  nameWithType.vb: TestResult(Of TResponse).Response
  fullName.vb: FastEndpoints.TestResult(Of TResponse).Response
- uid: FastEndpoints.TestResult`1.Result*
  commentId: Overload:FastEndpoints.TestResult`1.Result
  name: Result
  nameWithType: TestResult<TResponse>.Result
  fullName: FastEndpoints.TestResult<TResponse>.Result
  nameWithType.vb: TestResult(Of TResponse).Result
  fullName.vb: FastEndpoints.TestResult(Of TResponse).Result
