### YamlMime:ManagedReference
items:
- uid: FastEndpoints.ValidationContext`1
  commentId: T:FastEndpoints.ValidationContext`1
  id: ValidationContext`1
  parent: FastEndpoints
  children:
  - FastEndpoints.ValidationContext`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.ValidationContext`1.Instance
  - FastEndpoints.ValidationContext`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: ValidationContext<T>
  nameWithType: ValidationContext<T>
  fullName: FastEndpoints.ValidationContext<T>
  type: Class
  source:
    id: ValidationContext
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Validation\ValidationContext.cs
    startLine: 49
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: 'public class ValidationContext<T> : ValidationContext'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class ValidationContext(Of T)

          Inherits ValidationContext
  inheritance:
  - System.Object
  - FastEndpoints.ValidationContext
  derivedClasses:
  - FastEndpoints.CommandHandlerBase`1
  inheritedMembers:
  - FastEndpoints.ValidationContext.ValidationFailures
  - FastEndpoints.ValidationContext.ValidationFailed
  - FastEndpoints.ValidationContext.AddError(FluentValidation.Results.ValidationFailure)
  - FastEndpoints.ValidationContext.AddError(System.String,System.String,FluentValidation.Severity)
  - FastEndpoints.ValidationContext.ThrowError(FluentValidation.Results.ValidationFailure,System.Nullable{System.Int32})
  - FastEndpoints.ValidationContext.ThrowError(System.String,System.Nullable{System.Int32})
  - FastEndpoints.ValidationContext.ThrowIfAnyErrors(System.Nullable{System.Int32})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ValidationContext(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: FastEndpoints.ValidationContext(Of T)
  name.vb: ValidationContext(Of T)
- uid: FastEndpoints.ValidationContext`1.Instance
  commentId: P:FastEndpoints.ValidationContext`1.Instance
  id: Instance
  parent: FastEndpoints.ValidationContext`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ValidationContext<T>.Instance
  fullName: FastEndpoints.ValidationContext<T>.Instance
  type: Property
  source:
    id: Instance
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Validation\ValidationContext.cs
    startLine: 51
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  syntax:
    content: public static ValidationContext<T> Instance { get; }
    parameters: []
    return:
      type: FastEndpoints.ValidationContext{{T}}
    content.vb: Public Shared ReadOnly Property Instance As ValidationContext(Of T)
  overload: FastEndpoints.ValidationContext`1.Instance*
  nameWithType.vb: ValidationContext(Of T).Instance
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: FastEndpoints.ValidationContext(Of T).Instance
- uid: FastEndpoints.ValidationContext`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.ValidationContext`1.AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  id: AddError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.ValidationContext`1
  langs:
  - csharp
  - vb
  name: AddError(Expression<Func<T, Object>>, String, String, Severity)
  nameWithType: ValidationContext<T>.AddError(Expression<Func<T, Object>>, String, String, Severity)
  fullName: FastEndpoints.ValidationContext<T>.AddError(System.Linq.Expressions.Expression<System.Func<T, System.Object>>, System.String, System.String, FluentValidation.Severity)
  type: Method
  source:
    id: AddError
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Validation\ValidationContext.cs
    startLine: 54
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public void AddError(Expression<Func<T, object>> property, string errorMessage, string errorCode = null, Severity severity = Severity.Error)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
    - id: errorMessage
      type: System.String
    - id: errorCode
      type: System.String
    - id: severity
      type: FluentValidation.Severity
    content.vb: Public Sub AddError(property As Expression(Of Func(Of T, Object)), errorMessage As String, errorCode As String = Nothing, severity As Severity = Severity.Error)
  overload: FastEndpoints.ValidationContext`1.AddError*
  nameWithType.vb: ValidationContext(Of T).AddError(Expression(Of Func(Of T, Object)), String, String, Severity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.ValidationContext(Of T).AddError(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), System.String, System.String, FluentValidation.Severity)
  name.vb: AddError(Expression(Of Func(Of T, Object)), String, String, Severity)
- uid: FastEndpoints.ValidationContext`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Int32})
  commentId: M:FastEndpoints.ValidationContext`1.ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Int32})
  id: ThrowError(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Int32})
  parent: FastEndpoints.ValidationContext`1
  langs:
  - csharp
  - vb
  name: ThrowError(Expression<Func<T, Object>>, String, Nullable<Int32>)
  nameWithType: ValidationContext<T>.ThrowError(Expression<Func<T, Object>>, String, Nullable<Int32>)
  fullName: FastEndpoints.ValidationContext<T>.ThrowError(System.Linq.Expressions.Expression<System.Func<T, System.Object>>, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    id: ThrowError
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Validation\ValidationContext.cs
    startLine: 58
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  example: []
  syntax:
    content: public void ThrowError(Expression<Func<T, object>> property, string errorMessage, int? statusCode = null)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
    - id: errorMessage
      type: System.String
    - id: statusCode
      type: System.Nullable{System.Int32}
    content.vb: Public Sub ThrowError(property As Expression(Of Func(Of T, Object)), errorMessage As String, statusCode As Integer? = Nothing)
  overload: FastEndpoints.ValidationContext`1.ThrowError*
  nameWithType.vb: ValidationContext(Of T).ThrowError(Expression(Of Func(Of T, Object)), String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.ValidationContext(Of T).ThrowError(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), System.String, System.Nullable(Of System.Int32))
  name.vb: ThrowError(Expression(Of Func(Of T, Object)), String, Nullable(Of Int32))
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.ValidationContext
  commentId: T:FastEndpoints.ValidationContext
  parent: FastEndpoints
  name: ValidationContext
  nameWithType: ValidationContext
  fullName: FastEndpoints.ValidationContext
- uid: FastEndpoints.ValidationContext.ValidationFailures
  commentId: P:FastEndpoints.ValidationContext.ValidationFailures
  parent: FastEndpoints.ValidationContext
  name: ValidationFailures
  nameWithType: ValidationContext.ValidationFailures
  fullName: FastEndpoints.ValidationContext.ValidationFailures
- uid: FastEndpoints.ValidationContext.ValidationFailed
  commentId: P:FastEndpoints.ValidationContext.ValidationFailed
  parent: FastEndpoints.ValidationContext
  name: ValidationFailed
  nameWithType: ValidationContext.ValidationFailed
  fullName: FastEndpoints.ValidationContext.ValidationFailed
- uid: FastEndpoints.ValidationContext.AddError(FluentValidation.Results.ValidationFailure)
  commentId: M:FastEndpoints.ValidationContext.AddError(FluentValidation.Results.ValidationFailure)
  parent: FastEndpoints.ValidationContext
  isExternal: true
  name: AddError(ValidationFailure)
  nameWithType: ValidationContext.AddError(ValidationFailure)
  fullName: FastEndpoints.ValidationContext.AddError(FluentValidation.Results.ValidationFailure)
  spec.csharp:
  - uid: FastEndpoints.ValidationContext.AddError(FluentValidation.Results.ValidationFailure)
    name: AddError
    nameWithType: ValidationContext.AddError
    fullName: FastEndpoints.ValidationContext.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.ValidationContext.AddError(FluentValidation.Results.ValidationFailure)
    name: AddError
    nameWithType: ValidationContext.AddError
    fullName: FastEndpoints.ValidationContext.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ValidationContext.AddError(System.String,System.String,FluentValidation.Severity)
  commentId: M:FastEndpoints.ValidationContext.AddError(System.String,System.String,FluentValidation.Severity)
  parent: FastEndpoints.ValidationContext
  isExternal: true
  name: AddError(String, String, Severity)
  nameWithType: ValidationContext.AddError(String, String, Severity)
  fullName: FastEndpoints.ValidationContext.AddError(System.String, System.String, FluentValidation.Severity)
  spec.csharp:
  - uid: FastEndpoints.ValidationContext.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: ValidationContext.AddError
    fullName: FastEndpoints.ValidationContext.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.ValidationContext.AddError(System.String,System.String,FluentValidation.Severity)
    name: AddError
    nameWithType: ValidationContext.AddError
    fullName: FastEndpoints.ValidationContext.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FluentValidation.Severity
    name: Severity
    nameWithType: Severity
    fullName: FluentValidation.Severity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ValidationContext.ThrowError(FluentValidation.Results.ValidationFailure,System.Nullable{System.Int32})
  commentId: M:FastEndpoints.ValidationContext.ThrowError(FluentValidation.Results.ValidationFailure,System.Nullable{System.Int32})
  parent: FastEndpoints.ValidationContext
  isExternal: true
  name: ThrowError(ValidationFailure, Nullable<Int32>)
  nameWithType: ValidationContext.ThrowError(ValidationFailure, Nullable<Int32>)
  fullName: FastEndpoints.ValidationContext.ThrowError(FluentValidation.Results.ValidationFailure, System.Nullable<System.Int32>)
  nameWithType.vb: ValidationContext.ThrowError(ValidationFailure, Nullable(Of Int32))
  fullName.vb: FastEndpoints.ValidationContext.ThrowError(FluentValidation.Results.ValidationFailure, System.Nullable(Of System.Int32))
  name.vb: ThrowError(ValidationFailure, Nullable(Of Int32))
  spec.csharp:
  - uid: FastEndpoints.ValidationContext.ThrowError(FluentValidation.Results.ValidationFailure,System.Nullable{System.Int32})
    name: ThrowError
    nameWithType: ValidationContext.ThrowError
    fullName: FastEndpoints.ValidationContext.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.ValidationContext.ThrowError(FluentValidation.Results.ValidationFailure,System.Nullable{System.Int32})
    name: ThrowError
    nameWithType: ValidationContext.ThrowError
    fullName: FastEndpoints.ValidationContext.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: FluentValidation.Results.ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: FluentValidation.Results.ValidationFailure
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ValidationContext.ThrowError(System.String,System.Nullable{System.Int32})
  commentId: M:FastEndpoints.ValidationContext.ThrowError(System.String,System.Nullable{System.Int32})
  parent: FastEndpoints.ValidationContext
  isExternal: true
  name: ThrowError(String, Nullable<Int32>)
  nameWithType: ValidationContext.ThrowError(String, Nullable<Int32>)
  fullName: FastEndpoints.ValidationContext.ThrowError(System.String, System.Nullable<System.Int32>)
  nameWithType.vb: ValidationContext.ThrowError(String, Nullable(Of Int32))
  fullName.vb: FastEndpoints.ValidationContext.ThrowError(System.String, System.Nullable(Of System.Int32))
  name.vb: ThrowError(String, Nullable(Of Int32))
  spec.csharp:
  - uid: FastEndpoints.ValidationContext.ThrowError(System.String,System.Nullable{System.Int32})
    name: ThrowError
    nameWithType: ValidationContext.ThrowError
    fullName: FastEndpoints.ValidationContext.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.ValidationContext.ThrowError(System.String,System.Nullable{System.Int32})
    name: ThrowError
    nameWithType: ValidationContext.ThrowError
    fullName: FastEndpoints.ValidationContext.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ValidationContext.ThrowIfAnyErrors(System.Nullable{System.Int32})
  commentId: M:FastEndpoints.ValidationContext.ThrowIfAnyErrors(System.Nullable{System.Int32})
  parent: FastEndpoints.ValidationContext
  isExternal: true
  name: ThrowIfAnyErrors(Nullable<Int32>)
  nameWithType: ValidationContext.ThrowIfAnyErrors(Nullable<Int32>)
  fullName: FastEndpoints.ValidationContext.ThrowIfAnyErrors(System.Nullable<System.Int32>)
  nameWithType.vb: ValidationContext.ThrowIfAnyErrors(Nullable(Of Int32))
  fullName.vb: FastEndpoints.ValidationContext.ThrowIfAnyErrors(System.Nullable(Of System.Int32))
  name.vb: ThrowIfAnyErrors(Nullable(Of Int32))
  spec.csharp:
  - uid: FastEndpoints.ValidationContext.ThrowIfAnyErrors(System.Nullable{System.Int32})
    name: ThrowIfAnyErrors
    nameWithType: ValidationContext.ThrowIfAnyErrors
    fullName: FastEndpoints.ValidationContext.ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.ValidationContext.ThrowIfAnyErrors(System.Nullable{System.Int32})
    name: ThrowIfAnyErrors
    nameWithType: ValidationContext.ThrowIfAnyErrors
    fullName: FastEndpoints.ValidationContext.ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.ValidationContext`1.Instance*
  commentId: Overload:FastEndpoints.ValidationContext`1.Instance
  name: Instance
  nameWithType: ValidationContext<T>.Instance
  fullName: FastEndpoints.ValidationContext<T>.Instance
  nameWithType.vb: ValidationContext(Of T).Instance
  fullName.vb: FastEndpoints.ValidationContext(Of T).Instance
- uid: FastEndpoints.ValidationContext{{T}}
  commentId: T:FastEndpoints.ValidationContext{`0}
  parent: FastEndpoints
  definition: FastEndpoints.ValidationContext`1
  name: ValidationContext<T>
  nameWithType: ValidationContext<T>
  fullName: FastEndpoints.ValidationContext<T>
  nameWithType.vb: ValidationContext(Of T)
  fullName.vb: FastEndpoints.ValidationContext(Of T)
  name.vb: ValidationContext(Of T)
  spec.csharp:
  - uid: FastEndpoints.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ValidationContext`1
  commentId: T:FastEndpoints.ValidationContext`1
  name: ValidationContext<T>
  nameWithType: ValidationContext<T>
  fullName: FastEndpoints.ValidationContext<T>
  nameWithType.vb: ValidationContext(Of T)
  fullName.vb: FastEndpoints.ValidationContext(Of T)
  name.vb: ValidationContext(Of T)
  spec.csharp:
  - uid: FastEndpoints.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.ValidationContext`1.AddError*
  commentId: Overload:FastEndpoints.ValidationContext`1.AddError
  name: AddError
  nameWithType: ValidationContext<T>.AddError
  fullName: FastEndpoints.ValidationContext<T>.AddError
  nameWithType.vb: ValidationContext(Of T).AddError
  fullName.vb: FastEndpoints.ValidationContext(Of T).AddError
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<T, Object>>
  nameWithType: Expression<Func<T, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, System.Object>>
  nameWithType.vb: Expression(Of Func(Of T, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object))
  name.vb: Expression(Of Func(Of T, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FluentValidation.Severity
  commentId: T:FluentValidation.Severity
  parent: FluentValidation
  isExternal: true
  name: Severity
  nameWithType: Severity
  fullName: FluentValidation.Severity
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: FluentValidation
  commentId: N:FluentValidation
  isExternal: true
  name: FluentValidation
  nameWithType: FluentValidation
  fullName: FluentValidation
- uid: FastEndpoints.ValidationContext`1.ThrowError*
  commentId: Overload:FastEndpoints.ValidationContext`1.ThrowError
  name: ThrowError
  nameWithType: ValidationContext<T>.ThrowError
  fullName: FastEndpoints.ValidationContext<T>.ThrowError
  nameWithType.vb: ValidationContext(Of T).ThrowError
  fullName.vb: FastEndpoints.ValidationContext(Of T).ThrowError
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
