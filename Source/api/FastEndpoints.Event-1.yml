### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Event`1
  commentId: T:FastEndpoints.Event`1
  id: Event`1
  parent: FastEndpoints
  children:
  - FastEndpoints.Event`1.#ctor(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}})
  - FastEndpoints.Event`1.PublishAsync(`0,FastEndpoints.Mode,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: Event<TEvent>
  nameWithType: Event<TEvent>
  fullName: FastEndpoints.Event<TEvent>
  type: Class
  source:
    id: Event
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Events\EventBus.cs
    startLine: 16
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nevent notification bus which uses an in-process pub/sub messaging system\n"
  example: []
  syntax:
    content: 'public class Event<TEvent> : EventBase'
    typeParameters:
    - id: TEvent
      description: the type of notification event dto
    content.vb: >-
      Public Class Event(Of TEvent)

          Inherits EventBase
  inheritance:
  - System.Object
  - FastEndpoints.EventBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Event(Of TEvent)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: FastEndpoints.Event(Of TEvent)
  name.vb: Event(Of TEvent)
- uid: FastEndpoints.Event`1.#ctor(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}})
  commentId: M:FastEndpoints.Event`1.#ctor(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}})
  id: '#ctor(System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}})'
  parent: FastEndpoints.Event`1
  langs:
  - csharp
  - vb
  name: Event(IEnumerable<IEventHandler<TEvent>>)
  nameWithType: Event<TEvent>.Event(IEnumerable<IEventHandler<TEvent>>)
  fullName: FastEndpoints.Event<TEvent>.Event(System.Collections.Generic.IEnumerable<FastEndpoints.IEventHandler<TEvent>>)
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Events\EventBus.cs
    startLine: 24
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ninstantiates an event bus for the given event dto type.\n"
  example: []
  syntax:
    content: public Event(IEnumerable<IEventHandler<TEvent>> eventHandlers = null)
    parameters:
    - id: eventHandlers
      type: System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{{TEvent}}}
      description: a collection of concrete event handler implementations that should receive notifications from this event bus
    content.vb: Public Sub New(eventHandlers As IEnumerable(Of IEventHandler(Of TEvent)) = Nothing)
  overload: FastEndpoints.Event`1.#ctor*
  nameWithType.vb: Event(Of TEvent).Event(IEnumerable(Of IEventHandler(Of TEvent)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Event(Of TEvent).Event(System.Collections.Generic.IEnumerable(Of FastEndpoints.IEventHandler(Of TEvent)))
  name.vb: Event(IEnumerable(Of IEventHandler(Of TEvent)))
- uid: FastEndpoints.Event`1.PublishAsync(`0,FastEndpoints.Mode,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Event`1.PublishAsync(`0,FastEndpoints.Mode,System.Threading.CancellationToken)
  id: PublishAsync(`0,FastEndpoints.Mode,System.Threading.CancellationToken)
  parent: FastEndpoints.Event`1
  langs:
  - csharp
  - vb
  name: PublishAsync(TEvent, Mode, CancellationToken)
  nameWithType: Event<TEvent>.PublishAsync(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.Event<TEvent>.PublishAsync(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
  type: Method
  source:
    id: PublishAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Messaging\Events\EventBus.cs
    startLine: 42
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\npublish the given model/dto to all the subscribers of the event notification\n"
  example: []
  syntax:
    content: public Task PublishAsync(TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = default(CancellationToken))
    parameters:
    - id: eventModel
      type: '{TEvent}'
      description: the notification event model/dto to publish
    - id: waitMode
      type: FastEndpoints.Mode
      description: specify whether to wait for none, any or all of the subscribers to complete their work
    - id: cancellation
      type: System.Threading.CancellationToken
      description: an optional cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: >-
        a Task that matches the wait mode specified.

        <xref href="FastEndpoints.Mode.WaitForNone" data-throw-if-not-resolved="false"></xref> returns an already completed Task (fire and forget).

        <xref href="FastEndpoints.Mode.WaitForAny" data-throw-if-not-resolved="false"></xref> returns a Task that will complete when any of the subscribers complete their work.

        <xref href="FastEndpoints.Mode.WaitForAll" data-throw-if-not-resolved="false"></xref> return a Task that will complete only when all of the subscribers complete their work.
    content.vb: Public Function PublishAsync(eventModel As TEvent, waitMode As Mode = Mode.WaitForAll, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Event`1.PublishAsync*
  nameWithType.vb: Event(Of TEvent).PublishAsync(TEvent, Mode, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Event(Of TEvent).PublishAsync(TEvent, FastEndpoints.Mode, System.Threading.CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.EventBase
  commentId: T:FastEndpoints.EventBase
  parent: FastEndpoints
  name: EventBase
  nameWithType: EventBase
  fullName: FastEndpoints.EventBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Event`1.#ctor*
  commentId: Overload:FastEndpoints.Event`1.#ctor
  name: Event
  nameWithType: Event<TEvent>.Event
  fullName: FastEndpoints.Event<TEvent>.Event
  nameWithType.vb: Event(Of TEvent).Event
  fullName.vb: FastEndpoints.Event(Of TEvent).Event
- uid: System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{{TEvent}}}
  commentId: T:System.Collections.Generic.IEnumerable{FastEndpoints.IEventHandler{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEventHandler<TEvent>>
  nameWithType: IEnumerable<IEventHandler<TEvent>>
  fullName: System.Collections.Generic.IEnumerable<FastEndpoints.IEventHandler<TEvent>>
  nameWithType.vb: IEnumerable(Of IEventHandler(Of TEvent))
  fullName.vb: System.Collections.Generic.IEnumerable(Of FastEndpoints.IEventHandler(Of TEvent))
  name.vb: IEnumerable(Of IEventHandler(Of TEvent))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.IEventHandler`1
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: FastEndpoints.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.IEventHandler`1
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: FastEndpoints.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: FastEndpoints.Mode.WaitForNone
  commentId: F:FastEndpoints.Mode.WaitForNone
  isExternal: true
- uid: FastEndpoints.Mode.WaitForAny
  commentId: F:FastEndpoints.Mode.WaitForAny
  isExternal: true
- uid: FastEndpoints.Mode.WaitForAll
  commentId: F:FastEndpoints.Mode.WaitForAll
  isExternal: true
- uid: FastEndpoints.Event`1.PublishAsync*
  commentId: Overload:FastEndpoints.Event`1.PublishAsync
  name: PublishAsync
  nameWithType: Event<TEvent>.PublishAsync
  fullName: FastEndpoints.Event<TEvent>.PublishAsync
  nameWithType.vb: Event(Of TEvent).PublishAsync
  fullName.vb: FastEndpoints.Event(Of TEvent).PublishAsync
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: FastEndpoints.Mode
  commentId: T:FastEndpoints.Mode
  parent: FastEndpoints
  name: Mode
  nameWithType: Mode
  fullName: FastEndpoints.Mode
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
