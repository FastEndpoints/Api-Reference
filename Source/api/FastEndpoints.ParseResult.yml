### YamlMime:ManagedReference
items:
- uid: FastEndpoints.ParseResult
  commentId: T:FastEndpoints.ParseResult
  id: ParseResult
  parent: FastEndpoints
  children:
  - FastEndpoints.ParseResult.#ctor(System.Boolean,System.Object)
  - FastEndpoints.ParseResult.IsSuccess
  - FastEndpoints.ParseResult.Value
  langs:
  - csharp
  - vb
  name: ParseResult
  nameWithType: ParseResult
  fullName: FastEndpoints.ParseResult
  type: Struct
  source:
    id: ParseResult
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\ParseResult.cs
    startLine: 5
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ndto used to hold the result of a value parsing operation\n"
  example: []
  syntax:
    content: public struct ParseResult
    content.vb: Public Structure ParseResult
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: FastEndpoints.ParseResult.IsSuccess
  commentId: P:FastEndpoints.ParseResult.IsSuccess
  id: IsSuccess
  parent: FastEndpoints.ParseResult
  langs:
  - csharp
  - vb
  name: IsSuccess
  nameWithType: ParseResult.IsSuccess
  fullName: FastEndpoints.ParseResult.IsSuccess
  type: Property
  source:
    id: IsSuccess
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\ParseResult.cs
    startLine: 10
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nwill be true if the parsing operation was a success\n"
  example: []
  syntax:
    content: public bool IsSuccess { readonly get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSuccess As Boolean
  overload: FastEndpoints.ParseResult.IsSuccess*
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.ParseResult.Value
  commentId: P:FastEndpoints.ParseResult.Value
  id: Value
  parent: FastEndpoints.ParseResult
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ParseResult.Value
  fullName: FastEndpoints.ParseResult.Value
  type: Property
  source:
    id: Value
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\ParseResult.cs
    startLine: 15
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nwill hold the parsed value if the parsing was successful\n"
  example: []
  syntax:
    content: public object Value { readonly get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Value As Object
  overload: FastEndpoints.ParseResult.Value*
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
- uid: FastEndpoints.ParseResult.#ctor(System.Boolean,System.Object)
  commentId: M:FastEndpoints.ParseResult.#ctor(System.Boolean,System.Object)
  id: '#ctor(System.Boolean,System.Object)'
  parent: FastEndpoints.ParseResult
  langs:
  - csharp
  - vb
  name: ParseResult(Boolean, Object)
  nameWithType: ParseResult.ParseResult(Boolean, Object)
  fullName: FastEndpoints.ParseResult.ParseResult(System.Boolean, System.Object)
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\ParseResult.cs
    startLine: 22
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nconstructor for initializsing a ParseResult instance\n"
  example: []
  syntax:
    content: public ParseResult(bool isSuccess, object value)
    parameters:
    - id: isSuccess
      type: System.Boolean
      description: set to true of parsing was successful
    - id: value
      type: System.Object
      description: set the value that was obtained from the parsing operation
    content.vb: Public Sub New(isSuccess As Boolean, value As Object)
  overload: FastEndpoints.ParseResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.ParseResult.IsSuccess*
  commentId: Overload:FastEndpoints.ParseResult.IsSuccess
  name: IsSuccess
  nameWithType: ParseResult.IsSuccess
  fullName: FastEndpoints.ParseResult.IsSuccess
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: FastEndpoints.ParseResult.Value*
  commentId: Overload:FastEndpoints.ParseResult.Value
  name: Value
  nameWithType: ParseResult.Value
  fullName: FastEndpoints.ParseResult.Value
- uid: FastEndpoints.ParseResult.#ctor*
  commentId: Overload:FastEndpoints.ParseResult.#ctor
  name: ParseResult
  nameWithType: ParseResult.ParseResult
  fullName: FastEndpoints.ParseResult.ParseResult
