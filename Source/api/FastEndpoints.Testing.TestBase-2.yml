### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Testing.TestBase`2
  commentId: T:FastEndpoints.Testing.TestBase`2
  id: TestBase`2
  parent: FastEndpoints.Testing
  children: []
  langs:
  - csharp
  - vb
  name: TestBase<TAppFixture, TState>
  nameWithType: TestBase<TAppFixture, TState>
  fullName: FastEndpoints.Testing.TestBase<TAppFixture, TState>
  type: Class
  assemblies:
  - FastEndpoints.Testing
  namespace: FastEndpoints.Testing
  summary: >-
    abstract class for implementing a test-class, which is a collection of integration tests that may be related to each other.

    test methods can be run in a given order by decorating the methods with <xref href="FastEndpoints.Testing.PriorityAttribute" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'public abstract class TestBase<TAppFixture, TState> : TestBase<TAppFixture>, IAsyncLifetime, IAsyncDisposable, IFaker, IClassFixture<TAppFixture>, IClassFixture<TState> where TAppFixture : BaseFixture where TState : StateFixture'
    typeParameters:
    - id: TAppFixture
      description: >-
        the type of the app fixture. an app fixture is an implementation of <xref href="FastEndpoints.Testing.AppFixture%601" data-throw-if-not-resolved="false"></xref> abstract class which is a uniquely configured

        running

        instance of your application being tested (sut). the app fixture instance is created only once before any of the test methods are executed and torn down

        after all

        test methods of the class have run. all test methods of the test-class will be accessing that same fixture instance per test run. the underlying WAF

        instance

        however is cached and reused per each derived app fixture type in order to speed up test execution. i.e. it's recommended to use the same derived app

        fixture type

        with multiple test-classes.
    - id: TState
      description: the type of the shared state fixture. implement a "state fixture" by inheriting <xref href="FastEndpoints.Testing.StateFixture" data-throw-if-not-resolved="false"></xref> abstract class.
    content.vb: Public MustInherit Class TestBase(Of TAppFixture As BaseFixture, TState As StateFixture) Inherits TestBase(Of TAppFixture) Implements IAsyncLifetime, IAsyncDisposable, IFaker, IClassFixture(Of TAppFixture), IClassFixture(Of TState)
  inheritance:
  - System.Object
  - FastEndpoints.Testing.TestBase
  - FastEndpoints.Testing.TestBase{{TAppFixture}}
  implements:
  - Xunit.IAsyncLifetime
  - System.IAsyncDisposable
  - FastEndpoints.Testing.IFaker
  - Xunit.IClassFixture{{TAppFixture}}
  - Xunit.IClassFixture{{TState}}
  inheritedMembers:
  - FastEndpoints.Testing.TestBase.Fake
  - FastEndpoints.Testing.TestBase.Context
  - FastEndpoints.Testing.TestBase.Cancellation
  - FastEndpoints.Testing.TestBase.Output
  - FastEndpoints.Testing.TestBase.SetupAsync
  - FastEndpoints.Testing.TestBase.TearDownAsync
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TestBase(Of TAppFixture, TState)
  fullName.vb: FastEndpoints.Testing.TestBase(Of TAppFixture, TState)
  name.vb: TestBase(Of TAppFixture, TState)
references:
- uid: FastEndpoints.Testing.PriorityAttribute
  commentId: T:FastEndpoints.Testing.PriorityAttribute
  href: FastEndpoints.Testing.PriorityAttribute.html
  name: PriorityAttribute
  nameWithType: PriorityAttribute
  fullName: FastEndpoints.Testing.PriorityAttribute
- uid: FastEndpoints.Testing.AppFixture`1
  commentId: T:FastEndpoints.Testing.AppFixture`1
  href: FastEndpoints.Testing.AppFixture-1.html
  name: AppFixture<TProgram>
  nameWithType: AppFixture<TProgram>
  fullName: FastEndpoints.Testing.AppFixture<TProgram>
  nameWithType.vb: AppFixture(Of TProgram)
  fullName.vb: FastEndpoints.Testing.AppFixture(Of TProgram)
  name.vb: AppFixture(Of TProgram)
  spec.csharp:
  - uid: FastEndpoints.Testing.AppFixture`1
    name: AppFixture
    href: FastEndpoints.Testing.AppFixture-1.html
  - name: <
  - name: TProgram
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.Testing.AppFixture`1
    name: AppFixture
    href: FastEndpoints.Testing.AppFixture-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TProgram
  - name: )
- uid: FastEndpoints.Testing.StateFixture
  commentId: T:FastEndpoints.Testing.StateFixture
  href: FastEndpoints.Testing.StateFixture.html
  name: StateFixture
  nameWithType: StateFixture
  fullName: FastEndpoints.Testing.StateFixture
- uid: FastEndpoints.Testing
  commentId: N:FastEndpoints.Testing
  href: FastEndpoints.html
  name: FastEndpoints.Testing
  nameWithType: FastEndpoints.Testing
  fullName: FastEndpoints.Testing
  spec.csharp:
  - uid: FastEndpoints
    name: FastEndpoints
    href: FastEndpoints.html
  - name: .
  - uid: FastEndpoints.Testing
    name: Testing
    href: FastEndpoints.Testing.html
  spec.vb:
  - uid: FastEndpoints
    name: FastEndpoints
    href: FastEndpoints.html
  - name: .
  - uid: FastEndpoints.Testing
    name: Testing
    href: FastEndpoints.Testing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FastEndpoints.Testing.TestBase
  commentId: T:FastEndpoints.Testing.TestBase
  parent: FastEndpoints.Testing
  href: FastEndpoints.Testing.TestBase.html
  name: TestBase
  nameWithType: TestBase
  fullName: FastEndpoints.Testing.TestBase
- uid: FastEndpoints.Testing.TestBase{{TAppFixture}}
  commentId: T:FastEndpoints.Testing.TestBase{`0}
  parent: FastEndpoints.Testing
  definition: FastEndpoints.Testing.TestBase`1
  href: FastEndpoints.Testing.TestBase-1.html
  name: TestBase<TAppFixture>
  nameWithType: TestBase<TAppFixture>
  fullName: FastEndpoints.Testing.TestBase<TAppFixture>
  nameWithType.vb: TestBase(Of TAppFixture)
  fullName.vb: FastEndpoints.Testing.TestBase(Of TAppFixture)
  name.vb: TestBase(Of TAppFixture)
  spec.csharp:
  - uid: FastEndpoints.Testing.TestBase`1
    name: TestBase
    href: FastEndpoints.Testing.TestBase-1.html
  - name: <
  - name: TAppFixture
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.Testing.TestBase`1
    name: TestBase
    href: FastEndpoints.Testing.TestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAppFixture
  - name: )
- uid: Xunit.IAsyncLifetime
  commentId: T:Xunit.IAsyncLifetime
  parent: Xunit
  isExternal: true
  name: IAsyncLifetime
  nameWithType: IAsyncLifetime
  fullName: Xunit.IAsyncLifetime
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: FastEndpoints.Testing.IFaker
  commentId: T:FastEndpoints.Testing.IFaker
  parent: FastEndpoints.Testing
  href: FastEndpoints.Testing.IFaker.html
  name: IFaker
  nameWithType: IFaker
  fullName: FastEndpoints.Testing.IFaker
- uid: Xunit.IClassFixture{{TAppFixture}}
  commentId: T:Xunit.IClassFixture{`0}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TAppFixture>
  nameWithType: IClassFixture<TAppFixture>
  fullName: Xunit.IClassFixture<TAppFixture>
  nameWithType.vb: IClassFixture(Of TAppFixture)
  fullName.vb: Xunit.IClassFixture(Of TAppFixture)
  name.vb: IClassFixture(Of TAppFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: <
  - name: TAppFixture
  - name: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TAppFixture
  - name: )
- uid: Xunit.IClassFixture{{TState}}
  commentId: T:Xunit.IClassFixture{`1}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<TState>
  nameWithType: IClassFixture<TState>
  fullName: Xunit.IClassFixture<TState>
  nameWithType.vb: IClassFixture(Of TState)
  fullName.vb: Xunit.IClassFixture(Of TState)
  name.vb: IClassFixture(Of TState)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: <
  - name: TState
  - name: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
- uid: FastEndpoints.Testing.TestBase.Fake
  commentId: P:FastEndpoints.Testing.TestBase.Fake
  parent: FastEndpoints.Testing.TestBase
  href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_Fake
  name: Fake
  nameWithType: TestBase.Fake
  fullName: FastEndpoints.Testing.TestBase.Fake
- uid: FastEndpoints.Testing.TestBase.Context
  commentId: P:FastEndpoints.Testing.TestBase.Context
  parent: FastEndpoints.Testing.TestBase
  href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_Context
  name: Context
  nameWithType: TestBase.Context
  fullName: FastEndpoints.Testing.TestBase.Context
- uid: FastEndpoints.Testing.TestBase.Cancellation
  commentId: P:FastEndpoints.Testing.TestBase.Cancellation
  parent: FastEndpoints.Testing.TestBase
  href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_Cancellation
  name: Cancellation
  nameWithType: TestBase.Cancellation
  fullName: FastEndpoints.Testing.TestBase.Cancellation
- uid: FastEndpoints.Testing.TestBase.Output
  commentId: P:FastEndpoints.Testing.TestBase.Output
  parent: FastEndpoints.Testing.TestBase
  href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_Output
  name: Output
  nameWithType: TestBase.Output
  fullName: FastEndpoints.Testing.TestBase.Output
- uid: FastEndpoints.Testing.TestBase.SetupAsync
  commentId: M:FastEndpoints.Testing.TestBase.SetupAsync
  parent: FastEndpoints.Testing.TestBase
  href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_SetupAsync
  name: SetupAsync()
  nameWithType: TestBase.SetupAsync()
  fullName: FastEndpoints.Testing.TestBase.SetupAsync()
  spec.csharp:
  - uid: FastEndpoints.Testing.TestBase.SetupAsync
    name: SetupAsync
    href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_SetupAsync
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.Testing.TestBase.SetupAsync
    name: SetupAsync
    href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_SetupAsync
  - name: (
  - name: )
- uid: FastEndpoints.Testing.TestBase.TearDownAsync
  commentId: M:FastEndpoints.Testing.TestBase.TearDownAsync
  parent: FastEndpoints.Testing.TestBase
  href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_TearDownAsync
  name: TearDownAsync()
  nameWithType: TestBase.TearDownAsync()
  fullName: FastEndpoints.Testing.TestBase.TearDownAsync()
  spec.csharp:
  - uid: FastEndpoints.Testing.TestBase.TearDownAsync
    name: TearDownAsync
    href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_TearDownAsync
  - name: (
  - name: )
  spec.vb:
  - uid: FastEndpoints.Testing.TestBase.TearDownAsync
    name: TearDownAsync
    href: FastEndpoints.Testing.TestBase.html#FastEndpoints_Testing_TestBase_TearDownAsync
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Testing.TestBase`1
  commentId: T:FastEndpoints.Testing.TestBase`1
  href: FastEndpoints.Testing.TestBase-1.html
  name: TestBase<TAppFixture>
  nameWithType: TestBase<TAppFixture>
  fullName: FastEndpoints.Testing.TestBase<TAppFixture>
  nameWithType.vb: TestBase(Of TAppFixture)
  fullName.vb: FastEndpoints.Testing.TestBase(Of TAppFixture)
  name.vb: TestBase(Of TAppFixture)
  spec.csharp:
  - uid: FastEndpoints.Testing.TestBase`1
    name: TestBase
    href: FastEndpoints.Testing.TestBase-1.html
  - name: <
  - name: TAppFixture
  - name: '>'
  spec.vb:
  - uid: FastEndpoints.Testing.TestBase`1
    name: TestBase
    href: FastEndpoints.Testing.TestBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAppFixture
  - name: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: true
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullName.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: <
  - name: TFixture
  - name: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TFixture
  - name: )
