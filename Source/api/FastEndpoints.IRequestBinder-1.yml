### YamlMime:ManagedReference
items:
- uid: FastEndpoints.IRequestBinder`1
  commentId: T:FastEndpoints.IRequestBinder`1
  id: IRequestBinder`1
  parent: FastEndpoints
  children:
  - FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,CancellationToken)
  langs:
  - csharp
  - vb
  name: IRequestBinder<TRequest>
  nameWithType: IRequestBinder<TRequest>
  fullName: FastEndpoints.IRequestBinder<TRequest>
  type: Interface
  source:
    id: IRequestBinder
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\IRequestBinder.cs
    startLine: 6
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ncreate custom request binders by implementing this interface. by registering a custom modelbinder for an endpoint will completely disable the built-in model binding and completely depend on your implementation of the custom binder to return a correctly populated request dto for the endpoint.\n"
  example: []
  syntax:
    content: >-
      public interface IRequestBinder<TRequest>

          where TRequest : new()
    typeParameters:
    - id: TRequest
      description: the type of the request dto
    content.vb: Public Interface IRequestBinder(Of TRequest As New)
  nameWithType.vb: IRequestBinder(Of TRequest)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest)
  name.vb: IRequestBinder(Of TRequest)
- uid: FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,CancellationToken)
  commentId: M:FastEndpoints.IRequestBinder`1.BindAsync(FastEndpoints.BinderContext,CancellationToken)
  id: BindAsync(FastEndpoints.BinderContext,CancellationToken)
  parent: FastEndpoints.IRequestBinder`1
  langs:
  - csharp
  - vb
  name: BindAsync(BinderContext, CancellationToken)
  nameWithType: IRequestBinder<TRequest>.BindAsync(BinderContext, CancellationToken)
  fullName: FastEndpoints.IRequestBinder<TRequest>.BindAsync(FastEndpoints.BinderContext, CancellationToken)
  type: Method
  source:
    id: BindAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Library\Src\Library\Binder\IRequestBinder.cs
    startLine: 14
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthis method will be called by the library for binding the incoming request data and return a populated request dto object.\naccess the incoming request data via the <code>RequestBinderContext</code> and populate a new request dto instance and return it from this method.\n"
  example: []
  syntax:
    content: ValueTask<TRequest> BindAsync(BinderContext ctx, CancellationToken ct)
    parameters:
    - id: ctx
      type: FastEndpoints.BinderContext
      description: request binder context encapsulating the incoming http request context, a list of validation failures for the endpoint, and an optional json serializer context.
    - id: ct
      type: CancellationToken
      description: cancellation token
    return:
      type: ValueTask{{TRequest}}
    content.vb: Function BindAsync(ctx As BinderContext, ct As CancellationToken) As ValueTask(Of TRequest)
  overload: FastEndpoints.IRequestBinder`1.BindAsync*
  nameWithType.vb: IRequestBinder(Of TRequest).BindAsync(BinderContext, CancellationToken)
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest).BindAsync(FastEndpoints.BinderContext, CancellationToken)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: FastEndpoints.IRequestBinder`1.BindAsync*
  commentId: Overload:FastEndpoints.IRequestBinder`1.BindAsync
  name: BindAsync
  nameWithType: IRequestBinder<TRequest>.BindAsync
  fullName: FastEndpoints.IRequestBinder<TRequest>.BindAsync
  nameWithType.vb: IRequestBinder(Of TRequest).BindAsync
  fullName.vb: FastEndpoints.IRequestBinder(Of TRequest).BindAsync
- uid: FastEndpoints.BinderContext
  commentId: T:FastEndpoints.BinderContext
  parent: FastEndpoints
  name: BinderContext
  nameWithType: BinderContext
  fullName: FastEndpoints.BinderContext
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: ValueTask{{TRequest}}
  commentId: '!:ValueTask{`0}'
  definition: ValueTask`1
  name: ValueTask<TRequest>
  nameWithType: ValueTask<TRequest>
  fullName: ValueTask<TRequest>
  nameWithType.vb: ValueTask(Of TRequest)
  fullName.vb: ValueTask(Of TRequest)
  name.vb: ValueTask(Of TRequest)
  spec.csharp:
  - uid: ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: ValueTask`1
  isExternal: true
  name: ValueTask<>
  nameWithType: ValueTask<>
  fullName: ValueTask<>
  nameWithType.vb: ValueTask(Of )
  fullName.vb: ValueTask(Of )
  name.vb: ValueTask(Of )
  spec.csharp:
  - uid: ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
